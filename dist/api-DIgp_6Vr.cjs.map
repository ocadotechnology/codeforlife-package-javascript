{"version":3,"file":"api-DIgp_6Vr.cjs","sources":["../src/hooks/api.tsx"],"sourcesContent":["import { type Dispatch, type SetStateAction, useState } from \"react\"\n\nexport type Pagination = { page: number; limit: number; offset: number }\nexport type SetPagination = Dispatch<\n  SetStateAction<{ page: number; limit: number }>\n>\nexport type UsePaginationOptions = Partial<{\n  page: number\n  limit: number\n}>\n\nexport function usePagination(\n  options?: UsePaginationOptions,\n): [Pagination, SetPagination] {\n  const { page = 0, limit = 150 } = options || {}\n\n  const [pagination, _setPagination] = useState<Pagination>({\n    page,\n    limit,\n    offset: page * limit,\n  })\n\n  const setPagination: SetPagination = value => {\n    _setPagination(({ page: previousPage, limit: previousLimit }) => {\n      const pagination =\n        typeof value === \"function\"\n          ? value({ page: previousPage, limit: previousLimit })\n          : value\n      let page = pagination.page\n      const limit = pagination.limit\n\n      if (limit !== previousLimit) page = 0\n\n      return { page, limit, offset: page * limit }\n    })\n  }\n\n  return [pagination, setPagination]\n}\n"],"names":["usePagination","options","page","limit","pagination","_setPagination","useState","value","previousPage","previousLimit"],"mappings":"sCAWO,SAASA,EACdC,EAC6B,CAC7B,KAAM,CAAE,KAAAC,EAAO,EAAG,MAAAC,EAAQ,GAAA,EAAQF,GAAW,CAAA,EAEvC,CAACG,EAAYC,CAAc,EAAIC,WAAqB,CACxD,KAAAJ,EACA,MAAAC,EACA,OAAQD,EAAOC,CAAA,CAChB,EAiBD,MAAO,CAACC,EAf6BG,GAAS,CAC5CF,EAAe,CAAC,CAAE,KAAMG,EAAc,MAAOC,KAAoB,CAC/D,MAAML,EACJ,OAAOG,GAAU,WACbA,EAAM,CAAE,KAAMC,EAAc,MAAOC,CAAA,CAAe,EAClDF,EACN,IAAIL,EAAOE,EAAW,KACtB,MAAMD,EAAQC,EAAW,MAEzB,OAAID,IAAUM,IAAeP,EAAO,GAE7B,CAAE,KAAAA,EAAM,MAAAC,EAAO,OAAQD,EAAOC,CAAAA,CACvC,CAAC,CACH,CAEiC,CACnC"}