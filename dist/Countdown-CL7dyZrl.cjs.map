{"version":3,"file":"Countdown-CL7dyZrl.cjs","sources":["../src/components/Countdown.tsx"],"sourcesContent":["import { type FC, useState } from \"react\"\nimport { Typography, type TypographyProps } from \"@mui/material\"\n\nimport { useCountdown } from \"../hooks\"\n\nexport interface CountdownProps extends Omit<TypographyProps, \"children\"> {\n  seconds: number\n  start?: boolean\n  onEnd: () => void\n}\n\nconst Countdown: FC<CountdownProps> = ({\n  seconds,\n  start = true,\n  onEnd,\n  ...typographyProps\n}) => {\n  seconds = Math.floor(seconds)\n  const _seconds = useCountdown(seconds)[0]\n  const [end, setEnd] = useState(!start)\n\n  if (_seconds === 0 && !end) {\n    setEnd(true)\n    onEnd()\n  }\n\n  seconds = Math.floor(_seconds % 60)\n  const minutes = Math.floor(_seconds / 60)\n\n  return (\n    <>\n      {_seconds > 0 && (\n        <Typography {...typographyProps}>\n          {minutes > 0 && `${minutes} ${minutes > 1 ? \"mins\" : \"min\"} `}\n          {seconds > 0 && `${seconds} ${seconds > 1 ? \"secs\" : \"sec\"}`}\n        </Typography>\n      )}\n    </>\n  )\n}\n\nexport default Countdown\n"],"names":["Countdown","seconds","start","onEnd","typographyProps","_seconds","useCountdown","end","setEnd","useState","minutes","jsxs","Typography"],"mappings":"iRAWA,MAAMA,EAAgC,CAAC,CACrC,QAAAC,EACA,MAAAC,EAAQ,GACR,MAAAC,EACA,GAAGC,CACL,IAAM,CACJH,EAAU,KAAK,MAAMA,CAAO,EAC5B,MAAMI,EAAWC,EAAAA,aAAaL,CAAO,EAAE,CAAC,EAClC,CAACM,EAAKC,CAAM,EAAIC,EAAAA,SAAS,CAACP,CAAK,EAEjCG,IAAa,GAAK,CAACE,IACrBC,EAAO,EAAI,EACXL,EAAA,GAGFF,EAAU,KAAK,MAAMI,EAAW,EAAE,EAClC,MAAMK,EAAU,KAAK,MAAML,EAAW,EAAE,EAExC,yBAEK,SAAAA,EAAW,GACVM,EAAAA,KAACC,EAAAA,WAAA,CAAY,GAAGR,EACb,SAAA,CAAAM,EAAU,GAAK,GAAGA,CAAO,IAAIA,EAAU,EAAI,OAAS,KAAK,IACzDT,EAAU,GAAK,GAAGA,CAAO,IAAIA,EAAU,EAAI,OAAS,KAAK,EAAA,CAAA,CAC5D,CAAA,CAEJ,CAEJ"}