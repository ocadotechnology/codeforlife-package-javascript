{"version":3,"file":"api-Cs4Y-WeI.js","sources":["../src/hooks/api.tsx"],"sourcesContent":["import { type Dispatch, type SetStateAction, useState } from \"react\"\n\nexport type Pagination = { page: number; limit: number; offset: number }\nexport type SetPagination = Dispatch<\n  SetStateAction<{ page: number; limit: number }>\n>\nexport type UsePaginationOptions = Partial<{\n  page: number\n  limit: number\n}>\n\nexport function usePagination(\n  options?: UsePaginationOptions,\n): [Pagination, SetPagination] {\n  const { page = 0, limit = 150 } = options || {}\n\n  const [pagination, _setPagination] = useState<Pagination>({\n    page,\n    limit,\n    offset: page * limit,\n  })\n\n  const setPagination: SetPagination = value => {\n    _setPagination(({ page: previousPage, limit: previousLimit }) => {\n      const pagination =\n        typeof value === \"function\"\n          ? value({ page: previousPage, limit: previousLimit })\n          : value\n      let page = pagination.page\n      const limit = pagination.limit\n\n      if (limit !== previousLimit) page = 0\n\n      return { page, limit, offset: page * limit }\n    })\n  }\n\n  return [pagination, setPagination]\n}\n"],"names":["usePagination","options","page","limit","pagination","_setPagination","useState","value","previousPage","previousLimit"],"mappings":";AAWO,SAASA,EACdC,GAC6B;AAC7B,QAAM,EAAE,MAAAC,IAAO,GAAG,OAAAC,IAAQ,IAAA,IAAQF,KAAW,CAAA,GAEvC,CAACG,GAAYC,CAAc,IAAIC,EAAqB;AAAA,IACxD,MAAAJ;AAAA,IACA,OAAAC;AAAA,IACA,QAAQD,IAAOC;AAAA,EAAA,CAChB;AAiBD,SAAO,CAACC,GAf6B,CAAAG,MAAS;AAC5C,IAAAF,EAAe,CAAC,EAAE,MAAMG,GAAc,OAAOC,QAAoB;AAC/D,YAAML,IACJ,OAAOG,KAAU,aACbA,EAAM,EAAE,MAAMC,GAAc,OAAOC,EAAA,CAAe,IAClDF;AACN,UAAIL,IAAOE,EAAW;AACtB,YAAMD,IAAQC,EAAW;AAEzB,aAAID,MAAUM,MAAeP,IAAO,IAE7B,EAAE,MAAAA,GAAM,OAAAC,GAAO,QAAQD,IAAOC,EAAAA;AAAAA,IACvC,CAAC;AAAA,EACH,CAEiC;AACnC;"}