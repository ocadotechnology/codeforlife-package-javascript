{"version":3,"file":"store.cjs.js","sources":["../../src/utils/store.ts"],"sourcesContent":["import type { Middleware, Reducer } from \"@reduxjs/toolkit\"\nimport { configureStore } from \"@reduxjs/toolkit\"\nimport { setupListeners } from \"@reduxjs/toolkit/query\"\n\n// The store setup is wrapped in `makeStore` to allow reuse\n// when setting up tests that need the same store config\nexport function makeStore<R extends Reducer>({\n  reducer,\n  middlewares = [],\n  preloadedState = {},\n}: {\n  reducer: R\n  middlewares?: Middleware[]\n  preloadedState?: Partial<ReturnType<R>>\n}) {\n  const store = configureStore({\n    reducer,\n    // Adding the api middleware enables caching, invalidation, polling,\n    // and other useful features of `rtk-query`.\n    middleware: getDefaultMiddleware => {\n      return getDefaultMiddleware().concat(middlewares)\n    },\n    preloadedState,\n  })\n\n  // configure listeners using the provided defaults\n  // optional, but required for `refetchOnFocus`/`refetchOnReconnect` behaviors\n  setupListeners(store.dispatch)\n\n  return store\n}\n"],"names":["makeStore","reducer","middlewares","preloadedState","store","configureStore","getDefaultMiddleware","setupListeners"],"mappings":"wJAMO,SAASA,EAA6B,CAC3C,QAAAC,EACA,YAAAC,EAAc,CAAA,EACd,eAAAC,EAAiB,CAAA,CACnB,EAIG,CACD,MAAMC,EAAQC,EAAAA,eAAe,CAC3B,QAAAJ,EAGA,WAAYK,GACHA,EAAA,EAAuB,OAAOJ,CAAW,EAElD,eAAAC,CAAA,CACD,EAIDI,OAAAA,EAAAA,eAAeH,EAAM,QAAQ,EAEtBA,CACT"}