"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const p=require("yup");function o(r=p.number()){return r.min(1)}function l(r,a,c={}){const{schema:e=p.string(),flags:t}=c;return e.matches(new RegExp(`^[${r}]*$`,t),a)}function n(r,a,c={}){const{spaces:e=!1,specialChars:t,...u}=c;let s=`can only contain: ${a}`;return e&&(r+=" ",s+=", spaces"),t&&(r+=t,s+=`, special characters (${t})`),l(r,s,u)}function i(r,a,c={}){let{flags:e="u"}=c;return e.includes("u")||(e+="u"),n(r,a,{...c,flags:e})}function h(r){return n("a-zA-Z","ASCII alpha characters (a-z, A-Z)",r)}function A(r){return n("a-z","lowercase ASCII alpha characters (a-z)",r)}function S(r){return n("A-Z","uppercase ASCII alpha characters (A-Z)",r)}function d(r){return n("0-9","ASCII numbers (0-9)",r)}function g(r){return n("a-zA-Z0-9","ASCII alphanumeric characters (a-z, A-Z, 0-9)",r)}function m(r){return n("a-z0-9","lowercase ASCII alphanumeric characters (a-z, 0-9)",r)}function f(r){return n("A-Z0-9","uppercase ASCII alphanumeric characters (A-Z, 0-9)",r)}function I(r){return i("\\p{L}","unicode alpha characters",r)}function C(r){return i("\\p{Ll}","lowercase unicode alpha characters",r)}function w(r){return i("\\p{Lu}","uppercase unicode alpha characters",r)}function y(r){return i("\\p{N}","unicode numbers",r)}function U(r){return i("\\p{L}\\p{N}","unicode alphanumeric characters",r)}function b(r){return i("\\p{Ll}\\p{N}","lowercase unicode alphanumeric characters",r)}function z(r){return i("\\p{Lu}\\p{N}","uppercase unicode alphanumeric characters",r)}function N(r,a,c){const{onError:e,...t}=c||{};try{return a.validateSync(r,t)}catch(u){if(u instanceof p.ValidationError){if(e)return e(u)}else throw u}}exports.asciiAlphaString=h;exports.asciiAlphanumericString=g;exports.asciiNumericString=d;exports.buildCharSet=n;exports.buildUnicodeCharSet=i;exports.lowercaseAsciiAlphaString=A;exports.lowercaseAsciiAlphanumericString=m;exports.lowercaseUnicodeAlphaString=C;exports.lowercaseUnicodeAlphanumericString=b;exports.matchesCharSet=l;exports.numericId=o;exports.tryValidateSync=N;exports.unicodeAlphaString=I;exports.unicodeAlphanumericString=U;exports.unicodeNumericString=y;exports.uppercaseAsciiAlphaString=S;exports.uppercaseAsciiAlphanumericString=f;exports.uppercaseUnicodeAlphaString=w;exports.uppercaseUnicodeAlphanumericString=z;
//# sourceMappingURL=schema.cjs.js.map
