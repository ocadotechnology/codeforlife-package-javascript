{"version":3,"file":"index.cjs.js","sources":["../../src/theme/ThemedBox.tsx","../../src/theme/index.ts"],"sourcesContent":["import {\n  Box,\n  type BoxProps,\n  type CSSObject,\n  type PaletteColor,\n  type SxProps,\n  type ThemeOptions,\n  ThemeProvider,\n  buttonClasses,\n  createTheme,\n  responsiveFontSizes,\n} from \"@mui/material\"\nimport {\n  Circle as CircleIcon,\n  Hexagon as HexagonIcon,\n} from \"@mui/icons-material\"\nimport type { CommonProps } from \"@mui/material/OverridableComponent\"\nimport type React from \"react\"\n\nimport { getStyleOverrides, includesClassNames } from \"../utils/theme\"\nimport { primary, secondary, tertiary } from \"./colors\"\nimport type Components from \"./components/_components\"\nimport palette from \"./palette\"\nimport { themeOptions } from \".\"\n\nexport interface ThemedBoxProps extends BoxProps {\n  options?: ThemeOptions\n  withShapes?: boolean\n  userType: \"teacher\" | \"student\" | \"independent\"\n  bgcolor?: string\n}\n\nconst ThemedBox: React.FC<ThemedBoxProps> = ({\n  options = themeOptions,\n  withShapes = false,\n  userType,\n  bgcolor,\n  children,\n  sx,\n  ...otherBoxProps\n}) => {\n  let circleColor: \"primary\" | \"secondary\" | \"tertiary\"\n  let hexagonColor: \"primary\" | \"secondary\" | \"tertiary\"\n  let contrastText: string\n  switch (userType) {\n    case \"teacher\":\n      bgcolor = bgcolor ?? primary[400]\n      circleColor = \"tertiary\"\n      hexagonColor = \"secondary\"\n      contrastText = (palette.primary as PaletteColor).contrastText\n      break\n    case \"student\":\n      bgcolor = bgcolor ?? tertiary[500]\n      circleColor = \"secondary\"\n      hexagonColor = \"primary\"\n      contrastText = palette.tertiary.contrastText\n      break\n    case \"independent\":\n      bgcolor = bgcolor ?? secondary[500]\n      circleColor = \"primary\"\n      hexagonColor = \"tertiary\"\n      contrastText = (palette.secondary as PaletteColor).contrastText\n      break\n  }\n\n  const commonIconSxProps: SxProps = {\n    display: { xs: \"none\", md: \"block\" },\n    fontSize: \"180px\",\n    position: \"absolute\",\n  }\n\n  const fontStyleOverrides = {\n    color: contrastText,\n    textDecorationColor: contrastText,\n  }\n\n  function overrideStyles(\n    ownerState: CommonProps,\n    styleOverrides: CSSObject,\n    componentKey: keyof Components,\n    muiClassName: string = \"root\",\n  ): CSSObject {\n    return {\n      // Get the original styles.\n      ...getStyleOverrides(\n        ownerState,\n        componentKey,\n        muiClassName,\n        options.components,\n      ),\n      // Override styles unless the class name 'no-override' is set.\n      ...(!includesClassNames(ownerState, [\"no-override\"]) && styleOverrides),\n    }\n  }\n\n  const theme = responsiveFontSizes(\n    createTheme({\n      ...options,\n      components: {\n        ...options.components,\n        MuiTypography: {\n          ...options.components?.MuiTypography,\n          styleOverrides: {\n            ...options.components?.MuiTypography?.styleOverrides,\n            root: ({ ownerState }) =>\n              overrideStyles(\n                ownerState,\n                {\n                  ...fontStyleOverrides,\n                },\n                \"MuiTypography\",\n              ),\n          },\n        },\n        MuiFormHelperText: {\n          ...options.components?.MuiFormHelperText,\n          styleOverrides: {\n            ...options.components?.MuiFormHelperText?.styleOverrides,\n            root: ({ ownerState }) =>\n              overrideStyles(\n                ownerState,\n                {\n                  ...fontStyleOverrides,\n                },\n                \"MuiFormHelperText\",\n              ),\n          },\n        },\n        MuiLink: {\n          ...options.components?.MuiLink,\n          styleOverrides: {\n            ...options.components?.MuiLink?.styleOverrides,\n            root: ({ ownerState }) =>\n              overrideStyles(\n                ownerState,\n                {\n                  ...fontStyleOverrides,\n                },\n                \"MuiLink\",\n              ),\n          },\n        },\n        MuiButton: {\n          ...options.components?.MuiButton,\n          styleOverrides: {\n            ...options.components?.MuiButton?.styleOverrides,\n            contained: ({ ownerState }) =>\n              overrideStyles(\n                ownerState,\n                {\n                  ...(userType === \"independent\" && {\n                    backgroundColor: \"white\",\n                    \"&:hover\": {\n                      backgroundColor: \"#f6f5f5\",\n                      boxShadow: [\n                        \"0px 6px 10px 0px rgba(0, 0, 0, 0.14)\",\n                        \"0px 1px 18px 0px rgba(0, 0, 0, 0.12)\",\n                        \"0px 3px 5px 0px rgba(0, 0, 0, 0.2);\",\n                      ].join(),\n                    },\n                    [`&.${buttonClasses.disabled}`]: {\n                      backgroundColor: \"white\",\n                      color: contrastText,\n                    },\n                  }),\n                },\n                \"MuiButton\",\n                \"contained\",\n              ),\n            outlined: ({ ownerState }) =>\n              overrideStyles(\n                ownerState,\n                {\n                  ...fontStyleOverrides,\n                  border: `2px solid ${contrastText}`,\n                  \"&:hover\": {\n                    border: `2px solid ${contrastText}`,\n                    backgroundColor: \"transparent\",\n                    textDecoration: \"underline\",\n                  },\n                },\n                \"MuiButton\",\n                \"outlined\",\n              ),\n          },\n        },\n        MuiCheckbox: {\n          ...options.components?.MuiCheckbox,\n          styleOverrides: {\n            ...options.components?.MuiCheckbox?.styleOverrides,\n            root: ({ ownerState }) =>\n              overrideStyles(\n                ownerState,\n                {\n                  color: `${contrastText} !important`,\n                },\n                \"MuiCheckbox\",\n              ),\n          },\n        },\n        MuiSvgIcon: {\n          ...options.components?.MuiSvgIcon,\n          styleOverrides: {\n            ...options.components?.MuiSvgIcon?.styleOverrides,\n            root: ({ ownerState }) =>\n              overrideStyles(\n                ownerState,\n                {\n                  \"&.checkbox-error\": {\n                    color: `${contrastText} !important`,\n                  },\n                },\n                \"MuiSvgIcon\",\n              ),\n          },\n        },\n      },\n    }),\n  )\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box\n        sx={{\n          ...sx,\n          ...(withShapes && {\n            paddingY: { xs: 2, sm: 3, md: 5 },\n            paddingX: { xs: 2, sm: 5, md: 10 },\n            marginX: { md: \"90px\" },\n          }),\n          bgcolor,\n          alignItems: \"center\",\n          position: \"relative\",\n        }}\n        {...otherBoxProps}\n      >\n        {withShapes && (\n          <>\n            <CircleIcon\n              color={circleColor}\n              sx={{\n                ...commonIconSxProps,\n                top: \"5%\",\n                left: \"0%\",\n                transform: \"translate(-60%, 0%)\",\n              }}\n            />\n            <HexagonIcon\n              color={hexagonColor}\n              sx={{\n                ...commonIconSxProps,\n                bottom: \"5%\",\n                right: \"0%\",\n                transform: \"translate(60%, 0%) rotate(90deg)\",\n              }}\n            />\n          </>\n        )}\n        {children}\n      </Box>\n    </ThemeProvider>\n  )\n}\n\nexport default ThemedBox\n","import {\n  type ThemeOptions,\n  createTheme,\n  responsiveFontSizes,\n} from \"@mui/material\"\n\nimport components from \"./components\"\nimport palette from \"./palette\"\nimport spacing from \"./spacing\"\nimport typography from \"./typography\"\n\nexport * as colors from \"./colors\"\nexport * from \"./palette\"\nexport * from \"./ThemedBox\"\nexport { default as ThemedBox } from \"./ThemedBox\"\n\nexport const themeOptions: ThemeOptions = {\n  palette,\n  components,\n  spacing,\n  typography,\n}\n\nexport const theme = responsiveFontSizes(createTheme(themeOptions))\n"],"names":["ThemedBox","options","themeOptions","withShapes","userType","bgcolor","children","sx","otherBoxProps","circleColor","hexagonColor","contrastText","primary","palette","tertiary","secondary","commonIconSxProps","fontStyleOverrides","overrideStyles","ownerState","styleOverrides","componentKey","muiClassName","getStyleOverrides","includesClassNames","theme","responsiveFontSizes","createTheme","buttonClasses","jsx","ThemeProvider","jsxs","Box","Fragment","CircleIcon","HexagonIcon","components","spacing","typography"],"mappings":"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"}