{"version":3,"file":"auth-Ds-898Jp.js","sources":["../src/theme/colors.ts","../src/theme/palette.ts","../src/hooks/router.tsx","../src/hooks/auth.tsx"],"sourcesContent":["export default interface Color {\n  900: string\n  800: string\n  700: string\n  600: string\n  500: string\n  400: string\n  300: string\n  200: string\n  100: string\n  50: string\n}\n\n// primary / teacher\nexport const primary: Color = {\n  900: \"#A60039\",\n  800: \"#BE0947\",\n  700: \"#C90548\",\n  600: \"#D40149\",\n  500: \"#E0004D\",\n  400: \"#EE0857\",\n  300: \"#FA1664\",\n  200: \"#FF397C\",\n  100: \"#FF6699\",\n  50: \"#FF9ABC\",\n}\nexport { primary as teacher }\n\n// secondary / indy\nexport const secondary: Color = {\n  900: \"#BF9400\",\n  800: \"#CFA30B\",\n  700: \"#DEAD06\",\n  600: \"#EAB502\",\n  500: \"#F6BE00\",\n  400: \"#FFC709\",\n  300: \"#FFD23D\",\n  200: \"#FFDA5C\",\n  100: \"#FFE382\",\n  50: \"#FFEDAD\",\n}\nexport { secondary as indy }\n\n// tertiary / student\nexport const tertiary: Color = {\n  900: \"#01668C\",\n  800: \"#007FAF\",\n  700: \"#008CC1\",\n  600: \"#0099D2\",\n  500: \"#00A3E0\",\n  400: \"#04AFEF\",\n  300: \"#08BAFC\",\n  200: \"#27C4FF\",\n  100: \"#4DCEFF\",\n  50: \"#85DDFF\",\n}\nexport { tertiary as student }\n","import {\n  type PaletteColor,\n  type PaletteColorOptions,\n  type PaletteOptions,\n  createTheme,\n} from \"@mui/material\"\n\nimport { primary, secondary, tertiary } from \"./colors\"\n\n// Extend palette to include a custom colors.\ndeclare module \"@mui/material/styles\" {\n  interface CustomPaletteColors {\n    tertiary: PaletteColor\n    white: PaletteColor\n    black: PaletteColor\n    teacher: PaletteColor\n    student: PaletteColor\n    indy: PaletteColor\n  }\n  interface Palette extends CustomPaletteColors {}\n  interface PaletteOptions extends CustomPaletteColors {}\n}\n\nexport interface PropsColorOverrides {\n  tertiary: true\n  white: true\n  black: true\n  teacher: true\n  student: true\n  indy: true\n}\n\ndeclare module \"@mui/material\" {\n  interface FabPropsColorOverrides extends PropsColorOverrides {}\n  interface CardPropsColorOverrides extends PropsColorOverrides {}\n  interface ChipPropsColorOverrides extends PropsColorOverrides {}\n  interface IconPropsColorOverrides extends PropsColorOverrides {}\n  interface AlertPropsColorOverrides extends PropsColorOverrides {}\n  interface BadgePropsColorOverrides extends PropsColorOverrides {}\n  interface RadioPropsColorOverrides extends PropsColorOverrides {}\n  interface AppBarPropsColorOverrides extends PropsColorOverrides {}\n  interface ButtonPropsColorOverrides extends PropsColorOverrides {}\n  interface SliderPropsColorOverrides extends PropsColorOverrides {}\n  interface SwitchPropsColorOverrides extends PropsColorOverrides {}\n  interface SvgIconPropsColorOverrides extends PropsColorOverrides {}\n  interface CheckboxPropsColorOverrides extends PropsColorOverrides {}\n  interface FormLabelPropsColorOverrides extends PropsColorOverrides {}\n  interface InputBasePropsColorOverrides extends PropsColorOverrides {}\n  interface TextFieldPropsColorOverrides extends PropsColorOverrides {}\n  interface IconButtonPropsColorOverrides extends PropsColorOverrides {}\n  interface PaginationPropsColorOverrides extends PropsColorOverrides {}\n  interface ButtonGroupPropsColorOverrides extends PropsColorOverrides {}\n  interface FormControlPropsColorOverrides extends PropsColorOverrides {}\n  interface ToggleButtonPropsColorOverrides extends PropsColorOverrides {}\n  interface LinearProgressPropsColorOverrides extends PropsColorOverrides {}\n  interface PaginationItemPropsColorOverrides extends PropsColorOverrides {}\n  interface CircularProgressPropsColorOverrides extends PropsColorOverrides {}\n  interface TabsPropsIndicatorColorOverrides extends PropsColorOverrides {}\n  interface ToggleButtonGroupPropsColorOverrides extends PropsColorOverrides {}\n}\n\nconst {\n  palette: { augmentColor },\n} = createTheme()\n\nconst teacher: PaletteColorOptions = {\n  main: primary[500],\n  contrastText: \"#fff\",\n}\n\nconst student: PaletteColorOptions = {\n  main: tertiary[500],\n  contrastText: \"#fff\",\n}\n\nconst indy: PaletteColorOptions = {\n  main: secondary[500],\n  contrastText: \"#000\",\n}\n\nconst palette: PaletteOptions = {\n  // primary / teacher\n  primary: teacher,\n  teacher: augmentColor({ color: teacher }),\n  // secondary / indy\n  secondary: indy,\n  indy: augmentColor({ color: indy }),\n  // tertiary / student\n  tertiary: augmentColor({ color: student }),\n  student: augmentColor({ color: student }),\n  // other\n  white: augmentColor({ color: { main: \"#fff\" } }),\n  black: augmentColor({ color: { main: \"#000\" } }),\n  info: { main: \"#f1ecec\" },\n  error: { main: \"#d50000\" },\n}\n\nexport default palette\n","import {\n  type Location,\n  type Params,\n  type To,\n  type NavigateOptions as _NavigateOptions,\n  useLocation as _useLocation,\n  useNavigate as _useNavigate,\n  useParams as _useParams,\n  useSearchParams as _useSearchParams,\n} from \"react-router-dom\"\nimport { type ObjectShape, object as objectSchema } from \"yup\"\nimport { type ReactNode, useEffect } from \"react\"\n\nimport {\n  type ObjectSchemaFromShape,\n  type TryValidateSyncOnErrorRT,\n  type TryValidateSyncOptions,\n  type TryValidateSyncRT,\n  tryValidateSync,\n} from \"../utils/schema\"\nimport { type PageState } from \"../components/page\"\nimport { type ReadOnly } from \"../utils/router\"\n\nexport type NavigateOptions<\n  State extends Record<string, any> = Record<string, any>,\n> = Omit<_NavigateOptions, \"state\"> & {\n  state?: State & Partial<PageState>\n  next?: boolean\n}\n\nexport type Navigate = {\n  <State extends Record<string, any> = Record<string, any>>(\n    to: To,\n    options?: NavigateOptions<State>,\n  ): void\n  (delta: number): void\n}\n\nexport function useNavigate(): Navigate {\n  const navigate = _useNavigate()\n  const searchParams = useSearchParams()\n\n  return (\n    toOrDelta: To | number,\n    options: (NavigateOptions & { next?: boolean }) | undefined = undefined,\n  ) => {\n    if (typeof toOrDelta === \"number\") navigate(toOrDelta)\n    else {\n      const { next = true, ..._options } = options || {}\n\n      navigate(\n        next && \"next\" in searchParams ? searchParams.next : toOrDelta,\n        _options,\n      )\n    }\n  }\n}\n\nexport function useLocation<State = {}>() {\n  return _useLocation() as Location<null | Partial<PageState & State>>\n}\n\n// -----------------------------------------------------------------------------\n// Use Search Params\n// -----------------------------------------------------------------------------\n\nexport function useSearchParams(): { [k: string]: string }\n\nexport function useSearchParams<\n  OnErrorRT extends TryValidateSyncOnErrorRT<ObjectSchemaFromShape<Shape>>,\n  Shape extends ObjectShape = {},\n>(\n  shape: Shape,\n  validateOptions?: TryValidateSyncOptions<\n    ObjectSchemaFromShape<Shape>,\n    OnErrorRT\n  >,\n): TryValidateSyncRT<ObjectSchemaFromShape<Shape>, OnErrorRT>\n\nexport function useSearchParams<\n  OnErrorRT extends TryValidateSyncOnErrorRT<ObjectSchemaFromShape<Shape>>,\n  Shape extends ObjectShape = {},\n>(\n  shape?: Shape,\n  validateOptions?: TryValidateSyncOptions<\n    ObjectSchemaFromShape<Shape>,\n    OnErrorRT\n  >,\n) {\n  const searchParams = Object.fromEntries(_useSearchParams()[0].entries())\n  if (!shape) return searchParams\n\n  return tryValidateSync(searchParams, objectSchema(shape), validateOptions)\n}\n\n// -----------------------------------------------------------------------------\n// Use Params\n// -----------------------------------------------------------------------------\n\nexport function useParams(): ReadOnly<Params<string>>\n\nexport function useParams<\n  OnErrorRT extends TryValidateSyncOnErrorRT<ObjectSchemaFromShape<Shape>>,\n  Shape extends ObjectShape = {},\n>(\n  shape: Shape,\n  validateOptions?: TryValidateSyncOptions<\n    ObjectSchemaFromShape<Shape>,\n    OnErrorRT\n  >,\n): TryValidateSyncRT<ObjectSchemaFromShape<Shape>, OnErrorRT>\n\nexport function useParams<\n  OnErrorRT extends TryValidateSyncOnErrorRT<ObjectSchemaFromShape<Shape>>,\n  Shape extends ObjectShape = {},\n>(\n  shape?: Shape,\n  validateOptions?: TryValidateSyncOptions<\n    ObjectSchemaFromShape<Shape>,\n    OnErrorRT\n  >,\n) {\n  const params = _useParams()\n  if (!shape) return params\n\n  return tryValidateSync(params, objectSchema(shape), validateOptions)\n}\n\nexport function useParamsRequired<\n  OnErrorRT extends TryValidateSyncOnErrorRT<ObjectSchemaFromShape<Shape>>,\n  Shape extends ObjectShape = {},\n>({\n  shape,\n  children,\n  onValidationError,\n  onValidationSuccess = () => {},\n  validateOptions,\n}: {\n  shape: Shape\n  children: (\n    data: NonNullable<\n      TryValidateSyncRT<ObjectSchemaFromShape<Shape>, OnErrorRT>\n    >,\n  ) => ReactNode\n  onValidationError: (navigate: Navigate) => void\n  onValidationSuccess?: (\n    params: NonNullable<\n      TryValidateSyncRT<ObjectSchemaFromShape<Shape>, OnErrorRT>\n    >,\n  ) => void\n  validateOptions?: TryValidateSyncOptions<\n    ObjectSchemaFromShape<Shape>,\n    OnErrorRT\n  >\n}) {\n  const params = useParams(shape, validateOptions)\n  const navigate = useNavigate()\n\n  useEffect(\n    () => {\n      if (params) onValidationSuccess(params)\n      else onValidationError(navigate)\n    },\n    [], // eslint-disable-line react-hooks/exhaustive-deps\n  )\n\n  return params ? children(params) : <></>\n}\n","import * as yup from \"yup\"\nimport { type ReactNode, useCallback, useEffect, useState } from \"react\"\nimport Cookies from \"js-cookie\"\nimport type { TypedUseMutation } from \"@reduxjs/toolkit/query/react\"\nimport { createSearchParams } from \"react-router-dom\"\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport { useSelector } from \"react-redux\"\n\nimport { type AuthFactor, type User } from \"../api\"\nimport {\n  type OAuth2CodeChallenge,\n  type OAuth2CodeChallengeLengths,\n  type OAuth2ReceiveCodeUrlSearchParams,\n  type OAuth2RequestCodeUrlSearchParams,\n  generateOAuth2CodeChallenge,\n  makeOAuth2StorageKey,\n} from \"../utils/auth\"\nimport { useLocation, useNavigate, useSearchParams } from \"./router\"\nimport { type ExchangeOAuth2CodeArg } from \"../api/endpoints/session\"\nimport { SESSION_METADATA_COOKIE_NAME } from \"../settings\"\nimport { generateSecureRandomString } from \"../utils/general\"\nimport { selectIsLoggedIn } from \"../slices/session\"\n\n// -----------------------------------------------------------------------------\n// Session\n// -----------------------------------------------------------------------------\n\nexport interface SessionMetadata {\n  user_id: User[\"id\"]\n  user_type: \"teacher\" | \"student\" | \"indy\"\n  auth_factors: Array<AuthFactor[\"type\"]>\n  otp_bypass_token_exists: boolean\n}\n\nexport function useSessionMetadata<T = SessionMetadata>(\n  cookieName = SESSION_METADATA_COOKIE_NAME,\n): T | undefined {\n  return useSelector(selectIsLoggedIn)\n    ? (JSON.parse(Cookies.get(cookieName)!) as T)\n    : undefined\n}\n\n/**\n * A utility function to predefine a useSessionMetadata hook.\n * @param cookieName The name of the session metadata cookie.\n * @returns An object containing the session metadata.\n */\nuseSessionMetadata.predefine = <SessionMetadata,>(\n  cookieName = SESSION_METADATA_COOKIE_NAME,\n) => {\n  return () => useSessionMetadata<SessionMetadata>(cookieName)\n}\n\nexport type UseSessionChildrenFunction<Required extends boolean> = (\n  metadata: Required extends true\n    ? SessionMetadata\n    : SessionMetadata | undefined,\n) => ReactNode\n\nexport type UseSessionChildren<\n  UserType extends SessionMetadata[\"user_type\"] | undefined,\n> =\n  | ReactNode\n  | (UserType extends undefined\n      ? UseSessionChildrenFunction<false>\n      : UseSessionChildrenFunction<true>)\n\nexport type UseSessionOptions<\n  UserType extends SessionMetadata[\"user_type\"] | undefined,\n> = Partial<{\n  userType: UserType\n  next: boolean\n}>\n\nexport function useSession<\n  UserType extends SessionMetadata[\"user_type\"] | undefined = undefined,\n>(\n  children: UseSessionChildren<UserType>,\n  options: UseSessionOptions<UserType> = {},\n) {\n  const { userType, next = true } = options\n\n  const { pathname } = useLocation()\n  const navigate = useNavigate()\n  const sessionMetadata = useSessionMetadata()\n\n  const loginRequired =\n    userType && (!sessionMetadata || sessionMetadata.user_type !== userType)\n\n  useEffect(() => {\n    if (loginRequired) {\n      navigate({\n        pathname:\n          \"/login\" +\n          {\n            teacher: \"/teacher\",\n            student: \"/student\",\n            indy: \"/independent\",\n          }[userType],\n        search: next\n          ? createSearchParams({ next: pathname }).toString()\n          : undefined,\n      })\n    }\n  }, [navigate, loginRequired, userType, next, pathname])\n\n  if (loginRequired) return <></>\n\n  if (typeof children === \"function\") {\n    return sessionMetadata\n      ? (children as UseSessionChildrenFunction<true>)(sessionMetadata)\n      : (children as UseSessionChildrenFunction<false>)(sessionMetadata)\n  }\n\n  return children\n}\n\n// -----------------------------------------------------------------------------\n// OAuth2\n// -----------------------------------------------------------------------------\n\nexport function useOAuth2State(\n  provider: string,\n  length: number = 32,\n  storageKey: string = \"state\",\n): [string | undefined, () => void] {\n  const oAuth2StorageKey = makeOAuth2StorageKey(provider, storageKey)\n  const storageValue = sessionStorage.getItem(oAuth2StorageKey)\n\n  const [_state, _setState] = useState<string>()\n\n  useEffect(() => {\n    let state: string\n    if (storageValue && storageValue.length === length) {\n      state = storageValue\n    } else {\n      state = generateSecureRandomString(length)\n      sessionStorage.setItem(oAuth2StorageKey, state)\n    }\n\n    _setState(state)\n  }, [oAuth2StorageKey, storageValue, length])\n\n  const resetState = useCallback(() => {\n    sessionStorage.removeItem(oAuth2StorageKey)\n    _setState(undefined)\n  }, [oAuth2StorageKey])\n\n  return [_state, resetState]\n}\n\nexport function useOAuth2CodeChallenge(\n  provider: string,\n  length: OAuth2CodeChallengeLengths = 128,\n  storageKey: string = \"codeChallenge\",\n): [OAuth2CodeChallenge | undefined, () => void] {\n  const oAuth2StorageKey = makeOAuth2StorageKey(provider, storageKey)\n  const storageValue = sessionStorage.getItem(oAuth2StorageKey)\n\n  const [_codeChallenge, _setCodeChallenge] = useState<OAuth2CodeChallenge>()\n\n  useEffect(() => {\n    let codeChallenge: OAuth2CodeChallenge | undefined\n    if (storageValue) {\n      const storageJsonValue: unknown = JSON.parse(storageValue)\n      if (\n        typeof storageJsonValue === \"object\" &&\n        storageJsonValue &&\n        \"verifier\" in storageJsonValue &&\n        typeof storageJsonValue.verifier == \"string\" &&\n        storageJsonValue.verifier.length === length &&\n        \"challenge\" in storageJsonValue &&\n        typeof storageJsonValue.challenge === \"string\" &&\n        \"method\" in storageJsonValue &&\n        storageJsonValue.method === \"S256\"\n      ) {\n        codeChallenge = {\n          verifier: storageJsonValue.verifier,\n          challenge: storageJsonValue.challenge,\n          method: storageJsonValue.method,\n        }\n      }\n    }\n\n    if (codeChallenge) _setCodeChallenge(codeChallenge)\n    else {\n      generateOAuth2CodeChallenge(length)\n        .then(codeChallenge => {\n          sessionStorage.setItem(\n            oAuth2StorageKey,\n            JSON.stringify(codeChallenge),\n          )\n\n          _setCodeChallenge(codeChallenge)\n        })\n        .catch(error => {\n          if (error) console.error(error)\n        })\n    }\n  }, [oAuth2StorageKey, storageValue, length])\n\n  const resetCodeChallenge = useCallback(() => {\n    sessionStorage.removeItem(oAuth2StorageKey)\n    _setCodeChallenge(undefined)\n  }, [oAuth2StorageKey])\n\n  return [_codeChallenge, resetCodeChallenge]\n}\n\ninterface BaseUseOAuth2KwArgs<SessionMetadata> {\n  provider: string\n  authUri: string\n  clientId: string\n  redirectUri: string\n  scope: string\n  responseType?: \"code\"\n  accessType?: \"offline\"\n  prompt?: string\n  useLoginMutation: TypedUseMutation<\n    SessionMetadata,\n    ExchangeOAuth2CodeArg,\n    any\n  >\n  onCreateSession: (result: SessionMetadata) => void\n  onRetrieveSession: (metadata: SessionMetadata) => void\n}\n\ninterface UseOAuth2KwArgs<SessionMetadata>\n  extends BaseUseOAuth2KwArgs<SessionMetadata> {\n  useSessionMetadata: () => SessionMetadata | undefined\n}\n\nexport type OAuth2 = [string, OAuth2RequestCodeUrlSearchParams] | []\n\n// https://datatracker.ietf.org/doc/html/rfc7636\nfunction useOAuth2Internal<SessionMetadata>({\n  provider,\n  authUri,\n  clientId,\n  redirectUri,\n  scope,\n  responseType = \"code\",\n  accessType = \"offline\",\n  prompt,\n  useSessionMetadata,\n  useLoginMutation,\n  onCreateSession,\n  onRetrieveSession,\n}: UseOAuth2KwArgs<SessionMetadata>): OAuth2 {\n  const [state, resetState] = useOAuth2State(provider)\n  const [\n    {\n      verifier: codeVerifier,\n      challenge: codeChallenge,\n      method: codeChallengeMethod,\n    } = {},\n    resetCodeChallenge,\n  ] = useOAuth2CodeChallenge(provider)\n  const [\n    login,\n    {\n      originalArgs: loginArgs = {} as ExchangeOAuth2CodeArg,\n      isLoading: loginIsLoading,\n      isError: loginIsError,\n    },\n  ] = useLoginMutation()\n  const sessionMetadata = useSessionMetadata()\n  const navigate = useNavigate()\n  const searchParams =\n    useSearchParams({ code: yup.string(), state: yup.string() }) || {}\n  const location = useLocation<OAuth2ReceiveCodeUrlSearchParams>()\n\n  const locationState = location.state || {}\n\n  useEffect(() => {\n    // If the the auth provider has redirected back to our site with the\n    // expected search params, we redirect to the current page to remove them.\n    if (searchParams.code && searchParams.state) {\n      navigate<OAuth2ReceiveCodeUrlSearchParams>(\".\", {\n        // Removes the URL containing the search params from the history stack.\n        replace: true,\n        // Ensure we don't break the auth flow by navigating to another page.\n        next: false,\n        // Store the search params in the page's state instead.\n        state: { code: searchParams.code, state: searchParams.state },\n      })\n    }\n  }, [searchParams.code, searchParams.state, navigate])\n\n  useEffect(() => {\n    // If we're already logged in, no need to log in again.\n    if (sessionMetadata) onRetrieveSession(sessionMetadata)\n    else if (\n      // If the state and code verifier have been generated...\n      state &&\n      codeVerifier &&\n      // ...and the page's state contains a code...\n      locationState.code &&\n      // ...and the page's state contains the stored state...\n      locationState.state === state &&\n      // ...and the login endpoint was not called with the current values or has\n      // not returned an error...\n      (loginArgs.code !== locationState.code ||\n        loginArgs.code_verifier !== codeVerifier ||\n        loginArgs.redirect_uri !== redirectUri ||\n        !loginIsError) &&\n      // ...and the login endpoint is not currently being called...\n      !loginIsLoading\n    ) {\n      // ...call the login endpoint.\n      login({\n        code: locationState.code,\n        code_verifier: codeVerifier,\n        redirect_uri: redirectUri,\n      })\n        .unwrap()\n        .then(onCreateSession)\n        .catch(() => {\n          navigate(\".\", {\n            replace: true,\n            state: {\n              notifications: [\n                {\n                  props: {\n                    error: true,\n                    children: \"Failed to login. Please try again.\",\n                  },\n                },\n              ],\n            },\n          })\n        })\n        .finally(() => {\n          resetState()\n          resetCodeChallenge()\n        })\n    }\n  }, [\n    navigate,\n    redirectUri,\n    // State\n    state,\n    locationState.state,\n    resetState,\n    // Code\n    codeVerifier,\n    locationState.code,\n    resetCodeChallenge,\n    // Login\n    login,\n    loginIsLoading,\n    loginIsError,\n    loginArgs.code,\n    loginArgs.code_verifier,\n    loginArgs.redirect_uri,\n    // Session\n    sessionMetadata,\n    onCreateSession,\n    onRetrieveSession,\n  ])\n\n  if (state && codeChallenge && codeChallengeMethod) {\n    const urlSearchParams: OAuth2RequestCodeUrlSearchParams = {\n      client_id: clientId,\n      redirect_uri: redirectUri,\n      scope,\n      response_type: responseType,\n      access_type: accessType,\n      state,\n      code_challenge: codeChallenge,\n      code_challenge_method: codeChallengeMethod,\n    }\n\n    if (prompt) urlSearchParams[\"prompt\"] = prompt\n\n    return [\n      authUri + \"?\" + new URLSearchParams(urlSearchParams).toString(),\n      urlSearchParams,\n    ]\n  }\n\n  return []\n}\n\nexport const useOAuth2: {\n  <SessionMetadata>(kwargs: UseOAuth2KwArgs<SessionMetadata>): OAuth2\n  (kwargs: BaseUseOAuth2KwArgs<SessionMetadata>): OAuth2\n} = <_SessionMetadata,>(\n  kwargs:\n    | UseOAuth2KwArgs<_SessionMetadata>\n    | BaseUseOAuth2KwArgs<SessionMetadata>,\n): OAuth2 => {\n  return useOAuth2Internal(\n    // @ts-expect-error value is assignable\n    \"useSessionMetadata\" in kwargs ? kwargs : { ...kwargs, useSessionMetadata },\n  )\n}\n"],"names":["primary","secondary","tertiary","augmentColor","createTheme","teacher","student","indy","palette","useNavigate","navigate","_useNavigate","searchParams","useSearchParams","toOrDelta","options","next","_options","useLocation","_useLocation","shape","validateOptions","_useSearchParams","tryValidateSync","objectSchema","useParams","params","_useParams","useParamsRequired","children","onValidationError","onValidationSuccess","useEffect","jsx","Fragment","useSessionMetadata","cookieName","SESSION_METADATA_COOKIE_NAME","useSelector","selectIsLoggedIn","Cookies","useSession","userType","pathname","sessionMetadata","loginRequired","createSearchParams","useOAuth2State","provider","length","storageKey","oAuth2StorageKey","makeOAuth2StorageKey","storageValue","_state","_setState","useState","state","generateSecureRandomString","resetState","useCallback","useOAuth2CodeChallenge","_codeChallenge","_setCodeChallenge","codeChallenge","storageJsonValue","generateOAuth2CodeChallenge","error","resetCodeChallenge","useOAuth2Internal","authUri","clientId","redirectUri","scope","responseType","accessType","prompt","useLoginMutation","onCreateSession","onRetrieveSession","codeVerifier","codeChallengeMethod","login","loginArgs","loginIsLoading","loginIsError","yup","locationState","urlSearchParams","useOAuth2","kwargs"],"mappings":"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"}