{"version":3,"file":"App-UfeajXtp.cjs","sources":["../src/server/App.tsx"],"sourcesContent":["import { CssBaseline, ThemeProvider } from \"@mui/material\"\nimport {\n  type EmotionCache,\n  CacheProvider as EmotionCacheProvider,\n} from \"@emotion/react\"\nimport { type JSX, type ReactNode } from \"react\"\nimport {\n  Provider as StoreProvider,\n  type ProviderProps as StoreProviderProps,\n} from \"react-redux\"\nimport { type Action } from \"redux\"\nimport { type ThemeProviderProps } from \"@mui/material\"\n\nimport \"./App.css\"\n// import { InactiveDialog, ScreenTimeDialog } from \"../features\"\n// import { useCountdown, useEventListener } from \"../hooks\"\n// import \"../scripts\"\n// import {\n//   configureFreshworksWidget,\n//   toggleOneTrustInfoDisplay,\n// } from \"../utils/window\"\n\nexport interface AppProps<A extends Action = Action, S = unknown> {\n  children: ReactNode\n  emotionCache: EmotionCache\n  theme: ThemeProviderProps[\"theme\"]\n  store: StoreProviderProps<A, S>[\"store\"]\n  maxIdleSeconds?: number\n  maxTotalSeconds?: number\n}\n\nconst App = <A extends Action = Action, S = unknown>({\n  children,\n  emotionCache,\n  theme,\n  store,\n  // @ts-expect-error TODO\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  maxIdleSeconds = 60 * 60,\n  // @ts-expect-error TODO\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  maxTotalSeconds = 60 * 60,\n}: AppProps<A, S>): JSX.Element => {\n  // TODO: cannot use document during SSR\n  // const root = document.getElementById(\"root\") as HTMLElement\n\n  // const [idleSeconds, setIdleSeconds] = useCountdown(maxIdleSeconds)\n  // const [totalSeconds, setTotalSeconds] = useCountdown(maxTotalSeconds)\n  // const resetIdleSeconds = useCallback(() => {\n  //   setIdleSeconds(maxIdleSeconds)\n  // }, [setIdleSeconds, maxIdleSeconds])\n\n  // const isIdle = idleSeconds === 0\n  // const tooMuchScreenTime = totalSeconds === 0\n\n  // useEventListener(root, \"mousemove\", resetIdleSeconds)\n  // useEventListener(root, \"keypress\", resetIdleSeconds)\n\n  // React.useEffect(() => {\n  //   configureFreshworksWidget(\"hide\")\n  // }, [])\n\n  // if (import.meta.env.PROD) {\n  //   toggleOneTrustInfoDisplay()\n  // }\n\n  return (\n    // https://mui.com/material-ui/guides/server-rendering/\n    <EmotionCacheProvider value={emotionCache}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <StoreProvider store={store}>\n          {/* <InactiveDialog open={isIdle} onClose={resetIdleSeconds} />\n        <ScreenTimeDialog\n          open={!isIdle && tooMuchScreenTime}\n          onClose={() => {\n            setTotalSeconds(maxTotalSeconds)\n          }}\n        /> */}\n          {children}\n        </StoreProvider>\n      </ThemeProvider>\n    </EmotionCacheProvider>\n  )\n}\n\nexport default App\n\n// TODO: figure out what to do with this\n// function useOneTrustScripts(): void {\n//   const oneTrustEventTypes = [\n//     useExternalScript({\n//       props: {\n//         src: \"https://cdn-ukwest.onetrust.com/consent/5da42396-cb12-4493-8d04-5179033cfbad/OtAutoBlock.js\",\n//         type: \"text/javascript\",\n//       },\n//       eventTypes: [\"load\", \"error\"],\n//     }),\n//     useExternalScript({\n//       props: {\n//         src: \"https://cdn-ukwest.onetrust.com/scripttemplates/otSDKStub.js\",\n//         type: \"text/javascript\",\n//         charset: \"UTF-8\",\n//       },\n//       attrs: {\n//         \"data-domain-script\": \"5da42396-cb12-4493-8d04-5179033cfbad\",\n//       },\n//       eventTypes: [\"load\", \"error\"],\n//     }),\n//     useExternalScript({\n//       props: {\n//         src: \"https://cdn-ukwest.onetrust.com/scripttemplates/202302.1.0/otBannerSdk.js\",\n//         async: true,\n//         type: \"text/javascript\",\n//       },\n//       eventTypes: [\"load\", \"error\"],\n//     }),\n//   ]\n//   if (oneTrustEventTypes.some(t => t === \"error\")) {\n//     alert(\"OneTrust failed to load!\")\n//   }\n// }\n"],"names":["App","children","emotionCache","theme","store","maxIdleSeconds","maxTotalSeconds","EmotionCacheProvider","jsxs","ThemeProvider","jsx","CssBaseline","StoreProvider"],"mappings":"kKA+BMA,EAAM,CAAyC,CACnD,SAAAC,EACA,aAAAC,EACA,MAAAC,EACA,MAAAC,EAGA,eAAAC,EAAiB,KAGjB,gBAAAC,EAAkB,IACpB,4BA0BKC,EAAAA,cAAA,CAAqB,MAAOL,EAC3B,SAAAM,EAAAA,kBAAAA,KAACC,EAAAA,eAAc,MAAAN,EACb,SAAA,CAAAO,EAAAA,kBAAAA,IAACC,EAAAA,YAAA,EAAY,EACbD,EAAAA,kBAAAA,IAACE,EAAAA,SAAA,CAAc,MAAAR,EAQZ,SAAAH,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CACF"}