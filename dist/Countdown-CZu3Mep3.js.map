{"version":3,"file":"Countdown-CZu3Mep3.js","sources":["../src/components/Countdown.tsx"],"sourcesContent":["import { type FC, useState } from \"react\"\nimport { Typography, type TypographyProps } from \"@mui/material\"\n\nimport { useCountdown } from \"../hooks\"\n\nexport interface CountdownProps extends Omit<TypographyProps, \"children\"> {\n  seconds: number\n  start?: boolean\n  onEnd: () => void\n}\n\nconst Countdown: FC<CountdownProps> = ({\n  seconds,\n  start = true,\n  onEnd,\n  ...typographyProps\n}) => {\n  seconds = Math.floor(seconds)\n  const _seconds = useCountdown(seconds)[0]\n  const [end, setEnd] = useState(!start)\n\n  if (_seconds === 0 && !end) {\n    setEnd(true)\n    onEnd()\n  }\n\n  seconds = Math.floor(_seconds % 60)\n  const minutes = Math.floor(_seconds / 60)\n\n  return (\n    <>\n      {_seconds > 0 && (\n        <Typography {...typographyProps}>\n          {minutes > 0 && `${minutes} ${minutes > 1 ? \"mins\" : \"min\"} `}\n          {seconds > 0 && `${seconds} ${seconds > 1 ? \"secs\" : \"sec\"}`}\n        </Typography>\n      )}\n    </>\n  )\n}\n\nexport default Countdown\n"],"names":["Countdown","seconds","start","onEnd","typographyProps","_seconds","useCountdown","end","setEnd","useState","minutes","jsxs","Typography"],"mappings":";;;;;;;;;AAWA,MAAMA,IAAgC,CAAC;AAAA,EACrC,SAAAC;AAAA,EACA,OAAAC,IAAQ;AAAA,EACR,OAAAC;AAAA,EACA,GAAGC;AACL,MAAM;AACJ,EAAAH,IAAU,KAAK,MAAMA,CAAO;AAC5B,QAAMI,IAAWC,EAAaL,CAAO,EAAE,CAAC,GAClC,CAACM,GAAKC,CAAM,IAAIC,EAAS,CAACP,CAAK;AAErC,EAAIG,MAAa,KAAK,CAACE,MACrBC,EAAO,EAAI,GACXL,EAAA,IAGFF,IAAU,KAAK,MAAMI,IAAW,EAAE;AAClC,QAAMK,IAAU,KAAK,MAAML,IAAW,EAAE;AAExC,6CAEK,UAAAA,IAAW,KACVM,gBAAAA,EAAAA,KAACC,GAAA,EAAY,GAAGR,GACb,UAAA;AAAA,IAAAM,IAAU,KAAK,GAAGA,CAAO,IAAIA,IAAU,IAAI,SAAS,KAAK;AAAA,IACzDT,IAAU,KAAK,GAAGA,CAAO,IAAIA,IAAU,IAAI,SAAS,KAAK;AAAA,EAAA,EAAA,CAC5D,EAAA,CAEJ;AAEJ;"}