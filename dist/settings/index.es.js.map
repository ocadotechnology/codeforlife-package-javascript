{"version":3,"file":"index.es.js","sources":["../../src/settings/custom.ts","../../src/settings/vite.ts","../../src/settings/index.ts"],"sourcesContent":["/**\n * This file contains all of our custom settings we define for our own purposes.\n *\n * This file is based on:\n * https://github.com/ocadotechnology/codeforlife-package-python/blob/main/codeforlife/settings/custom.py\n */\n\n// Shorthand to access environment variables.\nconst env = import.meta.env as Record<string, string | undefined>\n\n// The name of the current service.\nexport const SERVICE_NAME = env.VITE_SERVICE_NAME ?? \"REPLACE_ME\"\n\n// The title of the current service. Used in the <title/> within the <head/>.\nexport const SERVICE_TITLE =\n  env.VITE_SERVICE_TITLE ?? `Code for Life | ${SERVICE_NAME}`\n\n// The api url of the current service.\nexport const SERVICE_API_URL =\n  env.VITE_SERVICE_API_URL ?? \"http://localhost:8000\"\n\n// The names of cookies.\nexport const CSRF_COOKIE_NAME = `${SERVICE_NAME}_csrftoken`\nexport const SESSION_COOKIE_NAME = env.VITE_SESSION_COOKIE_NAME ?? \"session_key\"\nexport const SESSION_METADATA_COOKIE_NAME =\n  env.VITE_SESSION_METADATA_COOKIE_NAME ?? \"session_metadata\"\n","/**\n * This file contains all of vite's environment variables.\n *\n * https://vite.dev/guide/env-and-mode#env-variables\n */\n\n// Shorthand to access environment variables.\nconst env = import.meta.env\n\n// The mode the app is running in.\nexport const MODE = env.MODE\n\n// The base url the app is being served from.\n// This is determined by the base config option.\nexport const BASE_URL = env.BASE_URL\n\n// Whether the app is running in production (running the dev server with\n// NODE_ENV='production' or running an app built with NODE_ENV='production').\nexport const PROD = env.PROD\n\n// Whether the app is running in development (always the opposite of\n// import.meta.env.PROD)\nexport const DEV = env.DEV\n\n// Whether the app is running in the server.\nexport const SSR = env.SSR\n","// Shorthand to access environment variables.\nexport const vite = new Proxy(import.meta.env, {\n  get: (target, name: string) => target[`VITE_${name}`] as string,\n}) as Record<string, string>\n\nexport * from \"./custom\"\nexport * from \"./vite\"\n"],"names":["env","__vite_import_meta_env__","SERVICE_NAME","SERVICE_TITLE","SERVICE_API_URL","CSRF_COOKIE_NAME","SESSION_COOKIE_NAME","SESSION_METADATA_COOKIE_NAME","MODE","BASE_URL","PROD","DEV","SSR","vite","target","name"],"mappings":"cAQMA,IAAMC,GAGCC,IAAeF,EAAI,qBAAqB,cAGxCG,IACXH,EAAI,sBAAsB,mBAAmBE,CAAY,IAG9CE,IACXJ,EAAI,wBAAwB,yBAGjBK,IAAmB,GAAGH,CAAY,cAClCI,IAAsBN,EAAI,4BAA4B,eACtDO,IACXP,EAAI,qCAAqC,2FClBrCA,IAAMC,GAGCO,IAAOR,EAAI,MAIXS,IAAWT,EAAI,UAIfU,IAAOV,EAAI,MAIXW,IAAMX,EAAI,KAGVY,IAAMZ,EAAI,4ECxBVa,IAAO,IAAI,MAAMZ,GAAiB;AAAA,EAC7C,KAAK,CAACa,GAAQC,MAAiBD,EAAO,QAAQC,CAAI,EAAE;AACtD,CAAC;"}