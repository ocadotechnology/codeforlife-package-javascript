{"version":3,"file":"index-hdS8RgRc.js","sources":["../src/components/page/Section.tsx","../src/components/page/Notification.tsx","../src/components/page/Page.tsx","../src/components/page/Banner.tsx","../src/components/page/TabBar.tsx"],"sourcesContent":["import {\n  Box,\n  type BoxProps,\n  Container,\n  type ContainerProps,\n} from \"@mui/material\"\nimport type { FC } from \"react\"\n\nexport interface SectionProps extends ContainerProps {\n  boxProps?: Omit<BoxProps, \"children\">\n}\n\nconst Section: FC<SectionProps> = ({ boxProps, ...containerProps }) => {\n  return (\n    <Box {...boxProps}>\n      <Container {...containerProps} />\n    </Box>\n  )\n}\n\nexport default Section\n","import {\n  CloseOutlined as CloseOutlinedIcon,\n  ErrorOutline as ErrorOutlineIcon,\n  InfoOutlined as InfoOutlinedIcon,\n} from \"@mui/icons-material\"\nimport { type FC, type ReactNode, useEffect, useState } from \"react\"\nimport { IconButton, Stack, Typography } from \"@mui/material\"\n\nimport Section from \"./Section\"\nimport palette from \"../../theme/palette\"\n\nexport interface NotificationProps {\n  open?: boolean\n  error?: boolean\n  onClose?: () => void\n  children: ReactNode\n  bgcolor?: \"secondary\" | \"tertiary\"\n}\n\nconst Notification: FC<NotificationProps> = ({\n  open = true,\n  error = false,\n  onClose,\n  children,\n  bgcolor = \"secondary\",\n}) => {\n  const [_open, _setOpen] = useState(open)\n\n  useEffect(() => {\n    _setOpen(open)\n  }, [open])\n\n  if (!_open) return <></>\n\n  // @ts-expect-error guaranteed to be in palette\n  const contrastText = palette[bgcolor].contrastText as string\n\n  return (\n    <Section\n      boxProps={{\n        bgcolor: {\n          secondary: \"#ffd23b\",\n          tertiary: \"#08bafc\",\n        }[bgcolor],\n      }}\n      sx={{ paddingY: \"5px\" }}\n    >\n      <Stack direction=\"row\" alignItems=\"center\" gap={2}>\n        {error ? (\n          <ErrorOutlineIcon htmlColor={contrastText} />\n        ) : (\n          <InfoOutlinedIcon htmlColor={contrastText} />\n        )}\n        <Typography variant=\"body2\" color={contrastText} mb={0}>\n          {children}\n        </Typography>\n        <IconButton\n          style={{ marginLeft: \"auto\" }}\n          onClick={() => {\n            _setOpen(false)\n            if (onClose !== undefined) onClose()\n          }}\n        >\n          <CloseOutlinedIcon htmlColor={contrastText} />\n        </IconButton>\n      </Stack>\n    </Section>\n  )\n}\n\nexport default Notification\n","import { Children, type JSX, useEffect } from \"react\"\nimport { type Location, useLocation } from \"react-router\"\n\nimport Notification, { type NotificationProps } from \"./Notification\"\nimport {\n  type SessionMetadata,\n  type UseSessionChildren,\n  type UseSessionChildrenFunction,\n  type UseSessionOptions,\n  useSession,\n} from \"../../hooks/auth\"\n\nexport type PageState = {\n  notifications: Array<{\n    index?: number\n    props: NotificationProps\n  }>\n  scroll: { x: number; y: number }\n}\n\nexport interface PageProps<\n  SessionUserType extends SessionMetadata[\"user_type\"] | undefined,\n> {\n  children: UseSessionChildren<SessionUserType>\n  session?: UseSessionOptions<SessionUserType>\n}\n\nconst Page = <\n  SessionUserType extends SessionMetadata[\"user_type\"] | undefined = undefined,\n>({\n  children,\n  session,\n}: PageProps<SessionUserType>): JSX.Element => {\n  const { state } = useLocation() as Location<null | Partial<PageState>>\n\n  let { scroll, notifications } = state || {}\n  scroll = scroll || { x: 0, y: 0 }\n  notifications = notifications || []\n\n  useEffect(() => {\n    window.scroll(scroll.x, scroll.y)\n  }, [scroll.x, scroll.y])\n\n  return (\n    <>\n      {useSession((metadata?: SessionMetadata) => {\n        if (typeof children === \"function\") {\n          children = metadata\n            ? (children as UseSessionChildrenFunction<true>)(metadata)\n            : (children as UseSessionChildrenFunction<false>)(metadata)\n        }\n\n        if (notifications.length) {\n          const childrenArray = Children.toArray(children)\n\n          notifications.forEach((notification, index) => {\n            void childrenArray.splice(\n              notification.index ?? index,\n              0,\n              <Notification {...notification.props} />,\n            )\n          })\n\n          return childrenArray\n        }\n\n        return children\n      }, session)}\n    </>\n  )\n}\n\nexport default Page\n","import { Stack, Typography } from \"@mui/material\"\n\nimport Image, { type ImageProps } from \"../Image\"\nimport { LinkButton, type LinkButtonProps } from \"../router\"\nimport { primary, secondary, tertiary } from \"../../theme/colors\"\nimport Section from \"./Section\"\nimport palette from \"../../theme/palette\"\n\nexport interface BannerProps<\n  Button1State extends Record<string, any> = Record<string, any>,\n  Button2State extends Record<string, any> = Record<string, any>,\n> {\n  header: string\n  subheader?: string\n  textAlign?: \"start\" | \"center\"\n  imageProps?: ImageProps\n  button1Props?: LinkButtonProps<\"to\", Button1State>\n  button2Props?: LinkButtonProps<\"to\", Button2State>\n  bgcolor?: \"primary\" | \"secondary\" | \"tertiary\"\n}\n\nconst Banner = <\n  Button1State extends Record<string, any> = Record<string, any>,\n  Button2State extends Record<string, any> = Record<string, any>,\n>({\n  header,\n  subheader,\n  textAlign = \"start\",\n  imageProps,\n  button1Props,\n  button2Props,\n  bgcolor = \"primary\",\n}: BannerProps<Button1State, Button2State>) => {\n  // @ts-expect-error guaranteed to be in palette\n  const contrastText = palette[bgcolor].contrastText as string\n\n  return (\n    <Section\n      boxProps={{\n        bgcolor: {\n          primary: primary[500],\n          secondary: secondary[500],\n          tertiary: tertiary[500],\n        }[bgcolor],\n      }}\n      sx={{ paddingY: 0 }}\n    >\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent={textAlign}\n        gap={2}\n      >\n        <Stack\n          py={{\n            xs: \"80px\",\n            md: imageProps !== undefined ? 0 : \"100px\",\n          }}\n          textAlign={textAlign}\n        >\n          <Typography\n            variant=\"h2\"\n            color={contrastText}\n            mb={subheader !== undefined ? undefined : 0}\n          >\n            {header}\n          </Typography>\n          {subheader !== undefined && (\n            <Typography\n              color={contrastText}\n              variant=\"h4\"\n              mb={button1Props !== undefined ? undefined : 0}\n            >\n              {subheader}\n            </Typography>\n          )}\n          <Stack direction=\"row\" gap={2}>\n            {button1Props !== undefined && <LinkButton {...button1Props} />}\n            {button2Props !== undefined && <LinkButton {...button2Props} />}\n          </Stack>\n        </Stack>\n        {imageProps !== undefined && (\n          <Image\n            {...imageProps}\n            display={{ xs: \"none\", md: \"block\" }}\n            maxWidth=\"320px\"\n            marginLeft=\"auto\"\n          />\n        )}\n      </Stack>\n    </Section>\n  )\n}\n\nexport default Banner\n","import {\n  ChevronLeft as ChevronLeftIcon,\n  ChevronRight as ChevronRightIcon,\n} from \"@mui/icons-material\"\nimport { type FC, type ReactNode, useEffect, useState } from \"react\"\nimport {\n  IconButton,\n  Tab,\n  type TabScrollButtonProps,\n  Tabs,\n  Typography,\n} from \"@mui/material\"\nimport { object as YupObject, string as YupString } from \"yup\"\nimport { generatePath, useNavigate, useParams } from \"react-router\"\n\nimport Section from \"./Section\"\nimport { primary } from \"../../theme/colors\"\nimport { tryValidateSync } from \"../../utils/schema\"\n\nexport interface TabBarProps {\n  header: string\n  tabs: Array<{\n    label: string\n    children: ReactNode\n    path: string\n  }>\n  originalPath: string\n  value?: number\n}\n\nconst TabBar: FC<TabBarProps> = ({ header, tabs, originalPath, value = 0 }) => {\n  const params = useParams()\n  const navigate = useNavigate()\n  const [_value, _setValue] = useState(\n    value < 0 ? 0 : value >= tabs.length ? tabs.length - 1 : value,\n  )\n\n  const labels = tabs.map(tab => tab.label)\n  const children = tabs.map(tab => tab.children)\n  const paths = tabs.map(tab => tab.path)\n\n  useEffect(() => {\n    _setValue(value)\n  }, [value])\n\n  useEffect(() => {\n    const tab = tryValidateSync(\n      params,\n      YupObject({\n        tab: YupString().oneOf(paths).required(),\n      }),\n    )?.tab\n\n    if (tab !== undefined) {\n      _setValue(paths.indexOf(tab))\n    }\n  }, [params, paths])\n\n  return (\n    <>\n      <Section\n        boxProps={{ bgcolor: primary[500] }}\n        sx={{ paddingY: \"100px\" }}\n        className=\"flex-center\"\n      >\n        <Typography\n          textAlign=\"center\"\n          variant=\"h2\"\n          style={{ color: \"white\" }}\n          mb={0}\n        >\n          {header}\n        </Typography>\n      </Section>\n      <Section\n        boxProps={{ bgcolor: primary[300] }}\n        sx={{ paddingY: \"6px\" }}\n        className=\"flex-center\"\n      >\n        <Tabs\n          value={_value}\n          onChange={(_, value: number) => {\n            void navigate(\n              generatePath(originalPath, {\n                tab: paths[value],\n              }),\n            )\n          }}\n          ScrollButtonComponent={({\n            disabled,\n            onClick,\n            direction,\n          }: TabScrollButtonProps) => {\n            return (\n              <>\n                {disabled === false && (\n                  <IconButton\n                    onClick={onClick}\n                    style={{\n                      padding: 0,\n                      [direction === \"left\" ? \"marginRight\" : \"marginLeft\"]:\n                        \"15px\",\n                      color: \"white\",\n                    }}\n                  >\n                    {direction === \"left\" ? (\n                      <>\n                        <ChevronLeftIcon />\n                      </>\n                    ) : (\n                      <>\n                        <ChevronRightIcon />\n                      </>\n                    )}\n                  </IconButton>\n                )}\n              </>\n            )\n          }}\n        >\n          {labels.map(label => (\n            <Tab disableRipple key={label} label={label} />\n          ))}\n        </Tabs>\n      </Section>\n      {children[_value]}\n    </>\n  )\n}\n\nexport default TabBar\n"],"names":["Section","boxProps","containerProps","jsx","Box","Container","Notification","open","error","onClose","children","bgcolor","_open","_setOpen","useState","useEffect","Fragment","contrastText","palette","Stack","ErrorOutlineIcon","InfoOutlinedIcon","Typography","IconButton","CloseOutlinedIcon","Page","session","state","useLocation","scroll","notifications","useSession","metadata","childrenArray","Children","notification","index","Banner","header","subheader","textAlign","imageProps","button1Props","button2Props","primary","secondary","tertiary","jsxs","LinkButton","Image","TabBar","tabs","originalPath","value","params","useParams","navigate","useNavigate","_value","_setValue","labels","tab","paths","tryValidateSync","YupObject","YupString","Tabs","_","generatePath","disabled","onClick","direction","ChevronLeftIcon","ChevronRightIcon","label","Tab"],"mappings":"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"}