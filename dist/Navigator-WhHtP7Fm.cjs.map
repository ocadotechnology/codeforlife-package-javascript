{"version":3,"file":"Navigator-WhHtP7Fm.cjs","sources":["../src/components/router/Link.tsx","../src/components/router/LinkIconButton.tsx","../src/components/router/LinkListItem.tsx","../src/components/router/LinkTab.tsx","../src/components/router/Navigator.tsx"],"sourcesContent":["import { Link as MuiLink, type LinkProps as MuiLinkProps } from \"@mui/material\"\nimport { type JSX } from \"react\"\nimport { Link as RouterLink } from \"react-router-dom\"\n\nimport { type LinkProps as RouterLinkProps } from \"../../utils/router\"\n\nexport type LinkProps<\n  Override extends \"delta\" | \"to\",\n  State extends Record<string, any> = Record<string, any>,\n> = Omit<MuiLinkProps, \"component\"> & RouterLinkProps<Override, State>\n\n// https://mui.com/material-ui/integrations/routing/#link\nconst Link: {\n  (props: LinkProps<\"delta\">): JSX.Element\n  <State extends Record<string, any> = Record<string, any>>(\n    props: LinkProps<\"to\", State>,\n  ): JSX.Element\n} = (props: LinkProps<\"delta\"> | LinkProps<\"to\">) => {\n  // @ts-expect-error props are assignable\n  return <MuiLink component={RouterLink} {...props} />\n}\n\nexport default Link\n","import { IconButton, type IconButtonProps } from \"@mui/material\"\nimport { type JSX } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { type LinkProps } from \"../../utils/router\"\n\nexport type LinkIconButtonProps<\n  Override extends \"delta\" | \"to\",\n  State extends Record<string, any> = Record<string, any>,\n> = Omit<IconButtonProps, \"component\"> & LinkProps<Override, State>\n\n// https://mui.com/material-ui/integrations/routing/#button\nconst LinkIconButton: {\n  (props: LinkIconButtonProps<\"delta\">): JSX.Element\n  <State extends Record<string, any> = Record<string, any>>(\n    props: LinkIconButtonProps<\"to\", State>,\n  ): JSX.Element\n} = (props: LinkIconButtonProps<\"delta\"> | LinkIconButtonProps<\"to\">) => {\n  return <IconButton {...{ ...props, component: Link }} />\n}\n\nexport default LinkIconButton\n","import { ListItem, type ListItemProps } from \"@mui/material\"\nimport { type JSX } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { type LinkProps } from \"../../utils/router\"\n\nexport type LinkListItemProps<\n  Override extends \"delta\" | \"to\",\n  State extends Record<string, any> = Record<string, any>,\n> = Omit<ListItemProps, \"component\"> & LinkProps<Override, State>\n\n// https://mui.com/material-ui/integrations/routing/#list\nconst LinkListItem: {\n  (props: LinkListItemProps<\"delta\">): JSX.Element\n  <State extends Record<string, any> = Record<string, any>>(\n    props: LinkListItemProps<\"to\", State>,\n  ): JSX.Element\n} = (props: LinkListItemProps<\"delta\"> | LinkListItemProps<\"to\">) => {\n  return <ListItem {...{ ...props, component: Link }} />\n}\n\nexport default LinkListItem\n","import { Tab, type TabProps } from \"@mui/material\"\nimport { type JSX } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { type LinkProps } from \"../../utils/router\"\n\nexport type LinkTabProps<\n  Override extends \"delta\" | \"to\",\n  State extends Record<string, any> = Record<string, any>,\n> = Omit<TabProps, \"component\"> & LinkProps<Override, State>\n\n// https://mui.com/material-ui/integrations/routing/#tabs\nconst LinkTab: {\n  (props: LinkTabProps<\"delta\">): JSX.Element\n  <State extends Record<string, any> = Record<string, any>>(\n    props: LinkTabProps<\"to\", State>,\n  ): JSX.Element\n} = (props: LinkTabProps<\"delta\"> | LinkTabProps<\"to\">) => {\n  return <Tab {...{ ...props, component: Link }} />\n}\n\nexport default LinkTab\n","import { type JSX, useEffect } from \"react\"\nimport { type To } from \"react-router-dom\"\n\nimport { type NavigateOptions, useNavigate } from \"../../hooks\"\n\nexport type NavigatorProps<\n  Override extends \"delta\" | \"to\",\n  State extends Record<string, any> = Record<string, any>,\n> = Override extends \"delta\"\n  ? { delta: number; to?: undefined }\n  : { delta?: undefined; to: To } & NavigateOptions<State>\n\nconst Navigator: {\n  (props: NavigatorProps<\"delta\">): JSX.Element\n  <State extends Record<string, any> = Record<string, any>>(\n    props: NavigatorProps<\"to\", State>,\n  ): JSX.Element\n} = ({\n  delta,\n  to,\n  ...options\n}: NavigatorProps<\"delta\"> | NavigatorProps<\"to\">) => {\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    if (typeof delta === \"number\") navigate(delta)\n    else navigate(to, options)\n  }, [navigate, delta, to, options])\n\n  return <></>\n}\n\nexport default Navigator\n"],"names":["Link","props","jsx","MuiLink","RouterLink","LinkIconButton","IconButton","LinkListItem","ListItem","LinkTab","Tab","Navigator","delta","to","options","navigate","useNavigate","useEffect","Fragment"],"mappings":"6MAYMA,EAKDC,GAEIC,EAAAA,kBAAAA,IAACC,EAAAA,KAAA,CAAQ,UAAWC,EAAAA,KAAa,GAAGH,EAAO,ECP9CI,EAKDJ,GACIC,EAAAA,kBAAAA,IAACI,EAAAA,YAAiB,GAAGL,EAAO,UAAWD,EAAAA,KAAQ,ECNlDO,EAKDN,GACIC,EAAAA,kBAAAA,IAACM,EAAAA,UAAe,GAAGP,EAAO,UAAWD,EAAAA,KAAQ,ECNhDS,EAKDR,GACIC,EAAAA,kBAAAA,IAACQ,EAAAA,KAAU,GAAGT,EAAO,UAAWD,EAAAA,KAAQ,ECN3CW,EAKF,CAAC,CACH,MAAAC,EACA,GAAAC,EACA,GAAGC,CACL,IAAsD,CACpD,MAAMC,EAAWC,EAAAA,YAAA,EAEjBC,OAAAA,EAAAA,UAAU,IAAM,CACV,OAAOL,GAAU,SAAUG,EAASH,CAAK,EACxCG,EAASF,EAAIC,CAAO,CAC3B,EAAG,CAACC,EAAUH,EAAOC,EAAIC,CAAO,CAAC,EAE1BZ,EAAAA,kBAAAA,IAAAgB,EAAAA,kBAAAA,SAAA,EAAE,CACX"}