{"version":3,"file":"index.es.js","sources":["../../../src/api/endpoints/authFactor.ts","../../../src/api/endpoints/klass.ts","../../../src/api/endpoints/school.ts","../../../src/api/endpoints/user.ts"],"sourcesContent":["import { type EndpointBuilder } from \"@reduxjs/toolkit/query/react\"\n\nimport {\n  type ListArg as _ListArg,\n  type ListResult as _ListResult,\n  buildUrl,\n  tagData,\n} from \"../../utils/api\"\nimport type { AuthFactor } from \"../models\"\nimport { type TagTypes } from \"../tagTypes\"\nimport urls from \"../urls\"\n\nexport const AUTH_FACTOR_TAG: TagTypes = \"AuthFactor\"\n\nexport type ListAuthFactorsResult = _ListResult<AuthFactor, \"type\">\nexport type ListAuthFactorsArg = _ListArg\n\nexport default function getReadAuthFactorEndpoints<\n  ListResult extends _ListResult<AuthFactor> = ListAuthFactorsResult,\n  ListArg extends _ListArg<AuthFactor> = ListAuthFactorsArg,\n>(build: EndpointBuilder<any, any, any>) {\n  return {\n    listAuthFactors: build.query<ListResult, ListArg>({\n      query: search => ({\n        url: buildUrl(urls.authFactor.list, { search }),\n        method: \"GET\",\n      }),\n      providesTags: tagData(AUTH_FACTOR_TAG, { includeListTag: true }),\n    }),\n  }\n}\n","import { type EndpointBuilder } from \"@reduxjs/toolkit/query/react\"\n\nimport type {\n  Class,\n  SchoolTeacher,\n  SchoolTeacherUser,\n  Teacher,\n} from \"../models\"\nimport {\n  type ListArg as _ListArg,\n  type ListResult as _ListResult,\n  type RetrieveArg as _RetrieveArg,\n  type RetrieveResult as _RetrieveResult,\n  buildUrl,\n  tagData,\n} from \"../../utils/api\"\nimport { type TagTypes } from \"../tagTypes\"\nimport urls from \"../urls\"\n\nexport const CLASS_TAG: TagTypes = \"Class\"\n\nexport type RetrieveClassResult = _RetrieveResult<\n  Class,\n  \"name\" | \"read_classmates_data\" | \"receive_requests_until\" | \"school\"\n> & {\n  teacher: SchoolTeacher & {\n    user: Pick<\n      SchoolTeacherUser,\n      | \"id\"\n      | \"first_name\"\n      | \"last_name\"\n      | \"email\"\n      | \"is_active\"\n      | \"date_joined\"\n      | \"requesting_to_join_class\"\n    >\n  }\n}\nexport type RetrieveClassArg = _RetrieveArg<Class>\n\nexport type ListClassesResult = _ListResult<\n  Class,\n  \"name\" | \"read_classmates_data\" | \"receive_requests_until\" | \"school\",\n  {\n    teacher: SchoolTeacher & {\n      user: Pick<\n        SchoolTeacherUser,\n        | \"id\"\n        | \"first_name\"\n        | \"last_name\"\n        | \"email\"\n        | \"is_active\"\n        | \"date_joined\"\n        | \"requesting_to_join_class\"\n      >\n    }\n  }\n>\nexport type ListClassesArg = _ListArg<{\n  teacher: Teacher[\"id\"]\n  _id: Class[\"id\"] | Class[\"id\"][]\n  id_or_name: string\n}>\n\nexport default function getReadClassEndpoints<\n  RetrieveResult extends _RetrieveResult<Class> = RetrieveClassResult,\n  RetrieveArg extends _RetrieveArg<Class> = RetrieveClassArg,\n  ListResult extends _ListResult<Class> = ListClassesResult,\n  ListArg extends _ListArg<Class> = ListClassesArg,\n>(build: EndpointBuilder<any, any, any>) {\n  return {\n    retrieveClass: build.query<RetrieveResult, RetrieveArg>({\n      query: id => ({\n        url: buildUrl(urls.class.detail, { url: { id } }),\n        method: \"GET\",\n      }),\n      providesTags: tagData(CLASS_TAG),\n    }),\n    listClasses: build.query<ListResult, ListArg>({\n      query: search => ({\n        url: buildUrl(urls.class.list, { search }),\n        method: \"GET\",\n      }),\n      providesTags: tagData(CLASS_TAG, { includeListTag: true }),\n    }),\n  }\n}\n","import { type EndpointBuilder } from \"@reduxjs/toolkit/query/react\"\n\nimport {\n  type RetrieveArg as _RetrieveArg,\n  type RetrieveResult as _RetrieveResult,\n  buildUrl,\n  tagData,\n} from \"../../utils/api\"\nimport type { School } from \"../models\"\nimport { type TagTypes } from \"../tagTypes\"\nimport urls from \"../urls\"\n\nexport const SCHOOL_TAG: TagTypes = \"School\"\n\nexport type RetrieveSchoolResult = _RetrieveResult<\n  School,\n  \"name\" | \"country\" | \"uk_county\"\n>\nexport type RetrieveSchoolArg = _RetrieveArg<School>\n\nexport default function getReadSchoolEndpoints<\n  RetrieveResult extends _RetrieveResult<School> = RetrieveSchoolResult,\n  RetrieveArg extends _RetrieveArg<School> = RetrieveSchoolArg,\n>(build: EndpointBuilder<any, any, any>) {\n  return {\n    retrieveSchool: build.query<RetrieveResult, RetrieveArg>({\n      query: id => ({\n        url: buildUrl(urls.school.detail, { url: { id } }),\n        method: \"GET\",\n      }),\n      providesTags: tagData(SCHOOL_TAG),\n    }),\n  }\n}\n","import { type EndpointBuilder } from \"@reduxjs/toolkit/query/react\"\n\nimport type { Class, User } from \"../models\"\nimport {\n  type ListArg as _ListArg,\n  type ListResult as _ListResult,\n  type RetrieveArg as _RetrieveArg,\n  type RetrieveResult as _RetrieveResult,\n  buildUrl,\n  tagData,\n} from \"../../utils/api\"\nimport { type TagTypes } from \"../tagTypes\"\nimport urls from \"../urls\"\n\nexport const USER_TAG: TagTypes = \"User\"\n\nexport type RetrieveUserResult = _RetrieveResult<\n  User,\n  | \"first_name\"\n  | \"last_name\"\n  | \"email\"\n  | \"is_active\"\n  | \"date_joined\"\n  | \"requesting_to_join_class\"\n  | \"student\"\n  | \"teacher\"\n>\nexport type RetrieveUserArg = _RetrieveArg<User>\n\nexport type ListUsersResult = _ListResult<\n  User,\n  | \"first_name\"\n  | \"last_name\"\n  | \"email\"\n  | \"is_active\"\n  | \"date_joined\"\n  | \"requesting_to_join_class\"\n  | \"student\"\n  | \"teacher\"\n>\nexport type ListUsersArg = _ListArg<{\n  students_in_class: Class[\"id\"]\n  _id: User[\"id\"] | User[\"id\"][]\n  name: string\n  type: \"teacher\" | \"student\" | \"independent\" | \"indy\"\n}>\n\nexport default function getReadUserEndpoints<\n  RetrieveResult extends _RetrieveResult<User> = RetrieveUserResult,\n  RetrieveArg extends _RetrieveArg<User> = RetrieveUserArg,\n  ListResult extends _ListResult<User> = ListUsersResult,\n  ListArg extends _ListArg<User> = ListUsersArg,\n>(build: EndpointBuilder<any, any, any>) {\n  return {\n    retrieveUser: build.query<RetrieveResult, RetrieveArg>({\n      query: id => ({\n        url: buildUrl(urls.user.detail, { url: { id } }),\n        method: \"GET\",\n      }),\n      providesTags: tagData(USER_TAG),\n    }),\n    listUsers: build.query<ListResult, ListArg>({\n      query: search => ({\n        url: buildUrl(urls.user.list, { search }),\n        method: \"GET\",\n      }),\n      providesTags: tagData(USER_TAG, { includeListTag: true }),\n    }),\n  }\n}\n"],"names":["AUTH_FACTOR_TAG","getReadAuthFactorEndpoints","build","search","buildUrl","urls","tagData","CLASS_TAG","getReadClassEndpoints","id","SCHOOL_TAG","getReadSchoolEndpoints","USER_TAG","getReadUserEndpoints"],"mappings":";;;;AAYO,MAAMA,IAA4B;AAKzC,SAAwBC,EAGtBC,GAAuC;AACvC,SAAO;AAAA,IACL,iBAAiBA,EAAM,MAA2B;AAAA,MAChD,OAAO,CAAAC,OAAW;AAAA,QAChB,KAAKC,EAASC,EAAK,WAAW,MAAM,EAAE,QAAAF,GAAQ;AAAA,QAC9C,QAAQ;AAAA,MAAA;AAAA,MAEV,cAAcG,EAAQN,GAAiB,EAAE,gBAAgB,IAAM;AAAA,IAAA,CAChE;AAAA,EAAA;AAEL;ACXO,MAAMO,IAAsB;AA6CnC,SAAwBC,EAKtBN,GAAuC;AACvC,SAAO;AAAA,IACL,eAAeA,EAAM,MAAmC;AAAA,MACtD,OAAO,CAAAO,OAAO;AAAA,QACZ,KAAKL,EAASC,EAAK,MAAM,QAAQ,EAAE,KAAK,EAAE,IAAAI,EAAA,GAAM;AAAA,QAChD,QAAQ;AAAA,MAAA;AAAA,MAEV,cAAcH,EAAQC,CAAS;AAAA,IAAA,CAChC;AAAA,IACD,aAAaL,EAAM,MAA2B;AAAA,MAC5C,OAAO,CAAAC,OAAW;AAAA,QAChB,KAAKC,EAASC,EAAK,MAAM,MAAM,EAAE,QAAAF,GAAQ;AAAA,QACzC,QAAQ;AAAA,MAAA;AAAA,MAEV,cAAcG,EAAQC,GAAW,EAAE,gBAAgB,IAAM;AAAA,IAAA,CAC1D;AAAA,EAAA;AAEL;AC1EO,MAAMG,IAAuB;AAQpC,SAAwBC,EAGtBT,GAAuC;AACvC,SAAO;AAAA,IACL,gBAAgBA,EAAM,MAAmC;AAAA,MACvD,OAAO,CAAAO,OAAO;AAAA,QACZ,KAAKL,EAASC,EAAK,OAAO,QAAQ,EAAE,KAAK,EAAE,IAAAI,EAAA,GAAM;AAAA,QACjD,QAAQ;AAAA,MAAA;AAAA,MAEV,cAAcH,EAAQI,CAAU;AAAA,IAAA,CACjC;AAAA,EAAA;AAEL;ACnBO,MAAME,IAAqB;AAiClC,SAAwBC,EAKtBX,GAAuC;AACvC,SAAO;AAAA,IACL,cAAcA,EAAM,MAAmC;AAAA,MACrD,OAAO,CAAAO,OAAO;AAAA,QACZ,KAAKL,EAASC,EAAK,KAAK,QAAQ,EAAE,KAAK,EAAE,IAAAI,EAAA,GAAM;AAAA,QAC/C,QAAQ;AAAA,MAAA;AAAA,MAEV,cAAcH,EAAQM,CAAQ;AAAA,IAAA,CAC/B;AAAA,IACD,WAAWV,EAAM,MAA2B;AAAA,MAC1C,OAAO,CAAAC,OAAW;AAAA,QAChB,KAAKC,EAASC,EAAK,KAAK,MAAM,EAAE,QAAAF,GAAQ;AAAA,QACxC,QAAQ;AAAA,MAAA;AAAA,MAEV,cAAcG,EAAQM,GAAU,EAAE,gBAAgB,IAAM;AAAA,IAAA,CACzD;AAAA,EAAA;AAEL;"}