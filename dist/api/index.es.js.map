{"version":3,"file":"index.es.js","sources":["../../node_modules/@reduxjs/toolkit/dist/query/react/rtk-query-react.modern.mjs","../../src/api/tagTypes.ts","../../src/api/createApi.ts"],"sourcesContent":["// src/query/react/index.ts\nimport { buildCreateApi, coreModule } from \"@reduxjs/toolkit/query\";\n\n// src/query/react/module.ts\nimport { formatProdErrorMessage as _formatProdErrorMessage3 } from \"@reduxjs/toolkit\";\nimport { batch as rrBatch, useDispatch as rrUseDispatch, useSelector as rrUseSelector, useStore as rrUseStore } from \"react-redux\";\nimport { createSelector as _createSelector } from \"reselect\";\n\n// src/query/utils/capitalize.ts\nfunction capitalize(str) {\n  return str.replace(str[0], str[0].toUpperCase());\n}\n\n// src/query/utils/countObjectKeys.ts\nfunction countObjectKeys(obj) {\n  let count = 0;\n  for (const _key in obj) {\n    count++;\n  }\n  return count;\n}\n\n// src/query/endpointDefinitions.ts\nfunction isQueryDefinition(e) {\n  return e.type === \"query\" /* query */;\n}\nfunction isMutationDefinition(e) {\n  return e.type === \"mutation\" /* mutation */;\n}\nfunction isInfiniteQueryDefinition(e) {\n  return e.type === \"infinitequery\" /* infinitequery */;\n}\n\n// src/query/tsHelpers.ts\nfunction safeAssign(target, ...args) {\n  return Object.assign(target, ...args);\n}\n\n// src/query/react/buildHooks.ts\nimport { formatProdErrorMessage as _formatProdErrorMessage, formatProdErrorMessage as _formatProdErrorMessage2 } from \"@reduxjs/toolkit\";\nimport { QueryStatus, skipToken } from \"@reduxjs/toolkit/query\";\nimport { useCallback, useDebugValue, useEffect as useEffect3, useLayoutEffect, useMemo as useMemo2, useRef as useRef3, useState } from \"react\";\nimport { shallowEqual as shallowEqual2 } from \"react-redux\";\n\n// src/query/react/constants.ts\nvar UNINITIALIZED_VALUE = Symbol();\n\n// src/query/react/useSerializedStableValue.ts\nimport { useEffect, useRef, useMemo } from \"react\";\nimport { copyWithStructuralSharing } from \"@reduxjs/toolkit/query\";\nfunction useStableQueryArgs(queryArgs) {\n  const cache = useRef(queryArgs);\n  const copy = useMemo(() => copyWithStructuralSharing(cache.current, queryArgs), [queryArgs]);\n  useEffect(() => {\n    if (cache.current !== copy) {\n      cache.current = copy;\n    }\n  }, [copy]);\n  return copy;\n}\n\n// src/query/react/useShallowStableValue.ts\nimport { useEffect as useEffect2, useRef as useRef2 } from \"react\";\nimport { shallowEqual } from \"react-redux\";\nfunction useShallowStableValue(value) {\n  const cache = useRef2(value);\n  useEffect2(() => {\n    if (!shallowEqual(cache.current, value)) {\n      cache.current = value;\n    }\n  }, [value]);\n  return shallowEqual(cache.current, value) ? cache.current : value;\n}\n\n// src/query/react/buildHooks.ts\nvar canUseDOM = () => !!(typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\nvar isDOM = /* @__PURE__ */ canUseDOM();\nvar isRunningInReactNative = () => typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\";\nvar isReactNative = /* @__PURE__ */ isRunningInReactNative();\nvar getUseIsomorphicLayoutEffect = () => isDOM || isReactNative ? useLayoutEffect : useEffect3;\nvar useIsomorphicLayoutEffect = /* @__PURE__ */ getUseIsomorphicLayoutEffect();\nvar noPendingQueryStateSelector = (selected) => {\n  if (selected.isUninitialized) {\n    return {\n      ...selected,\n      isUninitialized: false,\n      isFetching: true,\n      isLoading: selected.data !== void 0 ? false : true,\n      status: QueryStatus.pending\n    };\n  }\n  return selected;\n};\nfunction pick(obj, ...keys) {\n  const ret = {};\n  keys.forEach((key) => {\n    ret[key] = obj[key];\n  });\n  return ret;\n}\nvar COMMON_HOOK_DEBUG_FIELDS = [\"data\", \"status\", \"isLoading\", \"isSuccess\", \"isError\", \"error\"];\nfunction buildHooks({\n  api,\n  moduleOptions: {\n    batch,\n    hooks: {\n      useDispatch,\n      useSelector,\n      useStore\n    },\n    unstable__sideEffectsInRender,\n    createSelector\n  },\n  serializeQueryArgs,\n  context\n}) {\n  const usePossiblyImmediateEffect = unstable__sideEffectsInRender ? (cb) => cb() : useEffect3;\n  return {\n    buildQueryHooks,\n    buildInfiniteQueryHooks,\n    buildMutationHook,\n    usePrefetch\n  };\n  function queryStatePreSelector(currentState, lastResult, queryArgs) {\n    if (lastResult?.endpointName && currentState.isUninitialized) {\n      const {\n        endpointName\n      } = lastResult;\n      const endpointDefinition = context.endpointDefinitions[endpointName];\n      if (queryArgs !== skipToken && serializeQueryArgs({\n        queryArgs: lastResult.originalArgs,\n        endpointDefinition,\n        endpointName\n      }) === serializeQueryArgs({\n        queryArgs,\n        endpointDefinition,\n        endpointName\n      })) lastResult = void 0;\n    }\n    let data = currentState.isSuccess ? currentState.data : lastResult?.data;\n    if (data === void 0) data = currentState.data;\n    const hasData = data !== void 0;\n    const isFetching = currentState.isLoading;\n    const isLoading = (!lastResult || lastResult.isLoading || lastResult.isUninitialized) && !hasData && isFetching;\n    const isSuccess = currentState.isSuccess || hasData && (isFetching && !lastResult?.isError || currentState.isUninitialized);\n    return {\n      ...currentState,\n      data,\n      currentData: currentState.data,\n      isFetching,\n      isLoading,\n      isSuccess\n    };\n  }\n  function infiniteQueryStatePreSelector(currentState, lastResult, queryArgs) {\n    if (lastResult?.endpointName && currentState.isUninitialized) {\n      const {\n        endpointName\n      } = lastResult;\n      const endpointDefinition = context.endpointDefinitions[endpointName];\n      if (queryArgs !== skipToken && serializeQueryArgs({\n        queryArgs: lastResult.originalArgs,\n        endpointDefinition,\n        endpointName\n      }) === serializeQueryArgs({\n        queryArgs,\n        endpointDefinition,\n        endpointName\n      })) lastResult = void 0;\n    }\n    let data = currentState.isSuccess ? currentState.data : lastResult?.data;\n    if (data === void 0) data = currentState.data;\n    const hasData = data !== void 0;\n    const isFetching = currentState.isLoading;\n    const isLoading = (!lastResult || lastResult.isLoading || lastResult.isUninitialized) && !hasData && isFetching;\n    const isSuccess = currentState.isSuccess || isFetching && hasData;\n    return {\n      ...currentState,\n      data,\n      currentData: currentState.data,\n      isFetching,\n      isLoading,\n      isSuccess\n    };\n  }\n  function usePrefetch(endpointName, defaultOptions) {\n    const dispatch = useDispatch();\n    const stableDefaultOptions = useShallowStableValue(defaultOptions);\n    return useCallback((arg, options) => dispatch(api.util.prefetch(endpointName, arg, {\n      ...stableDefaultOptions,\n      ...options\n    })), [endpointName, dispatch, stableDefaultOptions]);\n  }\n  function useQuerySubscriptionCommonImpl(endpointName, arg, {\n    refetchOnReconnect,\n    refetchOnFocus,\n    refetchOnMountOrArgChange,\n    skip = false,\n    pollingInterval = 0,\n    skipPollingIfUnfocused = false,\n    ...rest\n  } = {}) {\n    const {\n      initiate\n    } = api.endpoints[endpointName];\n    const dispatch = useDispatch();\n    const subscriptionSelectorsRef = useRef3(void 0);\n    if (!subscriptionSelectorsRef.current) {\n      const returnedValue = dispatch(api.internalActions.internal_getRTKQSubscriptions());\n      if (process.env.NODE_ENV !== \"production\") {\n        if (typeof returnedValue !== \"object\" || typeof returnedValue?.type === \"string\") {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(37) : `Warning: Middleware for RTK-Query API at reducerPath \"${api.reducerPath}\" has not been added to the store.\n    You must add the middleware for RTK-Query to function correctly!`);\n        }\n      }\n      subscriptionSelectorsRef.current = returnedValue;\n    }\n    const stableArg = useStableQueryArgs(skip ? skipToken : arg);\n    const stableSubscriptionOptions = useShallowStableValue({\n      refetchOnReconnect,\n      refetchOnFocus,\n      pollingInterval,\n      skipPollingIfUnfocused\n    });\n    const initialPageParam = rest.initialPageParam;\n    const stableInitialPageParam = useShallowStableValue(initialPageParam);\n    const promiseRef = useRef3(void 0);\n    let {\n      queryCacheKey,\n      requestId\n    } = promiseRef.current || {};\n    let currentRenderHasSubscription = false;\n    if (queryCacheKey && requestId) {\n      currentRenderHasSubscription = subscriptionSelectorsRef.current.isRequestSubscribed(queryCacheKey, requestId);\n    }\n    const subscriptionRemoved = !currentRenderHasSubscription && promiseRef.current !== void 0;\n    usePossiblyImmediateEffect(() => {\n      if (subscriptionRemoved) {\n        promiseRef.current = void 0;\n      }\n    }, [subscriptionRemoved]);\n    usePossiblyImmediateEffect(() => {\n      const lastPromise = promiseRef.current;\n      if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"removeMeOnCompilation\") {\n        console.log(subscriptionRemoved);\n      }\n      if (stableArg === skipToken) {\n        lastPromise?.unsubscribe();\n        promiseRef.current = void 0;\n        return;\n      }\n      const lastSubscriptionOptions = promiseRef.current?.subscriptionOptions;\n      if (!lastPromise || lastPromise.arg !== stableArg) {\n        lastPromise?.unsubscribe();\n        const promise = dispatch(initiate(stableArg, {\n          subscriptionOptions: stableSubscriptionOptions,\n          forceRefetch: refetchOnMountOrArgChange,\n          ...isInfiniteQueryDefinition(context.endpointDefinitions[endpointName]) ? {\n            initialPageParam: stableInitialPageParam\n          } : {}\n        }));\n        promiseRef.current = promise;\n      } else if (stableSubscriptionOptions !== lastSubscriptionOptions) {\n        lastPromise.updateSubscriptionOptions(stableSubscriptionOptions);\n      }\n    }, [dispatch, initiate, refetchOnMountOrArgChange, stableArg, stableSubscriptionOptions, subscriptionRemoved, stableInitialPageParam, endpointName]);\n    return [promiseRef, dispatch, initiate, stableSubscriptionOptions];\n  }\n  function buildUseQueryState(endpointName, preSelector) {\n    const useQueryState = (arg, {\n      skip = false,\n      selectFromResult\n    } = {}) => {\n      const {\n        select\n      } = api.endpoints[endpointName];\n      const stableArg = useStableQueryArgs(skip ? skipToken : arg);\n      const lastValue = useRef3(void 0);\n      const selectDefaultResult = useMemo2(() => (\n        // Normally ts-ignores are bad and should be avoided, but we're\n        // already casting this selector to be `Selector<any>` anyway,\n        // so the inconsistencies don't matter here\n        // @ts-ignore\n        createSelector([\n          // @ts-ignore\n          select(stableArg),\n          (_, lastResult) => lastResult,\n          (_) => stableArg\n        ], preSelector, {\n          memoizeOptions: {\n            resultEqualityCheck: shallowEqual2\n          }\n        })\n      ), [select, stableArg]);\n      const querySelector = useMemo2(() => selectFromResult ? createSelector([selectDefaultResult], selectFromResult, {\n        devModeChecks: {\n          identityFunctionCheck: \"never\"\n        }\n      }) : selectDefaultResult, [selectDefaultResult, selectFromResult]);\n      const currentState = useSelector((state) => querySelector(state, lastValue.current), shallowEqual2);\n      const store = useStore();\n      const newLastValue = selectDefaultResult(store.getState(), lastValue.current);\n      useIsomorphicLayoutEffect(() => {\n        lastValue.current = newLastValue;\n      }, [newLastValue]);\n      return currentState;\n    };\n    return useQueryState;\n  }\n  function usePromiseRefUnsubscribeOnUnmount(promiseRef) {\n    useEffect3(() => {\n      return () => {\n        promiseRef.current?.unsubscribe?.();\n        promiseRef.current = void 0;\n      };\n    }, [promiseRef]);\n  }\n  function refetchOrErrorIfUnmounted(promiseRef) {\n    if (!promiseRef.current) throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(38) : \"Cannot refetch a query that has not been started yet.\");\n    return promiseRef.current.refetch();\n  }\n  function buildQueryHooks(endpointName) {\n    const useQuerySubscription = (arg, options = {}) => {\n      const [promiseRef] = useQuerySubscriptionCommonImpl(endpointName, arg, options);\n      usePromiseRefUnsubscribeOnUnmount(promiseRef);\n      return useMemo2(() => ({\n        /**\n         * A method to manually refetch data for the query\n         */\n        refetch: () => refetchOrErrorIfUnmounted(promiseRef)\n      }), [promiseRef]);\n    };\n    const useLazyQuerySubscription = ({\n      refetchOnReconnect,\n      refetchOnFocus,\n      pollingInterval = 0,\n      skipPollingIfUnfocused = false\n    } = {}) => {\n      const {\n        initiate\n      } = api.endpoints[endpointName];\n      const dispatch = useDispatch();\n      const [arg, setArg] = useState(UNINITIALIZED_VALUE);\n      const promiseRef = useRef3(void 0);\n      const stableSubscriptionOptions = useShallowStableValue({\n        refetchOnReconnect,\n        refetchOnFocus,\n        pollingInterval,\n        skipPollingIfUnfocused\n      });\n      usePossiblyImmediateEffect(() => {\n        const lastSubscriptionOptions = promiseRef.current?.subscriptionOptions;\n        if (stableSubscriptionOptions !== lastSubscriptionOptions) {\n          promiseRef.current?.updateSubscriptionOptions(stableSubscriptionOptions);\n        }\n      }, [stableSubscriptionOptions]);\n      const subscriptionOptionsRef = useRef3(stableSubscriptionOptions);\n      usePossiblyImmediateEffect(() => {\n        subscriptionOptionsRef.current = stableSubscriptionOptions;\n      }, [stableSubscriptionOptions]);\n      const trigger = useCallback(function(arg2, preferCacheValue = false) {\n        let promise;\n        batch(() => {\n          promiseRef.current?.unsubscribe();\n          promiseRef.current = promise = dispatch(initiate(arg2, {\n            subscriptionOptions: subscriptionOptionsRef.current,\n            forceRefetch: !preferCacheValue\n          }));\n          setArg(arg2);\n        });\n        return promise;\n      }, [dispatch, initiate]);\n      const reset = useCallback(() => {\n        if (promiseRef.current?.queryCacheKey) {\n          dispatch(api.internalActions.removeQueryResult({\n            queryCacheKey: promiseRef.current?.queryCacheKey\n          }));\n        }\n      }, [dispatch]);\n      useEffect3(() => {\n        return () => {\n          promiseRef?.current?.unsubscribe();\n        };\n      }, []);\n      useEffect3(() => {\n        if (arg !== UNINITIALIZED_VALUE && !promiseRef.current) {\n          trigger(arg, true);\n        }\n      }, [arg, trigger]);\n      return useMemo2(() => [trigger, arg, {\n        reset\n      }], [trigger, arg, reset]);\n    };\n    const useQueryState = buildUseQueryState(endpointName, queryStatePreSelector);\n    return {\n      useQueryState,\n      useQuerySubscription,\n      useLazyQuerySubscription,\n      useLazyQuery(options) {\n        const [trigger, arg, {\n          reset\n        }] = useLazyQuerySubscription(options);\n        const queryStateResults = useQueryState(arg, {\n          ...options,\n          skip: arg === UNINITIALIZED_VALUE\n        });\n        const info = useMemo2(() => ({\n          lastArg: arg\n        }), [arg]);\n        return useMemo2(() => [trigger, {\n          ...queryStateResults,\n          reset\n        }, info], [trigger, queryStateResults, reset, info]);\n      },\n      useQuery(arg, options) {\n        const querySubscriptionResults = useQuerySubscription(arg, options);\n        const queryStateResults = useQueryState(arg, {\n          selectFromResult: arg === skipToken || options?.skip ? void 0 : noPendingQueryStateSelector,\n          ...options\n        });\n        const debugValue = pick(queryStateResults, ...COMMON_HOOK_DEBUG_FIELDS);\n        useDebugValue(debugValue);\n        return useMemo2(() => ({\n          ...queryStateResults,\n          ...querySubscriptionResults\n        }), [queryStateResults, querySubscriptionResults]);\n      }\n    };\n  }\n  function buildInfiniteQueryHooks(endpointName) {\n    const useInfiniteQuerySubscription = (arg, options = {}) => {\n      const [promiseRef, dispatch, initiate, stableSubscriptionOptions] = useQuerySubscriptionCommonImpl(endpointName, arg, options);\n      const subscriptionOptionsRef = useRef3(stableSubscriptionOptions);\n      usePossiblyImmediateEffect(() => {\n        subscriptionOptionsRef.current = stableSubscriptionOptions;\n      }, [stableSubscriptionOptions]);\n      const trigger = useCallback(function(arg2, direction) {\n        let promise;\n        batch(() => {\n          promiseRef.current?.unsubscribe();\n          promiseRef.current = promise = dispatch(initiate(arg2, {\n            subscriptionOptions: subscriptionOptionsRef.current,\n            direction\n          }));\n        });\n        return promise;\n      }, [promiseRef, dispatch, initiate]);\n      usePromiseRefUnsubscribeOnUnmount(promiseRef);\n      const stableArg = useStableQueryArgs(options.skip ? skipToken : arg);\n      const refetch = useCallback(() => refetchOrErrorIfUnmounted(promiseRef), [promiseRef]);\n      return useMemo2(() => {\n        const fetchNextPage = () => {\n          return trigger(stableArg, \"forward\");\n        };\n        const fetchPreviousPage = () => {\n          return trigger(stableArg, \"backward\");\n        };\n        return {\n          trigger,\n          /**\n           * A method to manually refetch data for the query\n           */\n          refetch,\n          fetchNextPage,\n          fetchPreviousPage\n        };\n      }, [refetch, trigger, stableArg]);\n    };\n    const useInfiniteQueryState = buildUseQueryState(endpointName, infiniteQueryStatePreSelector);\n    return {\n      useInfiniteQueryState,\n      useInfiniteQuerySubscription,\n      useInfiniteQuery(arg, options) {\n        const {\n          refetch,\n          fetchNextPage,\n          fetchPreviousPage\n        } = useInfiniteQuerySubscription(arg, options);\n        const queryStateResults = useInfiniteQueryState(arg, {\n          selectFromResult: arg === skipToken || options?.skip ? void 0 : noPendingQueryStateSelector,\n          ...options\n        });\n        const debugValue = pick(queryStateResults, ...COMMON_HOOK_DEBUG_FIELDS, \"hasNextPage\", \"hasPreviousPage\");\n        useDebugValue(debugValue);\n        return useMemo2(() => ({\n          ...queryStateResults,\n          fetchNextPage,\n          fetchPreviousPage,\n          refetch\n        }), [queryStateResults, fetchNextPage, fetchPreviousPage, refetch]);\n      }\n    };\n  }\n  function buildMutationHook(name) {\n    return ({\n      selectFromResult,\n      fixedCacheKey\n    } = {}) => {\n      const {\n        select,\n        initiate\n      } = api.endpoints[name];\n      const dispatch = useDispatch();\n      const [promise, setPromise] = useState();\n      useEffect3(() => () => {\n        if (!promise?.arg.fixedCacheKey) {\n          promise?.reset();\n        }\n      }, [promise]);\n      const triggerMutation = useCallback(function(arg) {\n        const promise2 = dispatch(initiate(arg, {\n          fixedCacheKey\n        }));\n        setPromise(promise2);\n        return promise2;\n      }, [dispatch, initiate, fixedCacheKey]);\n      const {\n        requestId\n      } = promise || {};\n      const selectDefaultResult = useMemo2(() => select({\n        fixedCacheKey,\n        requestId: promise?.requestId\n      }), [fixedCacheKey, promise, select]);\n      const mutationSelector = useMemo2(() => selectFromResult ? createSelector([selectDefaultResult], selectFromResult) : selectDefaultResult, [selectFromResult, selectDefaultResult]);\n      const currentState = useSelector(mutationSelector, shallowEqual2);\n      const originalArgs = fixedCacheKey == null ? promise?.arg.originalArgs : void 0;\n      const reset = useCallback(() => {\n        batch(() => {\n          if (promise) {\n            setPromise(void 0);\n          }\n          if (fixedCacheKey) {\n            dispatch(api.internalActions.removeMutationResult({\n              requestId,\n              fixedCacheKey\n            }));\n          }\n        });\n      }, [dispatch, fixedCacheKey, promise, requestId]);\n      const debugValue = pick(currentState, ...COMMON_HOOK_DEBUG_FIELDS, \"endpointName\");\n      useDebugValue(debugValue);\n      const finalState = useMemo2(() => ({\n        ...currentState,\n        originalArgs,\n        reset\n      }), [currentState, originalArgs, reset]);\n      return useMemo2(() => [triggerMutation, finalState], [triggerMutation, finalState]);\n    };\n  }\n}\n\n// src/query/react/module.ts\nvar reactHooksModuleName = /* @__PURE__ */ Symbol();\nvar reactHooksModule = ({\n  batch = rrBatch,\n  hooks = {\n    useDispatch: rrUseDispatch,\n    useSelector: rrUseSelector,\n    useStore: rrUseStore\n  },\n  createSelector = _createSelector,\n  unstable__sideEffectsInRender = false,\n  ...rest\n} = {}) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    const hookNames = [\"useDispatch\", \"useSelector\", \"useStore\"];\n    let warned = false;\n    for (const hookName of hookNames) {\n      if (countObjectKeys(rest) > 0) {\n        if (rest[hookName]) {\n          if (!warned) {\n            console.warn(\"As of RTK 2.0, the hooks now need to be specified as one object, provided under a `hooks` key:\\n`reactHooksModule({ hooks: { useDispatch, useSelector, useStore } })`\");\n            warned = true;\n          }\n        }\n        hooks[hookName] = rest[hookName];\n      }\n      if (typeof hooks[hookName] !== \"function\") {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(36) : `When using custom hooks for context, all ${hookNames.length} hooks need to be provided: ${hookNames.join(\", \")}.\nHook ${hookName} was either not provided or not a function.`);\n      }\n    }\n  }\n  return {\n    name: reactHooksModuleName,\n    init(api, {\n      serializeQueryArgs\n    }, context) {\n      const anyApi = api;\n      const {\n        buildQueryHooks,\n        buildInfiniteQueryHooks,\n        buildMutationHook,\n        usePrefetch\n      } = buildHooks({\n        api,\n        moduleOptions: {\n          batch,\n          hooks,\n          unstable__sideEffectsInRender,\n          createSelector\n        },\n        serializeQueryArgs,\n        context\n      });\n      safeAssign(anyApi, {\n        usePrefetch\n      });\n      safeAssign(context, {\n        batch\n      });\n      return {\n        injectEndpoint(endpointName, definition) {\n          if (isQueryDefinition(definition)) {\n            const {\n              useQuery,\n              useLazyQuery,\n              useLazyQuerySubscription,\n              useQueryState,\n              useQuerySubscription\n            } = buildQueryHooks(endpointName);\n            safeAssign(anyApi.endpoints[endpointName], {\n              useQuery,\n              useLazyQuery,\n              useLazyQuerySubscription,\n              useQueryState,\n              useQuerySubscription\n            });\n            api[`use${capitalize(endpointName)}Query`] = useQuery;\n            api[`useLazy${capitalize(endpointName)}Query`] = useLazyQuery;\n          }\n          if (isMutationDefinition(definition)) {\n            const useMutation = buildMutationHook(endpointName);\n            safeAssign(anyApi.endpoints[endpointName], {\n              useMutation\n            });\n            api[`use${capitalize(endpointName)}Mutation`] = useMutation;\n          } else if (isInfiniteQueryDefinition(definition)) {\n            const {\n              useInfiniteQuery,\n              useInfiniteQuerySubscription,\n              useInfiniteQueryState\n            } = buildInfiniteQueryHooks(endpointName);\n            safeAssign(anyApi.endpoints[endpointName], {\n              useInfiniteQuery,\n              useInfiniteQuerySubscription,\n              useInfiniteQueryState\n            });\n            api[`use${capitalize(endpointName)}InfiniteQuery`] = useInfiniteQuery;\n          }\n        }\n      };\n    }\n  };\n};\n\n// src/query/react/index.ts\nexport * from \"@reduxjs/toolkit/query\";\n\n// src/query/react/ApiProvider.tsx\nimport { configureStore, formatProdErrorMessage as _formatProdErrorMessage4 } from \"@reduxjs/toolkit\";\nimport { useContext } from \"react\";\nimport { useEffect as useEffect4 } from \"react\";\nimport * as React from \"react\";\nimport { Provider, ReactReduxContext } from \"react-redux\";\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\nfunction ApiProvider(props) {\n  const context = props.context || ReactReduxContext;\n  const existingContext = useContext(context);\n  if (existingContext) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage4(35) : \"Existing Redux context detected. If you already have a store set up, please use the traditional Redux setup.\");\n  }\n  const [store] = React.useState(() => configureStore({\n    reducer: {\n      [props.api.reducerPath]: props.api.reducer\n    },\n    middleware: (gDM) => gDM().concat(props.api.middleware)\n  }));\n  useEffect4(() => props.setupListeners === false ? void 0 : setupListeners(store.dispatch, props.setupListeners), [props.setupListeners, store.dispatch]);\n  return /* @__PURE__ */ React.createElement(Provider, { store, context }, props.children);\n}\n\n// src/query/react/index.ts\nvar createApi = /* @__PURE__ */ buildCreateApi(coreModule(), reactHooksModule());\nexport {\n  ApiProvider,\n  UNINITIALIZED_VALUE,\n  createApi,\n  reactHooksModule,\n  reactHooksModuleName\n};\n//# sourceMappingURL=rtk-query-react.modern.mjs.map","const tagTypes = [\n  // These are the tags for the common models used throughout our system.\n  // https://github.com/ocadotechnology/codeforlife-package-python/tree/main/codeforlife/user/models\n  // NOTE: Don't use the \"Teacher\" and \"Student\" tags. Use \"User\" instead.\n  \"User\",\n  \"School\",\n  \"Class\",\n  \"AuthFactor\",\n] as const\n\nexport default tagTypes\nexport type TagTypes = (typeof tagTypes)[number]\n","import {\n  type Api,\n  type BaseQueryApi,\n  type FetchArgs,\n  type FetchBaseQueryError,\n  type FetchBaseQueryMeta,\n  type MutationDefinition,\n  type QueryReturnValue,\n  createApi as _createApi,\n  type coreModuleName,\n  fetchBaseQuery,\n  type reactHooksModuleName,\n} from \"@reduxjs/toolkit/query/react\"\n\nimport defaultTagTypes, { type TagTypes as DefaultTagTypes } from \"./tagTypes\"\nimport { SERVICE_API_URL } from \"../settings\"\nimport { buildLogoutEndpoint } from \"./endpoints/session\"\nimport { getCsrfCookie } from \"../utils/auth\"\nimport { isSafeHttpMethod } from \"../utils/api\"\n\n// TODO: decide if we want to keep any of this.\n// export function handleResponseError(error: FetchBaseQueryError): void {\n//   if (\n//     error.status === 400 &&\n//     typeof error.data === \"object\" &&\n//     error.data !== null\n//   ) {\n//     // Parse the error's data from snake_case to camelCase.\n//     snakeCaseToCamelCase(error.data)\n//   } else if (error.status === 401) {\n//     // TODO: redirect to appropriate login page based on user type.\n//     window.location.href = `${PORTAL_BASE_URL}/login/teacher`\n//   } else {\n//     // Catch-all error pages by status-code.\n//     window.location.href = `${PORTAL_BASE_URL}/error/${\n//       [403, 404].includes(error.status as number) ? error.status : 500\n//     }`\n//   }\n// }\n\nexport default function createApi<TagTypes extends string = never>({\n  tagTypes = [],\n}: {\n  tagTypes?: readonly TagTypes[]\n} = {}): Api<\n  (\n    args: string | FetchArgs,\n    api: BaseQueryApi,\n    extraOptions: {},\n  ) => Promise<\n    QueryReturnValue<unknown, FetchBaseQueryError, FetchBaseQueryMeta>\n  >,\n  { logout: MutationDefinition<null, any, any, null, any, any> },\n  \"api\",\n  TagTypes | DefaultTagTypes,\n  typeof coreModuleName | typeof reactHooksModuleName\n> {\n  const fetch = fetchBaseQuery({\n    baseUrl: `${SERVICE_API_URL}/`,\n    credentials: \"include\",\n    prepareHeaders: (headers, endpoint) => {\n      const { type, arg } = endpoint as typeof endpoint & {\n        arg: string | FetchArgs\n      }\n      const method = typeof arg === \"string\" ? \"GET\" : arg.method || \"GET\"\n\n      if (type === \"mutation\" || !isSafeHttpMethod(method)) {\n        const csrfToken = getCsrfCookie()\n        if (csrfToken) headers.set(\"x-csrftoken\", csrfToken)\n      }\n\n      return headers\n    },\n  })\n\n  const api = _createApi({\n    // https://redux-toolkit.js.org/rtk-query/usage/customizing-queries#implementing-a-custom-basequery\n    baseQuery: async (args: string | FetchArgs, api, extraOptions) => {\n      if (api.type === \"mutation\" && getCsrfCookie() === undefined) {\n        // Get the CSRF token.\n        const { error } = await fetch(\n          { url: \"/csrf/cookie/\", method: \"GET\" },\n          api,\n          {},\n        )\n\n        // Validate we got the CSRF token.\n        if (error !== undefined) {\n          console.error(error)\n          // TODO\n          // window.location.href = `${PORTAL_BASE_URL}/error/500`\n        }\n        if (getCsrfCookie() === undefined) {\n          // TODO\n          // window.location.href = `${PORTAL_BASE_URL}/error/500`\n        }\n      }\n\n      // Send the HTTP request and fetch the response.\n      return await fetch(args, api, extraOptions)\n    },\n    tagTypes: [...defaultTagTypes, ...tagTypes],\n    endpoints: () => ({}),\n  })\n\n  return api.injectEndpoints({\n    endpoints: build => ({\n      logout: buildLogoutEndpoint<null, null>(api, build),\n    }),\n  })\n}\n"],"names":["capitalize","str","countObjectKeys","obj","count","_key","isQueryDefinition","isMutationDefinition","isInfiniteQueryDefinition","safeAssign","target","args","UNINITIALIZED_VALUE","useStableQueryArgs","queryArgs","cache","useRef","copy","useMemo","copyWithStructuralSharing","useEffect","useShallowStableValue","value","useRef2","useEffect2","shallowEqual","canUseDOM","isDOM","isRunningInReactNative","isReactNative","getUseIsomorphicLayoutEffect","useLayoutEffect","useEffect3","useIsomorphicLayoutEffect","noPendingQueryStateSelector","selected","QueryStatus","pick","keys","ret","key","COMMON_HOOK_DEBUG_FIELDS","buildHooks","api","batch","useDispatch","useSelector","useStore","unstable__sideEffectsInRender","createSelector","serializeQueryArgs","context","usePossiblyImmediateEffect","cb","buildQueryHooks","buildInfiniteQueryHooks","buildMutationHook","usePrefetch","queryStatePreSelector","currentState","lastResult","endpointName","endpointDefinition","skipToken","data","hasData","isFetching","isLoading","isSuccess","infiniteQueryStatePreSelector","defaultOptions","dispatch","stableDefaultOptions","useCallback","arg","options","useQuerySubscriptionCommonImpl","refetchOnReconnect","refetchOnFocus","refetchOnMountOrArgChange","skip","pollingInterval","skipPollingIfUnfocused","rest","initiate","subscriptionSelectorsRef","useRef3","returnedValue","_formatProdErrorMessage","stableArg","stableSubscriptionOptions","initialPageParam","stableInitialPageParam","promiseRef","queryCacheKey","requestId","currentRenderHasSubscription","subscriptionRemoved","lastPromise","lastSubscriptionOptions","promise","buildUseQueryState","preSelector","selectFromResult","select","lastValue","selectDefaultResult","useMemo2","_","shallowEqual2","querySelector","state","store","newLastValue","usePromiseRefUnsubscribeOnUnmount","refetchOrErrorIfUnmounted","_formatProdErrorMessage2","useQuerySubscription","useLazyQuerySubscription","setArg","useState","subscriptionOptionsRef","trigger","arg2","preferCacheValue","reset","useQueryState","queryStateResults","info","querySubscriptionResults","debugValue","useDebugValue","useInfiniteQuerySubscription","direction","refetch","useInfiniteQueryState","fetchNextPage","fetchPreviousPage","name","fixedCacheKey","setPromise","triggerMutation","promise2","mutationSelector","originalArgs","finalState","reactHooksModuleName","reactHooksModule","rrBatch","hooks","rrUseDispatch","rrUseSelector","rrUseStore","_createSelector","hookNames","warned","hookName","_formatProdErrorMessage3","anyApi","definition","useQuery","useLazyQuery","useMutation","useInfiniteQuery","createApi","buildCreateApi","coreModule","tagTypes","fetch","fetchBaseQuery","SERVICE_API_URL","headers","endpoint","type","method","isSafeHttpMethod","csrfToken","getCsrfCookie","_createApi","extraOptions","error","defaultTagTypes","build","buildLogoutEndpoint"],"mappings":";;;;;;;;;;AASA,SAASA,EAAWC,GAAK;AACvB,SAAOA,EAAI,QAAQA,EAAI,CAAC,GAAGA,EAAI,CAAC,EAAE,aAAa;AACjD;AAGA,SAASC,GAAgBC,GAAK;AAC5B,MAAIC,IAAQ;AACZ,aAAWC,KAAQF;AACjB,IAAAC;AAEF,SAAOA;AACT;AAGA,SAASE,GAAkB,GAAG;AAC5B,SAAO,EAAE,SAAS;AACpB;AACA,SAASC,GAAqB,GAAG;AAC/B,SAAO,EAAE,SAAS;AACpB;AACA,SAASC,GAA0B,GAAG;AACpC,SAAO,EAAE,SAAS;AACpB;AAGA,SAASC,EAAWC,MAAWC,GAAM;AACnC,SAAO,OAAO,OAAOD,GAAQ,GAAGC,CAAI;AACtC;AASA,IAAIC,IAAsB,OAAM;AAKhC,SAASC,GAAmBC,GAAW;AACrC,QAAMC,IAAQC,EAAOF,CAAS,GACxBG,IAAOC,EAAQ,MAAMC,GAA0BJ,EAAM,SAASD,CAAS,GAAG,CAACA,CAAS,CAAC;AAC3F,SAAAM,EAAU,MAAM;AACd,IAAIL,EAAM,YAAYE,MACpBF,EAAM,UAAUE;AAAA,EAEpB,GAAG,CAACA,CAAI,CAAC,GACFA;AACT;AAKA,SAASI,EAAsBC,GAAO;AACpC,QAAMP,IAAQQ,EAAQD,CAAK;AAC3BE,SAAAA,EAAW,MAAM;AACf,IAAKC,EAAaV,EAAM,SAASO,CAAK,MACpCP,EAAM,UAAUO;AAAA,EAEpB,GAAG,CAACA,CAAK,CAAC,GACHG,EAAaV,EAAM,SAASO,CAAK,IAAIP,EAAM,UAAUO;AAC9D;AAGA,IAAII,KAAY,MAAS,OAAO,SAAW,OAAe,OAAO,OAAO,WAAa,OAAe,OAAO,OAAO,SAAS,gBAAkB,KACzIC,KAAwB,gBAAAD,GAAS,GACjCE,KAAyB,MAAM,OAAO,YAAc,OAAe,UAAU,YAAY,eACzFC,KAAgC,gBAAAD,GAAsB,GACtDE,KAA+B,MAAMH,MAASE,KAAgBE,KAAkBC,GAChFC,KAA4C,gBAAAH,GAA4B,GACxEI,KAA8B,CAACC,MAC7BA,EAAS,kBACJ;AAAA,EACL,GAAGA;AAAA,EACH,iBAAiB;AAAA,EACjB,YAAY;AAAA,EACZ,WAAWA,EAAS,SAAS;AAAA,EAC7B,QAAQC,GAAY;AAC1B,IAESD;AAET,SAASE,GAAKlC,MAAQmC,GAAM;AAC1B,QAAMC,IAAM,CAAA;AACZ,SAAAD,EAAK,QAAQ,CAACE,MAAQ;AACpB,IAAAD,EAAIC,CAAG,IAAIrC,EAAIqC,CAAG;AAAA,EACpB,CAAC,GACMD;AACT;AACA,IAAIE,KAA2B,CAAC,QAAQ,UAAU,aAAa,aAAa,WAAW,OAAO;AAC9F,SAASC,GAAW;AAAA,EAClB,KAAAC;AAAA,EACA,eAAe;AAAA,IACb,OAAAC;AAAA,IACA,OAAO;AAAA,MACL,aAAAC;AAAA,MACA,aAAAC;AAAA,MACA,UAAAC;AAAA,IACN;AAAA,IACI,+BAAAC;AAAA,IACA,gBAAAC;AAAA,EACJ;AAAA,EACE,oBAAAC;AAAA,EACA,SAAAC;AACF,GAAG;AACD,QAAMC,IAA6BJ,IAAgC,CAACK,MAAOA,EAAE,IAAKrB;AAClF,SAAO;AAAA,IACL,iBAAAsB;AAAA,IACA,yBAAAC;AAAA,IACA,mBAAAC;AAAA,IACA,aAAAC;AAAA,EACJ;AACE,WAASC,EAAsBC,GAAcC,GAAY9C,GAAW;AAClE,QAAI8C,GAAY,gBAAgBD,EAAa,iBAAiB;AAC5D,YAAM;AAAA,QACJ,cAAAE;AAAA,MACR,IAAUD,GACEE,IAAqBX,EAAQ,oBAAoBU,CAAY;AACnE,MAAI/C,MAAciD,KAAab,EAAmB;AAAA,QAChD,WAAWU,EAAW;AAAA,QACtB,oBAAAE;AAAA,QACA,cAAAD;AAAA,MACR,CAAO,MAAMX,EAAmB;AAAA,QACxB,WAAApC;AAAA,QACA,oBAAAgD;AAAA,QACA,cAAAD;AAAA,MACR,CAAO,MAAGD,IAAa;AAAA,IACnB;AACA,QAAII,IAAOL,EAAa,YAAYA,EAAa,OAAOC,GAAY;AACpE,IAAII,MAAS,WAAQA,IAAOL,EAAa;AACzC,UAAMM,IAAUD,MAAS,QACnBE,IAAaP,EAAa,WAC1BQ,KAAa,CAACP,KAAcA,EAAW,aAAaA,EAAW,oBAAoB,CAACK,KAAWC,GAC/FE,IAAYT,EAAa,aAAaM,MAAYC,KAAc,CAACN,GAAY,WAAWD,EAAa;AAC3G,WAAO;AAAA,MACL,GAAGA;AAAA,MACH,MAAAK;AAAA,MACA,aAAaL,EAAa;AAAA,MAC1B,YAAAO;AAAA,MACA,WAAAC;AAAA,MACA,WAAAC;AAAA,IACN;AAAA,EACE;AACA,WAASC,EAA8BV,GAAcC,GAAY9C,GAAW;AAC1E,QAAI8C,GAAY,gBAAgBD,EAAa,iBAAiB;AAC5D,YAAM;AAAA,QACJ,cAAAE;AAAA,MACR,IAAUD,GACEE,IAAqBX,EAAQ,oBAAoBU,CAAY;AACnE,MAAI/C,MAAciD,KAAab,EAAmB;AAAA,QAChD,WAAWU,EAAW;AAAA,QACtB,oBAAAE;AAAA,QACA,cAAAD;AAAA,MACR,CAAO,MAAMX,EAAmB;AAAA,QACxB,WAAApC;AAAA,QACA,oBAAAgD;AAAA,QACA,cAAAD;AAAA,MACR,CAAO,MAAGD,IAAa;AAAA,IACnB;AACA,QAAII,IAAOL,EAAa,YAAYA,EAAa,OAAOC,GAAY;AACpE,IAAII,MAAS,WAAQA,IAAOL,EAAa;AACzC,UAAMM,IAAUD,MAAS,QACnBE,IAAaP,EAAa,WAC1BQ,KAAa,CAACP,KAAcA,EAAW,aAAaA,EAAW,oBAAoB,CAACK,KAAWC,GAC/FE,IAAYT,EAAa,aAAaO,KAAcD;AAC1D,WAAO;AAAA,MACL,GAAGN;AAAA,MACH,MAAAK;AAAA,MACA,aAAaL,EAAa;AAAA,MAC1B,YAAAO;AAAA,MACA,WAAAC;AAAA,MACA,WAAAC;AAAA,IACN;AAAA,EACE;AACA,WAASX,EAAYI,GAAcS,GAAgB;AACjD,UAAMC,IAAW1B,EAAW,GACtB2B,IAAuBnD,EAAsBiD,CAAc;AACjE,WAAOG,EAAY,CAACC,GAAKC,MAAYJ,EAAS5B,EAAI,KAAK,SAASkB,GAAca,GAAK;AAAA,MACjF,GAAGF;AAAA,MACH,GAAGG;AAAA,IACT,CAAK,CAAC,GAAG,CAACd,GAAcU,GAAUC,CAAoB,CAAC;AAAA,EACrD;AACA,WAASI,EAA+Bf,GAAca,GAAK;AAAA,IACzD,oBAAAG;AAAA,IACA,gBAAAC;AAAA,IACA,2BAAAC;AAAA,IACA,MAAAC,IAAO;AAAA,IACP,iBAAAC,IAAkB;AAAA,IAClB,wBAAAC,IAAyB;AAAA,IACzB,GAAGC;AAAA,EACP,IAAM,IAAI;AACN,UAAM;AAAA,MACJ,UAAAC;AAAA,IACN,IAAQzC,EAAI,UAAUkB,CAAY,GACxBU,IAAW1B,EAAW,GACtBwC,IAA2BC,EAAQ,MAAM;AAC/C,QAAI,CAACD,EAAyB,SAAS;AACrC,YAAME,IAAgBhB,EAAS5B,EAAI,gBAAgB,8BAA6B,CAAE;AAClF,UAAI,QAAQ,IAAI,aAAa,iBACvB,OAAO4C,KAAkB,YAAY,OAAOA,GAAe,QAAS;AACtE,cAAM,IAAI,MAAM,QAAQ,IAAI,aAAa,eAAeC,GAAwB,EAAE,IAAI,yDAAyD7C,EAAI,WAAW;AAAA,qEACnG;AAG/D,MAAA0C,EAAyB,UAAUE;AAAA,IACrC;AACA,UAAME,IAAY5E,GAAmBmE,IAAOjB,IAAYW,CAAG,GACrDgB,IAA4BrE,EAAsB;AAAA,MACtD,oBAAAwD;AAAA,MACA,gBAAAC;AAAA,MACA,iBAAAG;AAAA,MACA,wBAAAC;AAAA,IACN,CAAK,GACKS,IAAmBR,EAAK,kBACxBS,IAAyBvE,EAAsBsE,CAAgB,GAC/DE,IAAaP,EAAQ,MAAM;AACjC,QAAI;AAAA,MACF,eAAAQ;AAAA,MACA,WAAAC;AAAA,IACN,IAAQF,EAAW,WAAW,CAAA,GACtBG,IAA+B;AACnC,IAAIF,KAAiBC,MACnBC,IAA+BX,EAAyB,QAAQ,oBAAoBS,GAAeC,CAAS;AAE9G,UAAME,IAAsB,CAACD,KAAgCH,EAAW,YAAY;AACpF,WAAAzC,EAA2B,MAAM;AAC/B,MAAI6C,MACFJ,EAAW,UAAU;AAAA,IAEzB,GAAG,CAACI,CAAmB,CAAC,GACxB7C,EAA2B,MAAM;AAC/B,YAAM8C,IAAcL,EAAW;AAI/B,UAHI,OAAO,UAAY,OAAe,QAAQ,IAAI,aAAa,2BAC7D,QAAQ,IAAII,CAAmB,GAE7BR,MAAc1B,GAAW;AAC3B,QAAAmC,GAAa,YAAW,GACxBL,EAAW,UAAU;AACrB;AAAA,MACF;AACA,YAAMM,KAA0BN,EAAW,SAAS;AACpD,UAAI,CAACK,KAAeA,EAAY,QAAQT,GAAW;AACjD,QAAAS,GAAa,YAAW;AACxB,cAAME,KAAU7B,EAASa,EAASK,GAAW;AAAA,UAC3C,qBAAqBC;AAAA,UACrB,cAAcX;AAAA,UACd,GAAGvE,GAA0B2C,EAAQ,oBAAoBU,CAAY,CAAC,IAAI;AAAA,YACxE,kBAAkB+B;AAAA,UAC9B,IAAc,CAAA;AAAA,QACd,CAAS,CAAC;AACF,QAAAC,EAAW,UAAUO;AAAA,MACvB,MAAO,CAAIV,MAA8BS,MACvCD,EAAY,0BAA0BR,CAAyB;AAAA,IAEnE,GAAG,CAACnB,GAAUa,GAAUL,GAA2BU,GAAWC,GAA2BO,GAAqBL,GAAwB/B,CAAY,CAAC,GAC5I,CAACgC,GAAYtB,GAAUa,GAAUM,CAAyB;AAAA,EACnE;AACA,WAASW,EAAmBxC,GAAcyC,GAAa;AAuCrD,WAtCsB,CAAC5B,GAAK;AAAA,MAC1B,MAAAM,IAAO;AAAA,MACP,kBAAAuB;AAAA,IACN,IAAQ,OAAO;AACT,YAAM;AAAA,QACJ,QAAAC;AAAA,MACR,IAAU7D,EAAI,UAAUkB,CAAY,GACxB4B,IAAY5E,GAAmBmE,IAAOjB,IAAYW,CAAG,GACrD+B,IAAYnB,EAAQ,MAAM,GAC1BoB,IAAsBC,EAAS;AAAA;AAAA;AAAA;AAAA;AAAA,QAKnC1D,EAAe;AAAA;AAAA,UAEbuD,EAAOf,CAAS;AAAA,UAChB,CAACmB,GAAGhD,MAAeA;AAAA,UACnB,CAACgD,MAAMnB;AAAA,QACjB,GAAWa,GAAa;AAAA,UACd,gBAAgB;AAAA,YACd,qBAAqBO;AAAAA,UACjC;AAAA,QACA,CAAS;AAAA,SACA,CAACL,GAAQf,CAAS,CAAC,GAChBqB,IAAgBH,EAAS,MAAMJ,IAAmBtD,EAAe,CAACyD,CAAmB,GAAGH,GAAkB;AAAA,QAC9G,eAAe;AAAA,UACb,uBAAuB;AAAA,QACjC;AAAA,MACA,CAAO,IAAIG,GAAqB,CAACA,GAAqBH,CAAgB,CAAC,GAC3D5C,IAAeb,EAAY,CAACiE,MAAUD,EAAcC,GAAON,EAAU,OAAO,GAAGI,CAAa,GAC5FG,IAAQjE,EAAQ,GAChBkE,IAAeP,EAAoBM,EAAM,SAAQ,GAAIP,EAAU,OAAO;AAC5E,aAAAxE,GAA0B,MAAM;AAC9B,QAAAwE,EAAU,UAAUQ;AAAA,MACtB,GAAG,CAACA,CAAY,CAAC,GACVtD;AAAA,IACT;AAAA,EAEF;AACA,WAASuD,EAAkCrB,GAAY;AACrD7D,IAAAA,EAAW,MACF,MAAM;AACX,MAAA6D,EAAW,SAAS,cAAW,GAC/BA,EAAW,UAAU;AAAA,IACvB,GACC,CAACA,CAAU,CAAC;AAAA,EACjB;AACA,WAASsB,EAA0BtB,GAAY;AAC7C,QAAI,CAACA,EAAW,QAAS,OAAM,IAAI,MAAM,QAAQ,IAAI,aAAa,eAAeuB,GAAyB,EAAE,IAAI,uDAAuD;AACvK,WAAOvB,EAAW,QAAQ,QAAO;AAAA,EACnC;AACA,WAASvC,EAAgBO,GAAc;AACrC,UAAMwD,IAAuB,CAAC3C,GAAKC,IAAU,CAAA,MAAO;AAClD,YAAM,CAACkB,CAAU,IAAIjB,EAA+Bf,GAAca,GAAKC,CAAO;AAC9E,aAAAuC,EAAkCrB,CAAU,GACrCc,EAAS,OAAO;AAAA;AAAA;AAAA;AAAA,QAIrB,SAAS,MAAMQ,EAA0BtB,CAAU;AAAA,MAC3D,IAAU,CAACA,CAAU,CAAC;AAAA,IAClB,GACMyB,IAA2B,CAAC;AAAA,MAChC,oBAAAzC;AAAA,MACA,gBAAAC;AAAA,MACA,iBAAAG,IAAkB;AAAA,MAClB,wBAAAC,IAAyB;AAAA,IAC/B,IAAQ,OAAO;AACT,YAAM;AAAA,QACJ,UAAAE;AAAA,MACR,IAAUzC,EAAI,UAAUkB,CAAY,GACxBU,IAAW1B,EAAW,GACtB,CAAC6B,GAAK6C,CAAM,IAAIC,GAAS5G,CAAmB,GAC5CiF,IAAaP,EAAQ,MAAM,GAC3BI,IAA4BrE,EAAsB;AAAA,QACtD,oBAAAwD;AAAA,QACA,gBAAAC;AAAA,QACA,iBAAAG;AAAA,QACA,wBAAAC;AAAA,MACR,CAAO;AACD,MAAA9B,EAA2B,MAAM;AAC/B,cAAM+C,IAA0BN,EAAW,SAAS;AACpD,QAAIH,MAA8BS,KAChCN,EAAW,SAAS,0BAA0BH,CAAyB;AAAA,MAE3E,GAAG,CAACA,CAAyB,CAAC;AAC9B,YAAM+B,IAAyBnC,EAAQI,CAAyB;AAChE,MAAAtC,EAA2B,MAAM;AAC/B,QAAAqE,EAAuB,UAAU/B;AAAA,MACnC,GAAG,CAACA,CAAyB,CAAC;AAC9B,YAAMgC,IAAUjD,EAAY,SAASkD,GAAMC,IAAmB,IAAO;AACnE,YAAIxB;AACJ,eAAAxD,EAAM,MAAM;AACV,UAAAiD,EAAW,SAAS,YAAW,GAC/BA,EAAW,UAAUO,IAAU7B,EAASa,EAASuC,GAAM;AAAA,YACrD,qBAAqBF,EAAuB;AAAA,YAC5C,cAAc,CAACG;AAAA,UAC3B,CAAW,CAAC,GACFL,EAAOI,CAAI;AAAA,QACb,CAAC,GACMvB;AAAA,MACT,GAAG,CAAC7B,GAAUa,CAAQ,CAAC,GACjByC,IAAQpD,EAAY,MAAM;AAC9B,QAAIoB,EAAW,SAAS,iBACtBtB,EAAS5B,EAAI,gBAAgB,kBAAkB;AAAA,UAC7C,eAAekD,EAAW,SAAS;AAAA,QAC/C,CAAW,CAAC;AAAA,MAEN,GAAG,CAACtB,CAAQ,CAAC;AACbvC,aAAAA,EAAW,MACF,MAAM;AACX,QAAA6D,GAAY,SAAS,YAAW;AAAA,MAClC,GACC,CAAA,CAAE,GACL7D,EAAW,MAAM;AACf,QAAI0C,MAAQ9D,KAAuB,CAACiF,EAAW,WAC7C6B,EAAQhD,GAAK,EAAI;AAAA,MAErB,GAAG,CAACA,GAAKgD,CAAO,CAAC,GACVf,EAAS,MAAM,CAACe,GAAShD,GAAK;AAAA,QACnC,OAAAmD;AAAA,MACR,CAAO,GAAG,CAACH,GAAShD,GAAKmD,CAAK,CAAC;AAAA,IAC3B,GACMC,IAAgBzB,EAAmBxC,GAAcH,CAAqB;AAC5E,WAAO;AAAA,MACL,eAAAoE;AAAA,MACA,sBAAAT;AAAA,MACA,0BAAAC;AAAA,MACA,aAAa3C,GAAS;AACpB,cAAM,CAAC+C,GAAShD,GAAK;AAAA,UACnB,OAAAmD;AAAA,QACV,CAAS,IAAIP,EAAyB3C,CAAO,GAC/BoD,IAAoBD,EAAcpD,GAAK;AAAA,UAC3C,GAAGC;AAAA,UACH,MAAMD,MAAQ9D;AAAA,QACxB,CAAS,GACKoH,IAAOrB,EAAS,OAAO;AAAA,UAC3B,SAASjC;AAAA,QACnB,IAAY,CAACA,CAAG,CAAC;AACT,eAAOiC,EAAS,MAAM,CAACe,GAAS;AAAA,UAC9B,GAAGK;AAAA,UACH,OAAAF;AAAA,QACV,GAAWG,CAAI,GAAG,CAACN,GAASK,GAAmBF,GAAOG,CAAI,CAAC;AAAA,MACrD;AAAA,MACA,SAAStD,GAAKC,GAAS;AACrB,cAAMsD,IAA2BZ,EAAqB3C,GAAKC,CAAO,GAC5DoD,IAAoBD,EAAcpD,GAAK;AAAA,UAC3C,kBAAkBA,MAAQX,KAAaY,GAAS,OAAO,SAASzC;AAAA,UAChE,GAAGyC;AAAA,QACb,CAAS,GACKuD,IAAa7F,GAAK0F,GAAmB,GAAGtF,EAAwB;AACtE,eAAA0F,EAAcD,CAAU,GACjBvB,EAAS,OAAO;AAAA,UACrB,GAAGoB;AAAA,UACH,GAAGE;AAAA,QACb,IAAY,CAACF,GAAmBE,CAAwB,CAAC;AAAA,MACnD;AAAA,IACN;AAAA,EACE;AACA,WAAS1E,EAAwBM,GAAc;AAC7C,UAAMuE,IAA+B,CAAC1D,GAAKC,IAAU,CAAA,MAAO;AAC1D,YAAM,CAACkB,GAAYtB,GAAUa,GAAUM,CAAyB,IAAId,EAA+Bf,GAAca,GAAKC,CAAO,GACvH8C,IAAyBnC,EAAQI,CAAyB;AAChE,MAAAtC,EAA2B,MAAM;AAC/B,QAAAqE,EAAuB,UAAU/B;AAAA,MACnC,GAAG,CAACA,CAAyB,CAAC;AAC9B,YAAMgC,IAAUjD,EAAY,SAASkD,GAAMU,GAAW;AACpD,YAAIjC;AACJ,eAAAxD,EAAM,MAAM;AACV,UAAAiD,EAAW,SAAS,YAAW,GAC/BA,EAAW,UAAUO,IAAU7B,EAASa,EAASuC,GAAM;AAAA,YACrD,qBAAqBF,EAAuB;AAAA,YAC5C,WAAAY;AAAA,UACZ,CAAW,CAAC;AAAA,QACJ,CAAC,GACMjC;AAAA,MACT,GAAG,CAACP,GAAYtB,GAAUa,CAAQ,CAAC;AACnC,MAAA8B,EAAkCrB,CAAU;AAC5C,YAAMJ,IAAY5E,GAAmB8D,EAAQ,OAAOZ,IAAYW,CAAG,GAC7D4D,IAAU7D,EAAY,MAAM0C,EAA0BtB,CAAU,GAAG,CAACA,CAAU,CAAC;AACrF,aAAOc,EAAS,OAOP;AAAA,QACL,SAAAe;AAAA;AAAA;AAAA;AAAA,QAIA,SAAAY;AAAA,QACA,eAZoB,MACbZ,EAAQjC,GAAW,SAAS;AAAA,QAYnC,mBAVwB,MACjBiC,EAAQjC,GAAW,UAAU;AAAA,MAU9C,IACS,CAAC6C,GAASZ,GAASjC,CAAS,CAAC;AAAA,IAClC,GACM8C,IAAwBlC,EAAmBxC,GAAcQ,CAA6B;AAC5F,WAAO;AAAA,MACL,uBAAAkE;AAAA,MACA,8BAAAH;AAAA,MACA,iBAAiB1D,GAAKC,GAAS;AAC7B,cAAM;AAAA,UACJ,SAAA2D;AAAA,UACA,eAAAE;AAAA,UACA,mBAAAC;AAAA,QACV,IAAYL,EAA6B1D,GAAKC,CAAO,GACvCoD,IAAoBQ,EAAsB7D,GAAK;AAAA,UACnD,kBAAkBA,MAAQX,KAAaY,GAAS,OAAO,SAASzC;AAAA,UAChE,GAAGyC;AAAA,QACb,CAAS,GACKuD,IAAa7F,GAAK0F,GAAmB,GAAGtF,IAA0B,eAAe,iBAAiB;AACxG,eAAA0F,EAAcD,CAAU,GACjBvB,EAAS,OAAO;AAAA,UACrB,GAAGoB;AAAA,UACH,eAAAS;AAAA,UACA,mBAAAC;AAAA,UACA,SAAAH;AAAA,QACV,IAAY,CAACP,GAAmBS,GAAeC,GAAmBH,CAAO,CAAC;AAAA,MACpE;AAAA,IACN;AAAA,EACE;AACA,WAAS9E,EAAkBkF,GAAM;AAC/B,WAAO,CAAC;AAAA,MACN,kBAAAnC;AAAA,MACA,eAAAoC;AAAA,IACN,IAAQ,OAAO;AACT,YAAM;AAAA,QACJ,QAAAnC;AAAA,QACA,UAAApB;AAAA,MACR,IAAUzC,EAAI,UAAU+F,CAAI,GAChBnE,IAAW1B,EAAW,GACtB,CAACuD,GAASwC,CAAU,IAAIpB,GAAQ;AACtCxF,MAAAA,EAAW,MAAM,MAAM;AACrB,QAAKoE,GAAS,IAAI,iBAChBA,GAAS,MAAK;AAAA,MAElB,GAAG,CAACA,CAAO,CAAC;AACZ,YAAMyC,IAAkBpE,EAAY,SAASC,GAAK;AAChD,cAAMoE,IAAWvE,EAASa,EAASV,GAAK;AAAA,UACtC,eAAAiE;AAAA,QACV,CAAS,CAAC;AACF,eAAAC,EAAWE,CAAQ,GACZA;AAAA,MACT,GAAG,CAACvE,GAAUa,GAAUuD,CAAa,CAAC,GAChC;AAAA,QACJ,WAAA5C;AAAA,MACR,IAAUK,KAAW,CAAA,GACTM,IAAsBC,EAAS,MAAMH,EAAO;AAAA,QAChD,eAAAmC;AAAA,QACA,WAAWvC,GAAS;AAAA,MAC5B,CAAO,GAAG,CAACuC,GAAevC,GAASI,CAAM,CAAC,GAC9BuC,IAAmBpC,EAAS,MAAMJ,IAAmBtD,EAAe,CAACyD,CAAmB,GAAGH,CAAgB,IAAIG,GAAqB,CAACH,GAAkBG,CAAmB,CAAC,GAC3K/C,IAAeb,EAAYiG,GAAkBlC,CAAa,GAC1DmC,IAAeL,KAAiB,OAAOvC,GAAS,IAAI,eAAe,QACnEyB,IAAQpD,EAAY,MAAM;AAC9B,QAAA7B,EAAM,MAAM;AACV,UAAIwD,KACFwC,EAAW,MAAM,GAEfD,KACFpE,EAAS5B,EAAI,gBAAgB,qBAAqB;AAAA,YAChD,WAAAoD;AAAA,YACA,eAAA4C;AAAA,UACd,CAAa,CAAC;AAAA,QAEN,CAAC;AAAA,MACH,GAAG,CAACpE,GAAUoE,GAAevC,GAASL,CAAS,CAAC,GAC1CmC,IAAa7F,GAAKsB,GAAc,GAAGlB,IAA0B,cAAc;AACjF,MAAA0F,EAAcD,CAAU;AACxB,YAAMe,IAAatC,EAAS,OAAO;AAAA,QACjC,GAAGhD;AAAA,QACH,cAAAqF;AAAA,QACA,OAAAnB;AAAA,MACR,IAAU,CAAClE,GAAcqF,GAAcnB,CAAK,CAAC;AACvC,aAAOlB,EAAS,MAAM,CAACkC,GAAiBI,CAAU,GAAG,CAACJ,GAAiBI,CAAU,CAAC;AAAA,IACpF;AAAA,EACF;AACF;AAGA,IAAIC,KAAuC,uBAAM,GAC7CC,KAAmB,CAAC;AAAA,EACxB,OAAEvG,IAAQwG;AAAAA,EACR,OAAAC,IAAQ;AAAA,IACN,aAAaC;AAAAA,IACb,aAAaC;AAAAA,IACb,UAAUC;AAAAA,EACd;AAAA,EACA,gBAAEvG,IAAiBwG;AAAAA,EACjB,+BAAAzG,IAAgC;AAAA,EAChC,GAAGmC;AACL,IAAI,OAAO;AACT,MAAI,QAAQ,IAAI,aAAa,cAAc;AACzC,UAAMuE,IAAY,CAAC,eAAe,eAAe,UAAU;AAC3D,QAAIC,IAAS;AACb,eAAWC,KAAYF;AAUrB,UATIxJ,GAAgBiF,CAAI,IAAI,MACtBA,EAAKyE,CAAQ,MACVD,MACH,QAAQ,KAAK,uKAAuK,GACpLA,IAAS,MAGbN,EAAMO,CAAQ,IAAIzE,EAAKyE,CAAQ,IAE7B,OAAOP,EAAMO,CAAQ,KAAM;AAC7B,cAAM,IAAI,MAAM,QAAQ,IAAI,aAAa,eAAeC,GAAyB,EAAE,IAAI,4CAA4CH,EAAU,MAAM,+BAA+BA,EAAU,KAAK,IAAI,CAAC;AAAA,OACvME,CAAQ,6CAA6C;AAAA,EAG1D;AACA,SAAO;AAAA,IACL,MAAMV;AAAA,IACN,KAAKvG,GAAK;AAAA,MACR,oBAAAO;AAAA,IACN,GAAOC,GAAS;AACV,YAAM2G,IAASnH,GACT;AAAA,QACJ,iBAAAW;AAAA,QACA,yBAAAC;AAAA,QACA,mBAAAC;AAAA,QACA,aAAAC;AAAA,MACR,IAAUf,GAAW;AAAA,QACb,KAAAC;AAAA,QACA,eAAe;AAAA,UACvB,OAAUC;AAAAA,UACA,OAAAyG;AAAA,UACA,+BAAArG;AAAA,UACV,gBAAUC;AAAAA,QACV;AAAA,QACQ,oBAAAC;AAAA,QACA,SAAAC;AAAA,MACR,CAAO;AACD,aAAA1C,EAAWqJ,GAAQ;AAAA,QACjB,aAAArG;AAAA,MACR,CAAO,GACDhD,EAAW0C,GAAS;AAAA,QAC1B,OAAQP;AAAAA,MACR,CAAO,GACM;AAAA,QACL,eAAeiB,GAAckG,GAAY;AACvC,cAAIzJ,GAAkByJ,CAAU,GAAG;AACjC,kBAAM;AAAA,cACJ,UAAAC;AAAA,cACA,cAAAC;AAAA,cACA,0BAAA3C;AAAA,cACA,eAAAQ;AAAA,cACA,sBAAAT;AAAA,YACd,IAAgB/D,EAAgBO,CAAY;AAChC,YAAApD,EAAWqJ,EAAO,UAAUjG,CAAY,GAAG;AAAA,cACzC,UAAAmG;AAAA,cACA,cAAAC;AAAA,cACA,0BAAA3C;AAAA,cACA,eAAAQ;AAAA,cACA,sBAAAT;AAAA,YACd,CAAa,GACD1E,EAAI,MAAM3C,EAAW6D,CAAY,CAAC,OAAO,IAAImG,GAC7CrH,EAAI,UAAU3C,EAAW6D,CAAY,CAAC,OAAO,IAAIoG;AAAA,UACnD;AACA,cAAI1J,GAAqBwJ,CAAU,GAAG;AACpC,kBAAMG,IAAc1G,EAAkBK,CAAY;AAClD,YAAApD,EAAWqJ,EAAO,UAAUjG,CAAY,GAAG;AAAA,cACzC,aAAAqG;AAAA,YACd,CAAa,GACDvH,EAAI,MAAM3C,EAAW6D,CAAY,CAAC,UAAU,IAAIqG;AAAA,UAClD,WAAW1J,GAA0BuJ,CAAU,GAAG;AAChD,kBAAM;AAAA,cACJ,kBAAAI;AAAA,cACA,8BAAA/B;AAAA,cACA,uBAAAG;AAAA,YACd,IAAgBhF,EAAwBM,CAAY;AACxC,YAAApD,EAAWqJ,EAAO,UAAUjG,CAAY,GAAG;AAAA,cACzC,kBAAAsG;AAAA,cACA,8BAAA/B;AAAA,cACA,uBAAAG;AAAA,YACd,CAAa,GACD5F,EAAI,MAAM3C,EAAW6D,CAAY,CAAC,eAAe,IAAIsG;AAAA,UACvD;AAAA,QACF;AAAA,MACR;AAAA,IACI;AAAA,EACJ;AACA,GA6BIC,KAA4B,gBAAAC,GAAeC,GAAU,GAAInB,GAAgB,CAAE;AC3qB/E,MAAMoB,KAAW;AAAA;AAAA;AAAA;AAAA,EAIf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;ACgCA,SAAwBH,GAA2C;AAAA,EAAA,UACjEG,IAAW,CAAA;AACb,IAEI,IAYF;AACA,QAAMC,IAAQC,GAAe;AAAA,IAC3B,SAAS,GAAGC,EAAe;AAAA,IAC3B,aAAa;AAAA,IACb,gBAAgB,CAACC,GAASC,MAAa;AACrC,YAAM,EAAE,MAAAC,GAAM,KAAAnG,EAAA,IAAQkG,GAGhBE,IAAS,OAAOpG,KAAQ,WAAW,QAAQA,EAAI,UAAU;AAE/D,UAAImG,MAAS,cAAc,CAACE,GAAiBD,CAAM,GAAG;AACpD,cAAME,IAAYC,EAAA;AAClB,QAAID,KAAWL,EAAQ,IAAI,eAAeK,CAAS;AAAA,MACrD;AAEA,aAAOL;AAAA,IACT;AAAA,EAAA,CACD,GAEKhI,IAAMuI,GAAW;AAAA;AAAA,IAErB,WAAW,OAAOvK,GAA0BgC,GAAKwI,MAAiB;AAChE,UAAIxI,EAAI,SAAS,cAAcsI,EAAA,MAAoB,QAAW;AAE5D,cAAM,EAAE,OAAAG,EAAA,IAAU,MAAMZ;AAAA,UACtB,EAAE,KAAK,iBAAiB,QAAQ,MAAA;AAAA,UAChC7H;AAAAA,UACA,CAAA;AAAA,QAAC;AAIH,QAAIyI,MAAU,UACZ,QAAQ,MAAMA,CAAK,GAIjBH,EAAA;AAAA,MAIN;AAGA,aAAO,MAAMT,EAAM7J,GAAMgC,GAAKwI,CAAY;AAAA,IAC5C;AAAA,IACA,UAAU,CAAC,GAAGE,IAAiB,GAAGd,CAAQ;AAAA,IAC1C,WAAW,OAAO,CAAA;AAAA,EAAC,CACpB;AAED,SAAO5H,EAAI,gBAAgB;AAAA,IACzB,WAAW,CAAA2I,OAAU;AAAA,MACnB,QAAQC,GAAgC5I,GAAK2I,CAAK;AAAA,IAAA;AAAA,EACpD,CACD;AACH;","x_google_ignoreList":[0]}