{"version":3,"file":"index.cjs.js","sources":["../../node_modules/@reduxjs/toolkit/dist/query/react/rtk-query-react.modern.mjs","../../src/api/tagTypes.ts","../../src/api/createApi.ts"],"sourcesContent":["// src/query/react/index.ts\nimport { buildCreateApi, coreModule } from \"@reduxjs/toolkit/query\";\n\n// src/query/react/module.ts\nimport { formatProdErrorMessage as _formatProdErrorMessage3 } from \"@reduxjs/toolkit\";\nimport { batch as rrBatch, useDispatch as rrUseDispatch, useSelector as rrUseSelector, useStore as rrUseStore } from \"react-redux\";\nimport { createSelector as _createSelector } from \"reselect\";\n\n// src/query/utils/capitalize.ts\nfunction capitalize(str) {\n  return str.replace(str[0], str[0].toUpperCase());\n}\n\n// src/query/utils/countObjectKeys.ts\nfunction countObjectKeys(obj) {\n  let count = 0;\n  for (const _key in obj) {\n    count++;\n  }\n  return count;\n}\n\n// src/query/endpointDefinitions.ts\nfunction isQueryDefinition(e) {\n  return e.type === \"query\" /* query */;\n}\nfunction isMutationDefinition(e) {\n  return e.type === \"mutation\" /* mutation */;\n}\nfunction isInfiniteQueryDefinition(e) {\n  return e.type === \"infinitequery\" /* infinitequery */;\n}\n\n// src/query/tsHelpers.ts\nfunction safeAssign(target, ...args) {\n  return Object.assign(target, ...args);\n}\n\n// src/query/react/buildHooks.ts\nimport { formatProdErrorMessage as _formatProdErrorMessage, formatProdErrorMessage as _formatProdErrorMessage2 } from \"@reduxjs/toolkit\";\nimport { QueryStatus, skipToken } from \"@reduxjs/toolkit/query\";\nimport { useCallback, useDebugValue, useEffect as useEffect3, useLayoutEffect, useMemo as useMemo2, useRef as useRef3, useState } from \"react\";\nimport { shallowEqual as shallowEqual2 } from \"react-redux\";\n\n// src/query/react/constants.ts\nvar UNINITIALIZED_VALUE = Symbol();\n\n// src/query/react/useSerializedStableValue.ts\nimport { useEffect, useRef, useMemo } from \"react\";\nimport { copyWithStructuralSharing } from \"@reduxjs/toolkit/query\";\nfunction useStableQueryArgs(queryArgs) {\n  const cache = useRef(queryArgs);\n  const copy = useMemo(() => copyWithStructuralSharing(cache.current, queryArgs), [queryArgs]);\n  useEffect(() => {\n    if (cache.current !== copy) {\n      cache.current = copy;\n    }\n  }, [copy]);\n  return copy;\n}\n\n// src/query/react/useShallowStableValue.ts\nimport { useEffect as useEffect2, useRef as useRef2 } from \"react\";\nimport { shallowEqual } from \"react-redux\";\nfunction useShallowStableValue(value) {\n  const cache = useRef2(value);\n  useEffect2(() => {\n    if (!shallowEqual(cache.current, value)) {\n      cache.current = value;\n    }\n  }, [value]);\n  return shallowEqual(cache.current, value) ? cache.current : value;\n}\n\n// src/query/react/buildHooks.ts\nvar canUseDOM = () => !!(typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\nvar isDOM = /* @__PURE__ */ canUseDOM();\nvar isRunningInReactNative = () => typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\";\nvar isReactNative = /* @__PURE__ */ isRunningInReactNative();\nvar getUseIsomorphicLayoutEffect = () => isDOM || isReactNative ? useLayoutEffect : useEffect3;\nvar useIsomorphicLayoutEffect = /* @__PURE__ */ getUseIsomorphicLayoutEffect();\nvar noPendingQueryStateSelector = (selected) => {\n  if (selected.isUninitialized) {\n    return {\n      ...selected,\n      isUninitialized: false,\n      isFetching: true,\n      isLoading: selected.data !== void 0 ? false : true,\n      status: QueryStatus.pending\n    };\n  }\n  return selected;\n};\nfunction pick(obj, ...keys) {\n  const ret = {};\n  keys.forEach((key) => {\n    ret[key] = obj[key];\n  });\n  return ret;\n}\nvar COMMON_HOOK_DEBUG_FIELDS = [\"data\", \"status\", \"isLoading\", \"isSuccess\", \"isError\", \"error\"];\nfunction buildHooks({\n  api,\n  moduleOptions: {\n    batch,\n    hooks: {\n      useDispatch,\n      useSelector,\n      useStore\n    },\n    unstable__sideEffectsInRender,\n    createSelector\n  },\n  serializeQueryArgs,\n  context\n}) {\n  const usePossiblyImmediateEffect = unstable__sideEffectsInRender ? (cb) => cb() : useEffect3;\n  return {\n    buildQueryHooks,\n    buildInfiniteQueryHooks,\n    buildMutationHook,\n    usePrefetch\n  };\n  function queryStatePreSelector(currentState, lastResult, queryArgs) {\n    if (lastResult?.endpointName && currentState.isUninitialized) {\n      const {\n        endpointName\n      } = lastResult;\n      const endpointDefinition = context.endpointDefinitions[endpointName];\n      if (queryArgs !== skipToken && serializeQueryArgs({\n        queryArgs: lastResult.originalArgs,\n        endpointDefinition,\n        endpointName\n      }) === serializeQueryArgs({\n        queryArgs,\n        endpointDefinition,\n        endpointName\n      })) lastResult = void 0;\n    }\n    let data = currentState.isSuccess ? currentState.data : lastResult?.data;\n    if (data === void 0) data = currentState.data;\n    const hasData = data !== void 0;\n    const isFetching = currentState.isLoading;\n    const isLoading = (!lastResult || lastResult.isLoading || lastResult.isUninitialized) && !hasData && isFetching;\n    const isSuccess = currentState.isSuccess || hasData && (isFetching && !lastResult?.isError || currentState.isUninitialized);\n    return {\n      ...currentState,\n      data,\n      currentData: currentState.data,\n      isFetching,\n      isLoading,\n      isSuccess\n    };\n  }\n  function infiniteQueryStatePreSelector(currentState, lastResult, queryArgs) {\n    if (lastResult?.endpointName && currentState.isUninitialized) {\n      const {\n        endpointName\n      } = lastResult;\n      const endpointDefinition = context.endpointDefinitions[endpointName];\n      if (queryArgs !== skipToken && serializeQueryArgs({\n        queryArgs: lastResult.originalArgs,\n        endpointDefinition,\n        endpointName\n      }) === serializeQueryArgs({\n        queryArgs,\n        endpointDefinition,\n        endpointName\n      })) lastResult = void 0;\n    }\n    let data = currentState.isSuccess ? currentState.data : lastResult?.data;\n    if (data === void 0) data = currentState.data;\n    const hasData = data !== void 0;\n    const isFetching = currentState.isLoading;\n    const isLoading = (!lastResult || lastResult.isLoading || lastResult.isUninitialized) && !hasData && isFetching;\n    const isSuccess = currentState.isSuccess || isFetching && hasData;\n    return {\n      ...currentState,\n      data,\n      currentData: currentState.data,\n      isFetching,\n      isLoading,\n      isSuccess\n    };\n  }\n  function usePrefetch(endpointName, defaultOptions) {\n    const dispatch = useDispatch();\n    const stableDefaultOptions = useShallowStableValue(defaultOptions);\n    return useCallback((arg, options) => dispatch(api.util.prefetch(endpointName, arg, {\n      ...stableDefaultOptions,\n      ...options\n    })), [endpointName, dispatch, stableDefaultOptions]);\n  }\n  function useQuerySubscriptionCommonImpl(endpointName, arg, {\n    refetchOnReconnect,\n    refetchOnFocus,\n    refetchOnMountOrArgChange,\n    skip = false,\n    pollingInterval = 0,\n    skipPollingIfUnfocused = false,\n    ...rest\n  } = {}) {\n    const {\n      initiate\n    } = api.endpoints[endpointName];\n    const dispatch = useDispatch();\n    const subscriptionSelectorsRef = useRef3(void 0);\n    if (!subscriptionSelectorsRef.current) {\n      const returnedValue = dispatch(api.internalActions.internal_getRTKQSubscriptions());\n      if (process.env.NODE_ENV !== \"production\") {\n        if (typeof returnedValue !== \"object\" || typeof returnedValue?.type === \"string\") {\n          throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage(37) : `Warning: Middleware for RTK-Query API at reducerPath \"${api.reducerPath}\" has not been added to the store.\n    You must add the middleware for RTK-Query to function correctly!`);\n        }\n      }\n      subscriptionSelectorsRef.current = returnedValue;\n    }\n    const stableArg = useStableQueryArgs(skip ? skipToken : arg);\n    const stableSubscriptionOptions = useShallowStableValue({\n      refetchOnReconnect,\n      refetchOnFocus,\n      pollingInterval,\n      skipPollingIfUnfocused\n    });\n    const initialPageParam = rest.initialPageParam;\n    const stableInitialPageParam = useShallowStableValue(initialPageParam);\n    const promiseRef = useRef3(void 0);\n    let {\n      queryCacheKey,\n      requestId\n    } = promiseRef.current || {};\n    let currentRenderHasSubscription = false;\n    if (queryCacheKey && requestId) {\n      currentRenderHasSubscription = subscriptionSelectorsRef.current.isRequestSubscribed(queryCacheKey, requestId);\n    }\n    const subscriptionRemoved = !currentRenderHasSubscription && promiseRef.current !== void 0;\n    usePossiblyImmediateEffect(() => {\n      if (subscriptionRemoved) {\n        promiseRef.current = void 0;\n      }\n    }, [subscriptionRemoved]);\n    usePossiblyImmediateEffect(() => {\n      const lastPromise = promiseRef.current;\n      if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"removeMeOnCompilation\") {\n        console.log(subscriptionRemoved);\n      }\n      if (stableArg === skipToken) {\n        lastPromise?.unsubscribe();\n        promiseRef.current = void 0;\n        return;\n      }\n      const lastSubscriptionOptions = promiseRef.current?.subscriptionOptions;\n      if (!lastPromise || lastPromise.arg !== stableArg) {\n        lastPromise?.unsubscribe();\n        const promise = dispatch(initiate(stableArg, {\n          subscriptionOptions: stableSubscriptionOptions,\n          forceRefetch: refetchOnMountOrArgChange,\n          ...isInfiniteQueryDefinition(context.endpointDefinitions[endpointName]) ? {\n            initialPageParam: stableInitialPageParam\n          } : {}\n        }));\n        promiseRef.current = promise;\n      } else if (stableSubscriptionOptions !== lastSubscriptionOptions) {\n        lastPromise.updateSubscriptionOptions(stableSubscriptionOptions);\n      }\n    }, [dispatch, initiate, refetchOnMountOrArgChange, stableArg, stableSubscriptionOptions, subscriptionRemoved, stableInitialPageParam, endpointName]);\n    return [promiseRef, dispatch, initiate, stableSubscriptionOptions];\n  }\n  function buildUseQueryState(endpointName, preSelector) {\n    const useQueryState = (arg, {\n      skip = false,\n      selectFromResult\n    } = {}) => {\n      const {\n        select\n      } = api.endpoints[endpointName];\n      const stableArg = useStableQueryArgs(skip ? skipToken : arg);\n      const lastValue = useRef3(void 0);\n      const selectDefaultResult = useMemo2(() => (\n        // Normally ts-ignores are bad and should be avoided, but we're\n        // already casting this selector to be `Selector<any>` anyway,\n        // so the inconsistencies don't matter here\n        // @ts-ignore\n        createSelector([\n          // @ts-ignore\n          select(stableArg),\n          (_, lastResult) => lastResult,\n          (_) => stableArg\n        ], preSelector, {\n          memoizeOptions: {\n            resultEqualityCheck: shallowEqual2\n          }\n        })\n      ), [select, stableArg]);\n      const querySelector = useMemo2(() => selectFromResult ? createSelector([selectDefaultResult], selectFromResult, {\n        devModeChecks: {\n          identityFunctionCheck: \"never\"\n        }\n      }) : selectDefaultResult, [selectDefaultResult, selectFromResult]);\n      const currentState = useSelector((state) => querySelector(state, lastValue.current), shallowEqual2);\n      const store = useStore();\n      const newLastValue = selectDefaultResult(store.getState(), lastValue.current);\n      useIsomorphicLayoutEffect(() => {\n        lastValue.current = newLastValue;\n      }, [newLastValue]);\n      return currentState;\n    };\n    return useQueryState;\n  }\n  function usePromiseRefUnsubscribeOnUnmount(promiseRef) {\n    useEffect3(() => {\n      return () => {\n        promiseRef.current?.unsubscribe?.();\n        promiseRef.current = void 0;\n      };\n    }, [promiseRef]);\n  }\n  function refetchOrErrorIfUnmounted(promiseRef) {\n    if (!promiseRef.current) throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage2(38) : \"Cannot refetch a query that has not been started yet.\");\n    return promiseRef.current.refetch();\n  }\n  function buildQueryHooks(endpointName) {\n    const useQuerySubscription = (arg, options = {}) => {\n      const [promiseRef] = useQuerySubscriptionCommonImpl(endpointName, arg, options);\n      usePromiseRefUnsubscribeOnUnmount(promiseRef);\n      return useMemo2(() => ({\n        /**\n         * A method to manually refetch data for the query\n         */\n        refetch: () => refetchOrErrorIfUnmounted(promiseRef)\n      }), [promiseRef]);\n    };\n    const useLazyQuerySubscription = ({\n      refetchOnReconnect,\n      refetchOnFocus,\n      pollingInterval = 0,\n      skipPollingIfUnfocused = false\n    } = {}) => {\n      const {\n        initiate\n      } = api.endpoints[endpointName];\n      const dispatch = useDispatch();\n      const [arg, setArg] = useState(UNINITIALIZED_VALUE);\n      const promiseRef = useRef3(void 0);\n      const stableSubscriptionOptions = useShallowStableValue({\n        refetchOnReconnect,\n        refetchOnFocus,\n        pollingInterval,\n        skipPollingIfUnfocused\n      });\n      usePossiblyImmediateEffect(() => {\n        const lastSubscriptionOptions = promiseRef.current?.subscriptionOptions;\n        if (stableSubscriptionOptions !== lastSubscriptionOptions) {\n          promiseRef.current?.updateSubscriptionOptions(stableSubscriptionOptions);\n        }\n      }, [stableSubscriptionOptions]);\n      const subscriptionOptionsRef = useRef3(stableSubscriptionOptions);\n      usePossiblyImmediateEffect(() => {\n        subscriptionOptionsRef.current = stableSubscriptionOptions;\n      }, [stableSubscriptionOptions]);\n      const trigger = useCallback(function(arg2, preferCacheValue = false) {\n        let promise;\n        batch(() => {\n          promiseRef.current?.unsubscribe();\n          promiseRef.current = promise = dispatch(initiate(arg2, {\n            subscriptionOptions: subscriptionOptionsRef.current,\n            forceRefetch: !preferCacheValue\n          }));\n          setArg(arg2);\n        });\n        return promise;\n      }, [dispatch, initiate]);\n      const reset = useCallback(() => {\n        if (promiseRef.current?.queryCacheKey) {\n          dispatch(api.internalActions.removeQueryResult({\n            queryCacheKey: promiseRef.current?.queryCacheKey\n          }));\n        }\n      }, [dispatch]);\n      useEffect3(() => {\n        return () => {\n          promiseRef?.current?.unsubscribe();\n        };\n      }, []);\n      useEffect3(() => {\n        if (arg !== UNINITIALIZED_VALUE && !promiseRef.current) {\n          trigger(arg, true);\n        }\n      }, [arg, trigger]);\n      return useMemo2(() => [trigger, arg, {\n        reset\n      }], [trigger, arg, reset]);\n    };\n    const useQueryState = buildUseQueryState(endpointName, queryStatePreSelector);\n    return {\n      useQueryState,\n      useQuerySubscription,\n      useLazyQuerySubscription,\n      useLazyQuery(options) {\n        const [trigger, arg, {\n          reset\n        }] = useLazyQuerySubscription(options);\n        const queryStateResults = useQueryState(arg, {\n          ...options,\n          skip: arg === UNINITIALIZED_VALUE\n        });\n        const info = useMemo2(() => ({\n          lastArg: arg\n        }), [arg]);\n        return useMemo2(() => [trigger, {\n          ...queryStateResults,\n          reset\n        }, info], [trigger, queryStateResults, reset, info]);\n      },\n      useQuery(arg, options) {\n        const querySubscriptionResults = useQuerySubscription(arg, options);\n        const queryStateResults = useQueryState(arg, {\n          selectFromResult: arg === skipToken || options?.skip ? void 0 : noPendingQueryStateSelector,\n          ...options\n        });\n        const debugValue = pick(queryStateResults, ...COMMON_HOOK_DEBUG_FIELDS);\n        useDebugValue(debugValue);\n        return useMemo2(() => ({\n          ...queryStateResults,\n          ...querySubscriptionResults\n        }), [queryStateResults, querySubscriptionResults]);\n      }\n    };\n  }\n  function buildInfiniteQueryHooks(endpointName) {\n    const useInfiniteQuerySubscription = (arg, options = {}) => {\n      const [promiseRef, dispatch, initiate, stableSubscriptionOptions] = useQuerySubscriptionCommonImpl(endpointName, arg, options);\n      const subscriptionOptionsRef = useRef3(stableSubscriptionOptions);\n      usePossiblyImmediateEffect(() => {\n        subscriptionOptionsRef.current = stableSubscriptionOptions;\n      }, [stableSubscriptionOptions]);\n      const trigger = useCallback(function(arg2, direction) {\n        let promise;\n        batch(() => {\n          promiseRef.current?.unsubscribe();\n          promiseRef.current = promise = dispatch(initiate(arg2, {\n            subscriptionOptions: subscriptionOptionsRef.current,\n            direction\n          }));\n        });\n        return promise;\n      }, [promiseRef, dispatch, initiate]);\n      usePromiseRefUnsubscribeOnUnmount(promiseRef);\n      const stableArg = useStableQueryArgs(options.skip ? skipToken : arg);\n      const refetch = useCallback(() => refetchOrErrorIfUnmounted(promiseRef), [promiseRef]);\n      return useMemo2(() => {\n        const fetchNextPage = () => {\n          return trigger(stableArg, \"forward\");\n        };\n        const fetchPreviousPage = () => {\n          return trigger(stableArg, \"backward\");\n        };\n        return {\n          trigger,\n          /**\n           * A method to manually refetch data for the query\n           */\n          refetch,\n          fetchNextPage,\n          fetchPreviousPage\n        };\n      }, [refetch, trigger, stableArg]);\n    };\n    const useInfiniteQueryState = buildUseQueryState(endpointName, infiniteQueryStatePreSelector);\n    return {\n      useInfiniteQueryState,\n      useInfiniteQuerySubscription,\n      useInfiniteQuery(arg, options) {\n        const {\n          refetch,\n          fetchNextPage,\n          fetchPreviousPage\n        } = useInfiniteQuerySubscription(arg, options);\n        const queryStateResults = useInfiniteQueryState(arg, {\n          selectFromResult: arg === skipToken || options?.skip ? void 0 : noPendingQueryStateSelector,\n          ...options\n        });\n        const debugValue = pick(queryStateResults, ...COMMON_HOOK_DEBUG_FIELDS, \"hasNextPage\", \"hasPreviousPage\");\n        useDebugValue(debugValue);\n        return useMemo2(() => ({\n          ...queryStateResults,\n          fetchNextPage,\n          fetchPreviousPage,\n          refetch\n        }), [queryStateResults, fetchNextPage, fetchPreviousPage, refetch]);\n      }\n    };\n  }\n  function buildMutationHook(name) {\n    return ({\n      selectFromResult,\n      fixedCacheKey\n    } = {}) => {\n      const {\n        select,\n        initiate\n      } = api.endpoints[name];\n      const dispatch = useDispatch();\n      const [promise, setPromise] = useState();\n      useEffect3(() => () => {\n        if (!promise?.arg.fixedCacheKey) {\n          promise?.reset();\n        }\n      }, [promise]);\n      const triggerMutation = useCallback(function(arg) {\n        const promise2 = dispatch(initiate(arg, {\n          fixedCacheKey\n        }));\n        setPromise(promise2);\n        return promise2;\n      }, [dispatch, initiate, fixedCacheKey]);\n      const {\n        requestId\n      } = promise || {};\n      const selectDefaultResult = useMemo2(() => select({\n        fixedCacheKey,\n        requestId: promise?.requestId\n      }), [fixedCacheKey, promise, select]);\n      const mutationSelector = useMemo2(() => selectFromResult ? createSelector([selectDefaultResult], selectFromResult) : selectDefaultResult, [selectFromResult, selectDefaultResult]);\n      const currentState = useSelector(mutationSelector, shallowEqual2);\n      const originalArgs = fixedCacheKey == null ? promise?.arg.originalArgs : void 0;\n      const reset = useCallback(() => {\n        batch(() => {\n          if (promise) {\n            setPromise(void 0);\n          }\n          if (fixedCacheKey) {\n            dispatch(api.internalActions.removeMutationResult({\n              requestId,\n              fixedCacheKey\n            }));\n          }\n        });\n      }, [dispatch, fixedCacheKey, promise, requestId]);\n      const debugValue = pick(currentState, ...COMMON_HOOK_DEBUG_FIELDS, \"endpointName\");\n      useDebugValue(debugValue);\n      const finalState = useMemo2(() => ({\n        ...currentState,\n        originalArgs,\n        reset\n      }), [currentState, originalArgs, reset]);\n      return useMemo2(() => [triggerMutation, finalState], [triggerMutation, finalState]);\n    };\n  }\n}\n\n// src/query/react/module.ts\nvar reactHooksModuleName = /* @__PURE__ */ Symbol();\nvar reactHooksModule = ({\n  batch = rrBatch,\n  hooks = {\n    useDispatch: rrUseDispatch,\n    useSelector: rrUseSelector,\n    useStore: rrUseStore\n  },\n  createSelector = _createSelector,\n  unstable__sideEffectsInRender = false,\n  ...rest\n} = {}) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    const hookNames = [\"useDispatch\", \"useSelector\", \"useStore\"];\n    let warned = false;\n    for (const hookName of hookNames) {\n      if (countObjectKeys(rest) > 0) {\n        if (rest[hookName]) {\n          if (!warned) {\n            console.warn(\"As of RTK 2.0, the hooks now need to be specified as one object, provided under a `hooks` key:\\n`reactHooksModule({ hooks: { useDispatch, useSelector, useStore } })`\");\n            warned = true;\n          }\n        }\n        hooks[hookName] = rest[hookName];\n      }\n      if (typeof hooks[hookName] !== \"function\") {\n        throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage3(36) : `When using custom hooks for context, all ${hookNames.length} hooks need to be provided: ${hookNames.join(\", \")}.\nHook ${hookName} was either not provided or not a function.`);\n      }\n    }\n  }\n  return {\n    name: reactHooksModuleName,\n    init(api, {\n      serializeQueryArgs\n    }, context) {\n      const anyApi = api;\n      const {\n        buildQueryHooks,\n        buildInfiniteQueryHooks,\n        buildMutationHook,\n        usePrefetch\n      } = buildHooks({\n        api,\n        moduleOptions: {\n          batch,\n          hooks,\n          unstable__sideEffectsInRender,\n          createSelector\n        },\n        serializeQueryArgs,\n        context\n      });\n      safeAssign(anyApi, {\n        usePrefetch\n      });\n      safeAssign(context, {\n        batch\n      });\n      return {\n        injectEndpoint(endpointName, definition) {\n          if (isQueryDefinition(definition)) {\n            const {\n              useQuery,\n              useLazyQuery,\n              useLazyQuerySubscription,\n              useQueryState,\n              useQuerySubscription\n            } = buildQueryHooks(endpointName);\n            safeAssign(anyApi.endpoints[endpointName], {\n              useQuery,\n              useLazyQuery,\n              useLazyQuerySubscription,\n              useQueryState,\n              useQuerySubscription\n            });\n            api[`use${capitalize(endpointName)}Query`] = useQuery;\n            api[`useLazy${capitalize(endpointName)}Query`] = useLazyQuery;\n          }\n          if (isMutationDefinition(definition)) {\n            const useMutation = buildMutationHook(endpointName);\n            safeAssign(anyApi.endpoints[endpointName], {\n              useMutation\n            });\n            api[`use${capitalize(endpointName)}Mutation`] = useMutation;\n          } else if (isInfiniteQueryDefinition(definition)) {\n            const {\n              useInfiniteQuery,\n              useInfiniteQuerySubscription,\n              useInfiniteQueryState\n            } = buildInfiniteQueryHooks(endpointName);\n            safeAssign(anyApi.endpoints[endpointName], {\n              useInfiniteQuery,\n              useInfiniteQuerySubscription,\n              useInfiniteQueryState\n            });\n            api[`use${capitalize(endpointName)}InfiniteQuery`] = useInfiniteQuery;\n          }\n        }\n      };\n    }\n  };\n};\n\n// src/query/react/index.ts\nexport * from \"@reduxjs/toolkit/query\";\n\n// src/query/react/ApiProvider.tsx\nimport { configureStore, formatProdErrorMessage as _formatProdErrorMessage4 } from \"@reduxjs/toolkit\";\nimport { useContext } from \"react\";\nimport { useEffect as useEffect4 } from \"react\";\nimport * as React from \"react\";\nimport { Provider, ReactReduxContext } from \"react-redux\";\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\nfunction ApiProvider(props) {\n  const context = props.context || ReactReduxContext;\n  const existingContext = useContext(context);\n  if (existingContext) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? _formatProdErrorMessage4(35) : \"Existing Redux context detected. If you already have a store set up, please use the traditional Redux setup.\");\n  }\n  const [store] = React.useState(() => configureStore({\n    reducer: {\n      [props.api.reducerPath]: props.api.reducer\n    },\n    middleware: (gDM) => gDM().concat(props.api.middleware)\n  }));\n  useEffect4(() => props.setupListeners === false ? void 0 : setupListeners(store.dispatch, props.setupListeners), [props.setupListeners, store.dispatch]);\n  return /* @__PURE__ */ React.createElement(Provider, { store, context }, props.children);\n}\n\n// src/query/react/index.ts\nvar createApi = /* @__PURE__ */ buildCreateApi(coreModule(), reactHooksModule());\nexport {\n  ApiProvider,\n  UNINITIALIZED_VALUE,\n  createApi,\n  reactHooksModule,\n  reactHooksModuleName\n};\n//# sourceMappingURL=rtk-query-react.modern.mjs.map","const tagTypes = [\n  // These are the tags for the common models used throughout our system.\n  // https://github.com/ocadotechnology/codeforlife-package-python/tree/main/codeforlife/user/models\n  // NOTE: Don't use the \"Teacher\" and \"Student\" tags. Use \"User\" instead.\n  \"User\",\n  \"School\",\n  \"Class\",\n  \"AuthFactor\",\n] as const\n\nexport default tagTypes\nexport type TagTypes = (typeof tagTypes)[number]\n","import {\n  type Api,\n  type BaseQueryApi,\n  type FetchArgs,\n  type FetchBaseQueryError,\n  type FetchBaseQueryMeta,\n  type MutationDefinition,\n  type QueryReturnValue,\n  createApi as _createApi,\n  type coreModuleName,\n  fetchBaseQuery,\n  type reactHooksModuleName,\n} from \"@reduxjs/toolkit/query/react\"\n\nimport defaultTagTypes, { type TagTypes as DefaultTagTypes } from \"./tagTypes\"\nimport { SERVICE_API_URL } from \"../settings\"\nimport { buildLogoutEndpoint } from \"./endpoints/session\"\nimport { getCsrfCookie } from \"../utils/auth\"\nimport { isSafeHttpMethod } from \"../utils/api\"\n\n// TODO: decide if we want to keep any of this.\n// export function handleResponseError(error: FetchBaseQueryError): void {\n//   if (\n//     error.status === 400 &&\n//     typeof error.data === \"object\" &&\n//     error.data !== null\n//   ) {\n//     // Parse the error's data from snake_case to camelCase.\n//     snakeCaseToCamelCase(error.data)\n//   } else if (error.status === 401) {\n//     // TODO: redirect to appropriate login page based on user type.\n//     window.location.href = `${PORTAL_BASE_URL}/login/teacher`\n//   } else {\n//     // Catch-all error pages by status-code.\n//     window.location.href = `${PORTAL_BASE_URL}/error/${\n//       [403, 404].includes(error.status as number) ? error.status : 500\n//     }`\n//   }\n// }\n\nexport default function createApi<TagTypes extends string = never>({\n  tagTypes = [],\n}: {\n  tagTypes?: readonly TagTypes[]\n} = {}): Api<\n  (\n    args: string | FetchArgs,\n    api: BaseQueryApi,\n    extraOptions: {},\n  ) => Promise<\n    QueryReturnValue<unknown, FetchBaseQueryError, FetchBaseQueryMeta>\n  >,\n  { logout: MutationDefinition<null, any, any, null, any, any> },\n  \"api\",\n  TagTypes | DefaultTagTypes,\n  typeof coreModuleName | typeof reactHooksModuleName\n> {\n  const fetch = fetchBaseQuery({\n    baseUrl: `${SERVICE_API_URL}/`,\n    credentials: \"include\",\n    prepareHeaders: (headers, endpoint) => {\n      const { type, arg } = endpoint as typeof endpoint & {\n        arg: string | FetchArgs\n      }\n      const method = typeof arg === \"string\" ? \"GET\" : arg.method || \"GET\"\n\n      if (type === \"mutation\" || !isSafeHttpMethod(method)) {\n        const csrfToken = getCsrfCookie()\n        if (csrfToken) headers.set(\"x-csrftoken\", csrfToken)\n      }\n\n      return headers\n    },\n  })\n\n  const api = _createApi({\n    // https://redux-toolkit.js.org/rtk-query/usage/customizing-queries#implementing-a-custom-basequery\n    baseQuery: async (args: string | FetchArgs, api, extraOptions) => {\n      if (api.type === \"mutation\" && getCsrfCookie() === undefined) {\n        // Get the CSRF token.\n        const { error } = await fetch(\n          { url: \"/csrf/cookie/\", method: \"GET\" },\n          api,\n          {},\n        )\n\n        // Validate we got the CSRF token.\n        if (error !== undefined) {\n          console.error(error)\n          // TODO\n          // window.location.href = `${PORTAL_BASE_URL}/error/500`\n        }\n        if (getCsrfCookie() === undefined) {\n          // TODO\n          // window.location.href = `${PORTAL_BASE_URL}/error/500`\n        }\n      }\n\n      // Send the HTTP request and fetch the response.\n      return await fetch(args, api, extraOptions)\n    },\n    tagTypes: [...defaultTagTypes, ...tagTypes],\n    endpoints: () => ({}),\n  })\n\n  return api.injectEndpoints({\n    endpoints: build => ({\n      logout: buildLogoutEndpoint<null, null>(api, build),\n    }),\n  })\n}\n"],"names":["capitalize","str","countObjectKeys","obj","count","_key","isQueryDefinition","isMutationDefinition","isInfiniteQueryDefinition","safeAssign","target","args","UNINITIALIZED_VALUE","useStableQueryArgs","queryArgs","cache","useRef","copy","useMemo","copyWithStructuralSharing","useEffect","useShallowStableValue","value","useRef2","useEffect2","shallowEqual","canUseDOM","isDOM","isRunningInReactNative","isReactNative","getUseIsomorphicLayoutEffect","useLayoutEffect","useEffect3","useIsomorphicLayoutEffect","noPendingQueryStateSelector","selected","QueryStatus","pick","keys","ret","key","COMMON_HOOK_DEBUG_FIELDS","buildHooks","api","batch","useDispatch","useSelector","useStore","unstable__sideEffectsInRender","createSelector","serializeQueryArgs","context","usePossiblyImmediateEffect","cb","buildQueryHooks","buildInfiniteQueryHooks","buildMutationHook","usePrefetch","queryStatePreSelector","currentState","lastResult","endpointName","endpointDefinition","skipToken","data","hasData","isFetching","isLoading","isSuccess","infiniteQueryStatePreSelector","defaultOptions","dispatch","stableDefaultOptions","useCallback","arg","options","useQuerySubscriptionCommonImpl","refetchOnReconnect","refetchOnFocus","refetchOnMountOrArgChange","skip","pollingInterval","skipPollingIfUnfocused","rest","initiate","subscriptionSelectorsRef","useRef3","returnedValue","_formatProdErrorMessage","stableArg","stableSubscriptionOptions","initialPageParam","stableInitialPageParam","promiseRef","queryCacheKey","requestId","currentRenderHasSubscription","subscriptionRemoved","lastPromise","lastSubscriptionOptions","promise","buildUseQueryState","preSelector","selectFromResult","select","lastValue","selectDefaultResult","useMemo2","_","shallowEqual2","querySelector","state","store","newLastValue","usePromiseRefUnsubscribeOnUnmount","refetchOrErrorIfUnmounted","_formatProdErrorMessage2","useQuerySubscription","useLazyQuerySubscription","setArg","useState","subscriptionOptionsRef","trigger","arg2","preferCacheValue","reset","useQueryState","queryStateResults","info","querySubscriptionResults","debugValue","useDebugValue","useInfiniteQuerySubscription","direction","refetch","useInfiniteQueryState","fetchNextPage","fetchPreviousPage","name","fixedCacheKey","setPromise","triggerMutation","promise2","mutationSelector","originalArgs","finalState","reactHooksModuleName","reactHooksModule","rrBatch","hooks","rrUseDispatch","rrUseSelector","rrUseStore","_createSelector","hookNames","warned","hookName","_formatProdErrorMessage3","anyApi","definition","useQuery","useLazyQuery","useMutation","useInfiniteQuery","createApi","buildCreateApi","coreModule","tagTypes","fetch","fetchBaseQuery","SERVICE_API_URL","headers","endpoint","type","method","isSafeHttpMethod","csrfToken","getCsrfCookie","_createApi","extraOptions","error","defaultTagTypes","build","buildLogoutEndpoint"],"mappings":"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","x_google_ignoreList":[0]}