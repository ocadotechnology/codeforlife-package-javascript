"use strict";var m=Object.create;var l=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var S=(i,s,a,t)=>{if(s&&typeof s=="object"||typeof s=="function")for(let e of C(s))!k.call(i,e)&&e!==a&&l(i,e,{get:()=>s[e],enumerable:!(t=u(s,e))||t.enumerable});return i};var o=(i,s,a)=>(a=i!=null?m(v(i)):{},S(s||!i||!i.__esModule?l(a,"default",{value:i,enumerable:!0}):a,i));const y=require("memory-cache"),w=require("express"),p={};class f{envIsProduction;templateHtml;hostname;mode;port;base;app;cache;healthCheckCacheKey;healthCheckCacheTimeout;healthCheckStatusCodes;constructor({mode:s,port:a,base:t}={}){this.envIsProduction=process.env.NODE_ENV==="production",this.templateHtml="",this.hostname=this.envIsProduction?"0.0.0.0":"127.0.0.1",this.mode=s||process.env.MODE||"development",this.port=a||(process.env.PORT?Number(process.env.PORT):this.envIsProduction?8080:5173),this.base=t||process.env.BASE||"/",this.app=w(),this.cache=new y.Cache,this.healthCheckCacheKey="health-check",this.healthCheckCacheTimeout=3e4,this.healthCheckStatusCodes={healthy:200,startingUp:503,shuttingDown:503,unhealthy:503,unknown:503}}getHealthCheck(s){return{healthStatus:"healthy",additionalInfo:"All healthy."}}handleHealthCheck(s,a){let t=this.cache.get(this.healthCheckCacheKey);if(t===null){const e=this.getHealthCheck(s);e.healthStatus!=="healthy"&&console.warn(`health check: ${JSON.stringify(e)}`),t={appId:process.env.APP_ID||"REPLACE_ME",healthStatus:e.healthStatus,lastCheckedTimestamp:new Date().toISOString(),additionalInformation:e.additionalInfo,startupTimestamp:new Date().toISOString(),appVersion:process.env.APP_VERSION||"REPLACE_ME",details:e.details||[]},this.cache.put(this.healthCheckCacheKey,t,this.healthCheckCacheTimeout)}a.status(this.healthCheckStatusCodes[t.healthStatus]).json(t)}async handleServeHtml(s,a,t,e){try{const h=s.originalUrl.replace(this.base,""),[n,r]=await t(h),c=await n(h),d=r.replace("<!--app-head-->",c.head??"").replace("<!--app-html-->",c.html??"");a.status(200).set({"Content-Type":"text/html"}).send(d)}catch(h){if(h instanceof Error){console.error(h.stack);const n=e(h);a.status(500).end(n)}}}async run(){this.app.get("/health-check",(t,e)=>{this.handleHealthCheck(t,e)});let s,a;if(this.envIsProduction){const t=(await import("compression")).default,e=(await import("sirv")).default;this.templateHtml=await p.readFile("./dist/client/index.html","utf-8"),this.app.use(t()),this.app.use(this.base,e("./dist/client",{extensions:[]})),s=async()=>{const h=(await import("../../../dist/server/entry-server.js")).render,n=this.templateHtml;return[h,n]},a=()=>{}}else{const{createServer:t}=await import("vite"),e=await t({server:{middlewareMode:!0},appType:"custom",base:this.base,mode:this.mode});this.app.use(e.middlewares),s=async h=>{const n=(await e.ssrLoadModule("/src/entry-server.tsx")).render;let r=await p.readFile("./index.html","utf-8");return r=await e.transformIndexHtml(h,r),[n,r]},a=h=>(e.ssrFixStacktrace(h),h.stack)}this.app.get("*",async(t,e)=>{await this.handleServeHtml(t,e,s,a)}),this.app.listen(this.port,this.hostname,()=>{let t=`Server started.
url: http://${this.hostname}:${this.port}
environment: ${process.env.NODE_ENV}
`;this.envIsProduction||(t+=`mode: ${this.mode}
`),console.log(t)})}}module.exports=f;
//# sourceMappingURL=server.cjs.js.map
