{"version":3,"file":"auth-DQRI3Kbu.js","sources":["../src/utils/auth.ts"],"sourcesContent":["import Cookies from \"js-cookie\"\n\nimport {\n  CSRF_COOKIE_NAME,\n  SESSION_COOKIE_NAME,\n  SESSION_METADATA_COOKIE_NAME,\n} from \"../settings\"\nimport { generateSecureRandomString } from \"./general\"\n\nexport function logout() {\n  Cookies.remove(SESSION_COOKIE_NAME)\n  Cookies.remove(SESSION_METADATA_COOKIE_NAME)\n}\n\n// https://docs.djangoproject.com/en/3.2/ref/csrf/\nexport function getCsrfCookie() {\n  return Cookies.get(CSRF_COOKIE_NAME)\n}\n\nexport function makeOAuth2StorageKey(provider: string, key: string) {\n  return `oauth2.${provider}.${key}`\n}\n\nexport const OAUTH2_CODE_CHALLENGE_METHODS = [\"S256\"] as const\n\nexport type OAuth2CodeChallengeMethods =\n  (typeof OAUTH2_CODE_CHALLENGE_METHODS)[number]\n\nexport const OAUTH2_CODE_CHALLENGE_LENGTHS = [\n  43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\n  62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n  81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,\n  100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,\n  115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128,\n] as const\n\nexport type OAuth2CodeChallengeLengths =\n  (typeof OAUTH2_CODE_CHALLENGE_LENGTHS)[number]\n\nexport type OAuth2RequestCodeUrlSearchParams = {\n  client_id: string\n  redirect_uri: string\n  scope: string\n  response_type: string\n  access_type: string\n  prompt?: string\n  state: string\n  code_challenge: string\n  code_challenge_method: string\n}\n\nexport type OAuth2ReceiveCodeUrlSearchParams = {\n  code: string\n  state: string\n}\n\nexport type OAuth2CodeChallenge = {\n  verifier: string\n  challenge: string\n  method: OAuth2CodeChallengeMethods\n}\n\nexport async function generateOAuth2CodeChallenge(\n  length: OAuth2CodeChallengeLengths,\n): Promise<OAuth2CodeChallenge> {\n  const verifier = generateSecureRandomString(length)\n  const data = new TextEncoder().encode(verifier)\n  const digest = await window.crypto.subtle.digest(\"SHA-256\", data)\n\n  return {\n    verifier,\n    challenge: btoa(String.fromCharCode(...new Uint8Array(digest)))\n      .replace(/\\+/g, \"-\")\n      .replace(/\\//g, \"_\")\n      .replace(/=+$/, \"\"),\n    method: \"S256\",\n  }\n}\n"],"names":["logout","Cookies","SESSION_COOKIE_NAME","SESSION_METADATA_COOKIE_NAME","getCsrfCookie","CSRF_COOKIE_NAME","makeOAuth2StorageKey","provider","key","OAUTH2_CODE_CHALLENGE_METHODS","OAUTH2_CODE_CHALLENGE_LENGTHS","generateOAuth2CodeChallenge","length","verifier","generateSecureRandomString","data","digest"],"mappings":";;;AASO,SAASA,IAAS;AACvB,EAAAC,EAAQ,OAAOC,CAAmB,GAClCD,EAAQ,OAAOE,CAA4B;AAC7C;AAGO,SAASC,IAAgB;AAC9B,SAAOH,EAAQ,IAAII,CAAgB;AACrC;AAEO,SAASC,EAAqBC,GAAkBC,GAAa;AAClE,SAAO,UAAUD,CAAQ,IAAIC,CAAG;AAClC;AAEO,MAAMC,IAAgC,CAAC,MAAM,GAKvCC,IAAgC;AAAA,EAC3C;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EACxE;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EACxE;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EACxE;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EACtE;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AAAA,EAAK;AACnE;AA4BA,eAAsBC,EACpBC,GAC8B;AAC9B,QAAMC,IAAWC,EAA2BF,CAAM,GAC5CG,IAAO,IAAI,cAAc,OAAOF,CAAQ,GACxCG,IAAS,MAAM,OAAO,OAAO,OAAO,OAAO,WAAWD,CAAI;AAEhE,SAAO;AAAA,IACL,UAAAF;AAAA,IACA,WAAW,KAAK,OAAO,aAAa,GAAG,IAAI,WAAWG,CAAM,CAAC,CAAC,EAC3D,QAAQ,OAAO,GAAG,EAClB,QAAQ,OAAO,GAAG,EAClB,QAAQ,OAAO,EAAE;AAAA,IACpB,QAAQ;AAAA,EAAA;AAEZ;;;;;;;;;;"}