{"version":3,"file":"index.es.js","sources":["../../src/components/ClickableTooltip.tsx","../../src/components/CopyIconButton.tsx","../../src/components/DownloadFileButton.tsx","../../src/components/ElevatedAppBar.tsx","../../src/components/InputFileButton.tsx","../../src/components/ItemizedList.tsx","../../src/components/OrderedGrid.tsx","../../src/components/ScrollIntoViewLink.tsx","../../src/components/TablePagination.tsx","../../src/components/YouTubeVideo.tsx"],"sourcesContent":["import { Tooltip, type TooltipProps } from \"@mui/material\"\nimport React from \"react\"\n\nimport { wrap } from \"../utils/general\"\n\nexport interface ClickableTooltipProps extends TooltipProps {}\n\nconst ClickableTooltip: React.FC<ClickableTooltipProps> = ({\n  open = false,\n  onClick,\n  ...otherTooltipProps\n}) => {\n  const [_open, _setOpen] = React.useState(open)\n\n  React.useEffect(() => {\n    _setOpen(open)\n  }, [open])\n\n  return (\n    <Tooltip\n      open={_open}\n      onMouseOver={() => {\n        if (!_open) {\n          _setOpen(true)\n        }\n      }}\n      onMouseLeave={() => {\n        _setOpen(false)\n      }}\n      onClick={wrap(\n        {\n          after: () => {\n            _setOpen(!_open)\n          },\n        },\n        onClick,\n      )}\n      {...otherTooltipProps}\n    />\n  )\n}\n\nexport default ClickableTooltip\n","import { IconButton, type IconButtonProps } from \"@mui/material\"\nimport { ContentCopy as ContentCopyIcon } from \"@mui/icons-material\"\nimport type { FC } from \"react\"\n\nexport interface CopyIconButtonProps extends Omit<IconButtonProps, \"onClick\"> {\n  content: string\n}\n\nconst CopyIconButton: FC<CopyIconButtonProps> = ({\n  content,\n  children = <ContentCopyIcon />,\n  ...otherIconButtonProps\n}) => {\n  return (\n    <IconButton\n      data-testid=\"copy-icon-button\"\n      onClick={() => {\n        void navigator.clipboard.writeText(content)\n      }}\n      {...otherIconButtonProps}\n    >\n      {children}\n    </IconButton>\n  )\n}\n\nexport default CopyIconButton\n","import { Button, type ButtonProps } from \"@mui/material\"\nimport { type FC, useEffect } from \"react\"\nimport { Download as DownloadIcon } from \"@mui/icons-material\"\n\nexport type DownloadFileButtonProps = ButtonProps & {\n  file:\n    | Blob\n    | MediaSource\n    | {\n        text: string\n        mimeType: \"plain\" | \"csv\"\n        name: string\n        charset?: string\n        extension?: string\n      }\n}\n\nconst DownloadFileButton: FC<DownloadFileButtonProps> = ({\n  children = \"Download\",\n  endIcon = <DownloadIcon />,\n  file,\n  ...otherButtonProps\n}) => {\n  let url: undefined | string = undefined\n  let anchorProps: undefined | { download?: string; href: string } = undefined\n  if (\"mimeType\" in file) {\n    const { text, mimeType, name, charset = \"utf-8\" } = file\n    let { extension } = file\n\n    if (!extension) extension = \".\" + { plain: \"txt\", csv: \"csv\" }[mimeType]\n\n    anchorProps = {\n      download: name + extension,\n      href: `data:text/${mimeType};charset=${charset},${encodeURIComponent(text)}`,\n    }\n  } else {\n    url = URL.createObjectURL(file)\n\n    anchorProps = { href: url }\n  }\n\n  useEffect(() => {\n    return () => {\n      if (url) URL.revokeObjectURL(url)\n    }\n  }, [url])\n\n  return (\n    <Button endIcon={endIcon} {...otherButtonProps} {...anchorProps}>\n      {children}\n    </Button>\n  )\n}\n\nexport default DownloadFileButton\n","import {\n  AppBar,\n  type AppBarProps,\n  Container,\n  type ContainerProps,\n  Toolbar,\n  type ToolbarProps,\n  useScrollTrigger,\n} from \"@mui/material\"\nimport { type FC, cloneElement } from \"react\"\n\nexport interface ElevatedAppBarProps extends Omit<AppBarProps, \"position\"> {\n  containerProps: ContainerProps\n  toolbarProps?: ToolbarProps\n}\n\nconst ElevatedAppBar: FC<ElevatedAppBarProps> = ({\n  containerProps,\n  toolbarProps,\n  elevation = 4,\n  children,\n  ...otherProps\n}) => {\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  })\n\n  return cloneElement(\n    <AppBar elevation={elevation} {...otherProps}>\n      <Container {...containerProps}>\n        <Toolbar {...toolbarProps}>{children}</Toolbar>\n      </Container>\n    </AppBar>,\n    {\n      position: trigger ? \"fixed\" : \"sticky\",\n    },\n  )\n}\n\nexport default ElevatedAppBar\n","import { Button, type ButtonProps } from \"@mui/material\"\nimport {\n  type DetailedHTMLProps,\n  type FC,\n  type InputHTMLAttributes,\n} from \"react\"\n\nexport interface InputFileButtonProps\n  extends Omit<ButtonProps<\"label\">, \"component\"> {\n  inputProps?: Omit<\n    DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>,\n    \"type\" | \"hidden\"\n  >\n}\n\nconst InputFileButton: FC<InputFileButtonProps> = ({\n  children,\n  inputProps,\n  ...otherButtonProps\n}) => (\n  <Button component=\"label\" {...otherButtonProps}>\n    {children}\n    <input type=\"file\" hidden {...inputProps} />\n  </Button>\n)\n\nexport default InputFileButton\n","import { type FC, type ReactElement } from \"react\"\nimport {\n  List,\n  type ListItem,\n  type ListItemText,\n  type ListProps,\n} from \"@mui/material\"\n\ntype ListItemElement =\n  | ReactElement<typeof ListItem | typeof ListItemText>\n  | string\n\nexport interface ItemizedListProps {\n  styleType:\n    | \"unset\"\n    | \"initial\"\n    | \"inherit\"\n    | \"upper-roman\"\n    | \"upper-latin\"\n    | \"upper-alpha\"\n    | \"square\"\n    | \"none\"\n    | \"lower-roman\"\n    | \"lower-latin\"\n    | \"lower-greek\"\n    | \"lower-alpha\"\n    | \"georgian\"\n    | \"disc\"\n    | \"decimal-leading-zero\"\n    | \"decimal\"\n    | \"armenian\"\n    | \"circle\"\n  listProps?: ListProps\n  pl?: number\n  children: ListItemElement | ListItemElement[]\n}\n\nconst ItemizedList: FC<ItemizedListProps> = ({\n  styleType,\n  listProps = {},\n  pl = 4,\n  children,\n}) => {\n  const { sx, ...otherProps } = listProps\n  const listItemProps = { display: \"list-item\" }\n\n  return (\n    <List\n      sx={{\n        listStyleType: styleType,\n        pl,\n        \".MuiListItem-root\": listItemProps,\n        \".MuiListItemText-root\": listItemProps,\n        ...sx,\n      }}\n      {...otherProps}\n    >\n      {children}\n    </List>\n  )\n}\n\nexport default ItemizedList\n","import { type FC, type ReactElement } from \"react\"\nimport { Grid, type GridProps } from \"@mui/material\"\n\ninterface ItemProps\n  extends Omit<GridProps, \"key\" | \"order\" | \"size\" | \"offset\"> {}\n\ninterface GlobalItemProps extends ItemProps {\n  size: {\n    xs: number\n    sm: number\n    md: number\n    lg: number\n    xl: number\n  }\n}\n\nexport interface OrderedGridProps {\n  rows: Array<\n    Array<{\n      element: ReactElement\n      itemProps?: ItemProps\n    }>\n  >\n  containerProps?: Omit<GridProps, \"container\">\n  globalItemProps: GlobalItemProps\n}\n\nconst OrderedGrid: FC<OrderedGridProps> = ({\n  rows,\n  containerProps = {},\n  globalItemProps,\n}) => {\n  const columns = Number(containerProps.columns ?? 12)\n\n  const getItemsPerRow = (size: number): number => Math.floor(columns / size)\n\n  const getOrder = (\n    rowIndex: number,\n    itemIndex: number,\n    size: number,\n  ): number =>\n    Math.floor(itemIndex / getItemsPerRow(size)) * rows.length + rowIndex\n\n  const getOffset = (itemIndex: number, size: number): number => {\n    const itemsOnLastRow = rows[0].length % getItemsPerRow(size)\n    return itemsOnLastRow !== 0 && itemIndex === rows[0].length - 1\n      ? (columns - itemsOnLastRow * size) / 2\n      : 0\n  }\n\n  return (\n    <Grid container {...containerProps}>\n      {rows.map((row, rowIndex) =>\n        row.map(({ element, itemProps = {} }, itemIndex) => (\n          <Grid\n            key={`${rowIndex}-${itemIndex}`}\n            order={{\n              xs: getOrder(rowIndex, itemIndex, globalItemProps.size.xs),\n              sm: getOrder(rowIndex, itemIndex, globalItemProps.size.sm),\n              md: getOrder(rowIndex, itemIndex, globalItemProps.size.md),\n              lg: getOrder(rowIndex, itemIndex, globalItemProps.size.lg),\n              xl: getOrder(rowIndex, itemIndex, globalItemProps.size.xl),\n            }}\n            offset={{\n              xs: getOffset(itemIndex, globalItemProps.size.xs),\n              sm: getOffset(itemIndex, globalItemProps.size.sm),\n              md: getOffset(itemIndex, globalItemProps.size.md),\n              lg: getOffset(itemIndex, globalItemProps.size.lg),\n              xl: getOffset(itemIndex, globalItemProps.size.xl),\n            }}\n            {...globalItemProps}\n            {...itemProps}\n          >\n            {element}\n          </Grid>\n        )),\n      )}\n    </Grid>\n  )\n}\n\nexport default OrderedGrid\n","import { Link, type LinkProps } from \"@mui/material\"\nimport { type FC } from \"react\"\nexport interface ScrollIntoViewLinkProps extends Omit<LinkProps, \"onClick\"> {\n  elementId: string\n  options?: ScrollIntoViewOptions\n}\n\nconst ScrollIntoViewLink: FC<ScrollIntoViewLinkProps> = ({\n  elementId,\n  options,\n  ...linkProps\n}) => (\n  <Link\n    {...linkProps}\n    onClick={() => {\n      const element = document.getElementById(elementId)\n      element?.scrollIntoView(options)\n    }}\n  />\n)\n\nexport default ScrollIntoViewLink\n","import {\n  type ElementType,\n  type JSX,\n  type JSXElementConstructor,\n  type ReactNode,\n  useEffect,\n} from \"react\"\nimport {\n  TablePagination as MuiTablePagination,\n  type TablePaginationProps as MuiTablePaginationProps,\n  Stack,\n  type StackProps,\n  type TablePaginationBaseProps,\n} from \"@mui/material\"\nimport type { TypedUseLazyQuery } from \"@reduxjs/toolkit/query/react\"\n\nimport { type ListArg, type ListResult, handleResultState } from \"../utils/api\"\nimport { type Pagination, usePagination } from \"../hooks/api\"\n\nexport type TablePaginationProps<\n  QueryArg extends ListArg,\n  ResultType extends ListResult<any>,\n  RootComponent extends\n    ElementType = JSXElementConstructor<TablePaginationBaseProps>,\n  AdditionalProps = {},\n> = Omit<\n  MuiTablePaginationProps<RootComponent, AdditionalProps>,\n  | \"component\"\n  | \"count\"\n  | \"rowsPerPage\"\n  | \"onRowsPerPageChange\"\n  | \"rowsPerPageOptions\"\n  | \"page\"\n  | \"onPageChange\"\n> &\n  Partial<\n    Pick<\n      MuiTablePaginationProps<RootComponent, AdditionalProps>,\n      \"onRowsPerPageChange\" | \"onPageChange\"\n    >\n  > & {\n    children: (\n      data: ResultType[\"data\"],\n      pagination: Pagination & { count?: number; maxLimit?: number },\n    ) => ReactNode\n    useLazyListQuery: TypedUseLazyQuery<ResultType, QueryArg, any>\n    preferCacheValue?: boolean\n    filters?: Omit<QueryArg, \"limit\" | \"offset\">\n    rowsPerPageOptions?: number[]\n    stackProps?: StackProps\n    page?: number\n    rowsPerPage?: number\n  }\n\nconst TablePagination = <\n  QueryArg extends ListArg,\n  ResultType extends ListResult<any>,\n  RootComponent extends\n    ElementType = JSXElementConstructor<TablePaginationBaseProps>,\n  AdditionalProps = {},\n>({\n  children,\n  useLazyListQuery,\n  preferCacheValue,\n  filters,\n  page: initialPage = 0,\n  rowsPerPage: initialLimit = 50,\n  rowsPerPageOptions = [50, 100, 150],\n  stackProps,\n  onRowsPerPageChange,\n  onPageChange,\n  ...tablePaginationProps\n}: TablePaginationProps<\n  QueryArg,\n  ResultType,\n  RootComponent,\n  AdditionalProps\n>): JSX.Element => {\n  const [trigger, result] = useLazyListQuery()\n  const [{ limit, page, offset }, setPagination] = usePagination({\n    page: initialPage,\n    limit: initialLimit,\n  })\n\n  useEffect(\n    () => {\n      void trigger({ limit, offset, ...filters } as QueryArg, preferCacheValue)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      trigger,\n      limit,\n      offset,\n      // eslint-disable-next-line react-hooks/exhaustive-deps,@typescript-eslint/no-unsafe-assignment\n      ...Object.values(filters || {}),\n      preferCacheValue,\n    ],\n  )\n\n  const { count, max_limit } = result.data || {}\n\n  if (max_limit) {\n    rowsPerPageOptions = rowsPerPageOptions.filter(\n      option => option <= max_limit,\n    )\n  }\n\n  return (\n    <Stack {...stackProps}>\n      {handleResultState(result, ({ data }) =>\n        children(data, {\n          limit,\n          page,\n          offset,\n          count,\n          maxLimit: max_limit,\n        }),\n      )}\n      <MuiTablePagination\n        component=\"div\"\n        count={count ?? 0}\n        rowsPerPage={limit}\n        onRowsPerPageChange={event => {\n          setPagination({ limit: parseInt(event.target.value), page: 0 })\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n          if (onRowsPerPageChange) onRowsPerPageChange(event)\n        }}\n        page={page}\n        onPageChange={(event, page) => {\n          setPagination(({ limit }) => ({ limit, page }))\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n          if (onPageChange) onPageChange(event, page)\n        }}\n        // ascending order\n        rowsPerPageOptions={rowsPerPageOptions.sort((a, b) => a - b)}\n        {...tablePaginationProps}\n      />\n    </Stack>\n  )\n}\n\nexport default TablePagination\n","import { Box, type BoxProps } from \"@mui/material\"\nimport { type FC } from \"react\"\n\nexport interface YouTubeVideoProps extends Omit<BoxProps, \"component\"> {\n  src: string\n}\n\nconst YouTubeVideo: FC<YouTubeVideoProps> = ({\n  src,\n  style = {},\n  ...otherProps\n}) => {\n  return (\n    <Box\n      component=\"iframe\"\n      width=\"100%\"\n      src={src}\n      title=\"YouTube video player\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\"\n      style={{ border: \"0px\", aspectRatio: \"16 / 9\", ...style }}\n      {...otherProps}\n    />\n  )\n}\n\nexport default YouTubeVideo\n"],"names":["ClickableTooltip","open","onClick","otherTooltipProps","_open","_setOpen","React","jsx","Tooltip","wrap","CopyIconButton","content","children","ContentCopyIcon","otherIconButtonProps","IconButton","DownloadFileButton","endIcon","DownloadIcon","file","otherButtonProps","url","anchorProps","text","mimeType","name","charset","extension","useEffect","Button","ElevatedAppBar","containerProps","toolbarProps","elevation","otherProps","trigger","useScrollTrigger","cloneElement","AppBar","Container","Toolbar","InputFileButton","inputProps","jsxs","ItemizedList","styleType","listProps","pl","sx","listItemProps","List","OrderedGrid","rows","globalItemProps","columns","getItemsPerRow","size","getOrder","rowIndex","itemIndex","getOffset","itemsOnLastRow","Grid","row","element","itemProps","ScrollIntoViewLink","elementId","options","linkProps","Link","TablePagination","useLazyListQuery","preferCacheValue","filters","initialPage","initialLimit","rowsPerPageOptions","stackProps","onRowsPerPageChange","onPageChange","tablePaginationProps","result","limit","page","offset","setPagination","usePagination","count","max_limit","option","Stack","handleResultState","data","MuiTablePagination","event","a","b","YouTubeVideo","src","style","Box"],"mappings":"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"}